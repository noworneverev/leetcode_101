"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[8716],{3388:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"binary-search-techniques/3-3-interval-search","title":"3.3 \u67e5\u627e\u533a\u95f4","description":"34. Find First and Last Position of Element in Sorted Array","source":"@site/docs/3-binary-search-techniques/3-3-interval-search.mdx","sourceDirName":"3-binary-search-techniques","slug":"/binary-search-techniques/3-3-interval-search","permalink":"/leetcode_101/binary-search-techniques/3-3-interval-search","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/3-binary-search-techniques/3-3-interval-search.mdx","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"3.2 \u6c42\u5f00\u65b9","permalink":"/leetcode_101/binary-search-techniques/3-2-square-root"},"next":{"title":"3.4 \u67e5\u627e\u5cf0\u503c","permalink":"/leetcode_101/binary-search-techniques/3-4-peak-finding"}}');var i=r(4848),s=r(8453);const l={sidebar_position:13},a="3.3 \u67e5\u627e\u533a\u95f4",o={},d=[{value:"34. Find First and Last Position of Element in Sorted Array",id:"34-find-first-and-last-position-of-element-in-sorted-array",level:2},{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:3},{value:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",level:3},{value:"\u9898\u89e3",id:"\u9898\u89e3",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components},{TabItem:r,Tabs:t}=n;return r||h("TabItem",!0),t||h("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"33-\u67e5\u627e\u533a\u95f4",children:"3.3 \u67e5\u627e\u533a\u95f4"})}),"\n",(0,i.jsx)(n.h2,{id:"34-find-first-and-last-position-of-element-in-sorted-array",children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/",children:"34. Find First and Last Position of Element in Sorted Array"})}),"\n",(0,i.jsx)(n.h3,{id:"\u9898\u76ee\u63cf\u8ff0",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,i.jsx)(n.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u589e\u5e8f\u7684\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u503c\uff0c\u67e5\u627e\u8be5\u503c\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",children:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b"}),"\n",(0,i.jsx)(n.p,{children:"\u8f93\u5165\u662f\u4e00\u4e2a\u6570\u7ec4\u548c\u4e00\u4e2a\u503c\uff0c\u8f93\u51fa\u4e3a\u8be5\u503c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u4ece 0 \u5f00\u59cb\uff09\uff1b\u5982\u679c\u4e0d\u5b58\u5728\u8be5\u503c\uff0c\u5219\u4e24\u4e2a\u8fd4\u56de\u503c\u90fd\u8bbe\u4e3a-1\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Input: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u6570\u5b57 8 \u5728\u7b2c 3 \u4f4d\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5728\u7b2c 4 \u4f4d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u9898\u89e3",children:"\u9898\u89e3"}),"\n",(0,i.jsx)(n.p,{children:"\u8fd9\u9053\u9898\u53ef\u4ee5\u770b\u4f5c\u662f\u81ea\u5df1\u5b9e\u73b0 C++ \u91cc\u7684 lower_bound\u548c upper_bound\u51fd\u6570\uff0c\u6216\u8005 Python \u91cc\u7684 bisect_left \u548c bisect_right \u51fd\u6570\u3002\u8fd9\u91cc\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u5de6\u95ed\u53f3\u5f00\u7684\u5199\u6cd5\uff0c\u5f53\u7136\u5de6\u95ed\u53f3\u95ed\u4e5f\u53ef\u4ee5\u3002"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(r,{value:"cpp",label:"C++",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"int lowerBound(vector<int> &nums, int target) {\n    int l = 0, r = nums.size(), mid;\n    while (l < r) {\n        mid = l + (r - l) / 2;\n        if (nums[mid] < target) {\n            l = mid + 1;\n        } else {\n            r = mid;\n        }\n    }\n    return l;\n}\n\nint upperBound(vector<int> &nums, int target) {\n    int l = 0, r = nums.size(), mid;\n    while (l < r) {\n        mid = l + (r - l) / 2;\n        if (nums[mid] <= target) {\n            l = mid + 1;\n        } else {\n            r = mid;\n        }\n    }\n    return l;\n}\n\nvector<int> searchRange(vector<int> &nums, int target) {\n    if (nums.empty()) {\n        return vector<int>{-1, -1};\n    }\n    int lower = lowerBound(nums, target);\n    int upper = upperBound(nums, target) - 1;\n    if (lower == nums.size() || nums[lower] != target) {\n        return vector<int>{-1, -1};\n    }\n    return vector<int>{lower, upper};\n}\n"})})}),(0,i.jsx)(r,{value:"py",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"def lowerBound(nums: List[int], target: int) -> int:\n    l, r = 0, len(nums)\n    while l < r:\n        mid = (l + r) // 2\n        if nums[mid] < target:\n            l = mid + 1\n        else:\n            r = mid\n    return l\n\ndef upperBound(nums: List[int], target: int) -> int:\n    l, r = 0, len(nums)\n    while l < r:\n        mid = (l + r) // 2\n        if nums[mid] <= target:\n            l = mid + 1\n        else:\n            r = mid\n    return l\n\ndef searchRange(nums: List[int], target: int) -> List[int]:\n    if not nums:\n        return [-1, -1]\n    lower = lowerBound(nums, target)\n    upper = upperBound(nums, target) - 1\n    if lower == len(nums) or nums[lower] != target:\n        return [-1, -1]\n    return [lower, upper]\n"})})})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);