"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[8671],{2059:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"searching-algorithms/5-2-depth-first-search","title":"5.2 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22","description":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08depth-\ufb01rst search\uff0cDFS\uff09\u5728\u641c\u7d22\u5230\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u65f6\uff0c\u7acb\u5373\u5bf9\u8be5\u65b0\u8282\u70b9\u8fdb\u884c\u904d\u5386\uff1b\u56e0\u6b64\u904d\u5386\u9700\u8981\u7528\u5148\u5165\u540e\u51fa\u7684\u6808\uff08stack\uff09\u6765\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0e\u6808\u7b49\u4ef7\u7684\u9012\u5f52\u6765\u5b9e\u73b0\u3002\u5bf9\u4e8e\u6811\u7ed3\u6784\u800c\u8a00\uff0c\u7531\u4e8e\u603b\u662f\u5bf9\u65b0\u8282\u70b9\u8c03\u7528\u904d\u5386\uff0c\u56e0\u6b64\u770b\u8d77\u6765\u662f\u5411\u7740\u201c\u6df1\u201d\u7684\u65b9\u5411\u524d\u8fdb\u3002\u5728 Python \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 collections.deque \u6765\u5b9e\u73b0 C++ \u4e2d\u7684 stack\u3002\u4f46\u662f\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u662f\u4f1a\u9009\u7528 C++ \u4e2d\u7684 vector \u6216 Python \u4e2d\u7684 list \u6765\u5b9e\u73b0\u6808\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e2\u662f\u5148\u5165\u540e\u51fa\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53c8\u80fd\u652f\u6301\u968f\u673a\u67e5\u627e\u3002","source":"@site/docs/5-searching-algorithms/5-2-depth-first-search.mdx","sourceDirName":"5-searching-algorithms","slug":"/searching-algorithms/5-2-depth-first-search","permalink":"/leetcode_101/searching-algorithms/5-2-depth-first-search","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":22,"frontMatter":{"sidebar_position":22},"sidebar":"tutorialSidebar","previous":{"title":"5.1 \u7b97\u6cd5\u89e3\u91ca","permalink":"/leetcode_101/searching-algorithms/5-1-algorithm-explanation"},"next":{"title":"5.3 \u56de\u6eaf\u6cd5","permalink":"/leetcode_101/searching-algorithms/5-3-backtracking"}}');var a=i(4848),c=i(8453);const t={sidebar_position:22},s="5.2 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22",d={},l=[{value:"695. Max Area of Island",id:"695-max-area-of-island",level:2},{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:3},{value:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",level:3},{value:"\u9898\u89e3",id:"\u9898\u89e3",level:3},{value:"547. Number of Provinces",id:"547-number-of-provinces",level:2},{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0-1",level:3},{value:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b-1",level:3},{value:"\u9898\u89e3",id:"\u9898\u89e3-1",level:3},{value:"417. Paci\ufb01c Atlantic Water Flow",id:"417-paci\ufb01c-atlantic-water-flow",level:2},{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0-2",level:3},{value:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b-2",level:3},{value:"\u9898\u89e3",id:"\u9898\u89e3-2",level:3}];function o(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,c.R)(),...n.components},{TabItem:i,Tabs:r}=e;return i||x("TabItem",!0),r||x("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"52-\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",children:"5.2 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"}),"\uff08depth-\ufb01rst search\uff0cDFS\uff09\u5728\u641c\u7d22\u5230\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u65f6\uff0c\u7acb\u5373\u5bf9\u8be5\u65b0\u8282\u70b9\u8fdb\u884c\u904d\u5386\uff1b\u56e0\u6b64\u904d\u5386\u9700\u8981\u7528",(0,a.jsx)(e.code,{children:"\u5148\u5165\u540e\u51fa\u7684\u6808\uff08stack\uff09"}),"\u6765\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0e\u6808\u7b49\u4ef7\u7684",(0,a.jsx)(e.code,{children:"\u9012\u5f52"}),"\u6765\u5b9e\u73b0\u3002\u5bf9\u4e8e\u6811\u7ed3\u6784\u800c\u8a00\uff0c\u7531\u4e8e\u603b\u662f\u5bf9\u65b0\u8282\u70b9\u8c03\u7528\u904d\u5386\uff0c\u56e0\u6b64\u770b\u8d77\u6765\u662f\u5411\u7740\u201c\u6df1\u201d\u7684\u65b9\u5411\u524d\u8fdb\u3002\u5728 Python \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 collections.deque \u6765\u5b9e\u73b0 C++ \u4e2d\u7684 stack\u3002\u4f46\u662f\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u662f\u4f1a\u9009\u7528 C++ \u4e2d\u7684 vector \u6216 Python \u4e2d\u7684 list \u6765\u5b9e\u73b0\u6808\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e2\u662f\u5148\u5165\u540e\u51fa\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53c8\u80fd\u652f\u6301\u968f\u673a\u67e5\u627e\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u8003\u8651\u5982\u4e0b\u4e00\u9897\u7b80\u5355\u7684\u6811\uff0c\u6211\u4eec\u4ece 1 \u53f7\u8282\u70b9\u5f00\u59cb\u904d\u5386\u3002\u5047\u5982\u904d\u5386\u987a\u5e8f\u662f\u4ece\u5de6\u5b50\u8282\u70b9\u5230\u53f3\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u6309\u7167\u4f18\u5148\u5411\u7740\u201c\u6df1\u201d\u7684\u65b9\u5411\u524d\u8fdb\u7684\u7b56\u7565\uff0c\u5219\u904d\u5386\u8fc7\u7a0b\u4e3a 1\uff08\u8d77\u59cb\u8282\u70b9\uff09->2\uff08\u904d\u5386\u66f4\u6df1\u4e00\u5c42\u7684\u5de6\u5b50\u8282\u70b9\uff09->4\uff08\u904d\u5386\u66f4\u6df1\u4e00\u5c42\u7684\u5de6\u5b50\u8282\u70b9\uff09->2\uff08\u65e0\u5b50\u8282\u70b9\uff0c\u8fd4\u56de\u7236\u7ed3\u70b9\uff09->1\uff08\u5b50\u8282\u70b9\u5747\u5df2\u5b8c\u6210\u904d\u5386\uff0c\u8fd4\u56de\u7236\u7ed3\u70b9\uff09->3\uff08\u904d\u5386\u66f4\u6df1\u4e00\u5c42\u7684\u53f3\u5b50\u8282\u70b9\uff09->1\uff08\u65e0\u5b50\u8282\u70b9\uff0c\u8fd4\u56de\u7236\u7ed3\u70b9\uff09-> \u7ed3\u675f\u7a0b\u5e8f\uff08\u5b50\u8282\u70b9\u5747\u5df2\u5b8c\u6210\u904d\u5386\uff09\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u6808\u5b9e\u73b0\uff0c\u6211\u4eec\u7684\u6808\u9876\u5143\u7d20\u7684\u53d8\u5316\u8fc7\u7a0b\u4e3a 1->2->4->3\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"    1\n   / \\\n  2   3\n /\n4\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u4e5f\u53ef\u4ee5\u7528\u6765",(0,a.jsx)(e.code,{children:"\u68c0\u6d4b\u73af\u8def"}),"\uff1a\u8bb0\u5f55\u6bcf\u4e2a\u904d\u5386\u8fc7\u7684\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u82e5\u4e00\u4e2a\u8282\u70b9\u88ab\u518d\u6b21\u904d\u5386\u4e14\u7236\u8282\u70b9\u4e0d\u540c\uff0c\u5219\u8bf4\u660e\u6709\u73af\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u4e4b\u540e\u4f1a\u8bb2\u5230\u7684\u62d3\u6251\u6392\u5e8f\u5224\u65ad\u662f\u5426\u6709\u73af\u8def\uff0c\u82e5\u6700\u540e\u5b58\u5728\u5165\u5ea6\u4e0d\u4e3a\u96f6\u7684\u70b9\uff0c\u5219\u8bf4\u660e\u6709\u73af\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u6709\u65f6\u6211\u4eec\u53ef\u80fd\u4f1a\u9700\u8981\u5bf9\u5df2\u7ecf\u641c\u7d22\u8fc7\u7684\u8282\u70b9\u8fdb\u884c\u6807\u8bb0\uff0c\u4ee5\u9632\u6b62\u5728\u904d\u5386\u65f6\u91cd\u590d\u641c\u7d22\u67d0\u4e2a\u8282\u70b9\uff0c\u8fd9\u79cd\u505a\u6cd5\u53eb\u505a",(0,a.jsx)(e.code,{children:"\u72b6\u6001\u8bb0\u5f55"}),"\u6216",(0,a.jsx)(e.code,{children:"\u8bb0\u5fc6\u5316"}),"\uff08memoization\uff09\u3002"]}),"\n",(0,a.jsx)(e.h2,{id:"695-max-area-of-island",children:(0,a.jsx)(e.a,{href:"https://leetcode.com/problems/max-area-of-island/",children:"695. Max Area of Island"})}),"\n",(0,a.jsx)(e.h3,{id:"\u9898\u76ee\u63cf\u8ff0",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,a.jsx)(e.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7684 0-1 \u77e9\u9635\uff0c\u5176\u4e2d 0 \u8868\u793a\u6d77\u6d0b\uff0c1 \u8868\u793a\u9646\u5730\u3002\u5355\u72ec\u7684\u6216\u76f8\u90bb\u7684\u9646\u5730\u53ef\u4ee5\u5f62\u6210\u5c9b\u5c7f\uff0c\u6bcf\u4e2a\u683c\u5b50\u53ea\u4e0e\u5176\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u683c\u5b50\u76f8\u90bb\u3002\u6c42\u6700\u5927\u7684\u5c9b\u5c7f\u9762\u79ef\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",children:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b"}),"\n",(0,a.jsx)(e.p,{children:"\u8f93\u5165\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u7684\u5c9b\u5c7f\u9762\u79ef\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"Input:\n[[1,0,1,1,0,1,0,1],\n [1,0,1,1,0,1,1,1],\n [0,0,0,0,0,0,0,1]]\nOutput: 6\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u6700\u5927\u7684\u5c9b\u5c7f\u9762\u79ef\u4e3a 6\uff0c\u4f4d\u4e8e\u6700\u53f3\u4fa7\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u9898\u89e3",children:"\u9898\u89e3"}),"\n",(0,a.jsx)(e.p,{children:"\u6b64\u9898\u662f\u5341\u5206\u6807\u51c6\u7684\u641c\u7d22\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u62ff\u6765\u7ec3\u624b\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7c7b\u578b\u7684\u9898\u53ef\u4ee5\u5206\u4e3a\u4e3b\u51fd\u6570\u548c\u8f85\u51fd\u6570\uff0c\u4e3b\u51fd\u6570\u7528\u4e8e\u904d\u5386\u6240\u6709\u7684\u641c\u7d22\u4f4d\u7f6e\uff0c\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5f00\u59cb\u641c\u7d22\uff0c\u5982\u679c\u53ef\u4ee5\u5373\u5728\u8f85\u51fd\u6570\u8fdb\u884c\u641c\u7d22\u3002\u8f85\u51fd\u6570\u5219\u8d1f\u8d23\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u9012\u5f52\u8c03\u7528\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6808\uff08stack\uff09\u5b9e\u73b0\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u4f46\u56e0\u4e3a\u6808\u4e0e\u9012\u5f52\u7684\u8c03\u7528\u539f\u7406\u76f8\u540c\uff0c\u800c\u9012\u5f52\u76f8\u5bf9\u4fbf\u4e8e\u5b9e\u73b0\uff0c\u56e0\u6b64\u5237\u9898\u65f6\u7b14\u8005\u63a8\u8350\u4f7f\u7528\u9012\u5f52\u5f0f\u5199\u6cd5\uff0c\u540c\u65f6\u4e5f\u65b9\u4fbf\u8fdb\u884c\u56de\u6eaf\uff08\u89c1\u4e0b\u8282\uff09\u3002\u4e0d\u8fc7\u5728\u5b9e\u9645\u5de5\u7a0b\u4e0a\uff0c\u76f4\u63a5\u4f7f\u7528\u6808\u53ef\u80fd\u624d\u662f\u6700\u597d\u7684\u9009\u62e9\uff0c\u4e00\u662f\u56e0\u4e3a\u4fbf\u4e8e\u7406\u89e3\uff0c\u4e8c\u662f\u66f4\u4e0d\u6613\u51fa\u73b0\u9012\u5f52\u6808\u6ee1\u7684\u60c5\u51b5\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u4eec\u5148\u5c55\u793a\u4f7f\u7528\u6808\u7684\u5199\u6cd5\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u5bf9\u4e8e\u56db\u4e2a\u65b9\u5411\u7684\u904d\u5386\uff0c\u53ef\u4ee5\u521b\u9020\u4e00\u4e2a\u6570\u7ec4 [-1, 0, 1, 0, -1]\uff0c\u6bcf\u76f8\u90bb\u4e24\u4f4d\u5373\u4e3a\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u4e4b\u4e00\u3002\u5f53\u7136\u60a8\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5199\u6210 [-1, 0]\u3001[1, 0]\u3001[0, 1] \u548c [0, -1]\uff0c\u4ee5\u4fbf\u7406\u89e3\u3002"}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)(i,{value:"cpp",label:"C++",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"int maxAreaOfIsland(vector<vector<int>>& grid) {\n    vector<int> direction{-1, 0, 1, 0, -1};\n    int m = grid.size(), n = grid[0].size(), max_area = 0;\n    for (int i = 0; i < m; ++i) {\n        for (int j = 0; j < n; ++j) {\n            if (grid[i][j] == 1) {\n                stack<pair<int, int>> island;\n                // \u521d\u59cb\u5316\u7b2c\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002\n                int local_area = 1;\n                grid[i][j] = 0;\n                island.push({i, j});\n                // DFS.\n                while (!island.empty()) {\n                    auto [r, c] = island.top();\n                    island.pop();\n                    for (int k = 0; k < 4; ++k) {\n                        int x = r + direction[k], y = c + direction[k + 1];\n                        // \u653e\u5165\u6ee1\u8db3\u6761\u4ef6\u7684\u76f8\u90bb\u8282\u70b9\u3002\n                        if (x >= 0 && x < m && y >= 0 && y < n &&\n                            grid[x][y] == 1) {\n                            ++local_area;\n                            grid[x][y] = 0;\n                            island.push({x, y});\n                        }\n                    }\n                }\n                max_area = max(max_area, local_area);\n            }\n        }\n    }\n    return max_area;\n}\n"})})}),(0,a.jsx)(i,{value:"py",label:"Python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-py",children:"def maxAreaOfIsland(grid: List[List[int]]) -> int:\n    direction = [-1, 0, 1, 0, -1]\n    m, n, max_area = len(grid), len(grid[0]), 0\n    for i in range(m):\n        for j in range(n):\n            if grid[i][j] == 1:\n                island = []\n                # \u521d\u59cb\u5316\u7b2c\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002\n                local_area = 1\n                grid[i][j] = 0\n                island.append((i, j))\n                # DFS.\n                while len(island) > 0:\n                    r, c = island.pop()\n                    for k in range(4):\n                        x, y = r + direction[k], c + direction[k + 1]\n                        # \u653e\u5165\u6ee1\u8db3\u6761\u4ef6\u7684\u76f8\u90bb\u8282\u70b9\u3002\n                        if 0 <= x < m and 0 <= y < n and grid[x][y] == 1:\n                            local_area += 1\n                            grid[x][y] = 0\n                            island.append((x, y))\n                max_area = max(max_area, local_area)\n    return max_area\n"})})})]}),"\n",(0,a.jsx)(e.p,{children:"\u4e0b\u9762\u6211\u4eec\u5c55\u793a\u9012\u5f52\u5199\u6cd5\uff0c\u6ce8\u610f\u8fdb\u884c\u9012\u5f52\u641c\u7d22\u65f6\uff0c\u4e00\u5b9a\u8981\u68c0\u67e5\u8fb9\u754c\u6761\u4ef6\u3002\u53ef\u4ee5\u5728\u6bcf\u6b21\u8c03\u7528\u8f85\u51fd\u6570\u4e4b\u524d\u68c0\u67e5\uff0c\u4e5f\u53ef\u4ee5\u5728\u8f85\u51fd\u6570\u7684\u4e00\u5f00\u59cb\u8fdb\u884c\u68c0\u67e5\u3002\u8fd9\u91cc\u6211\u4eec\u6ca1\u6709\u5229\u7528 [-1, 0, 1, 0, -1] \u6570\u7ec4\u8fdb\u884c\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u7684\u641c\u7d22\uff0c\u800c\u662f\u76f4\u63a5\u663e\u5f0f\u5730\u5199\u51fa\u6765\u56db\u79cd\u4e0d\u540c\u7684\u9012\u5f52\u51fd\u6570\u3002\u4e24\u79cd\u5199\u6cd5\u90fd\u53ef\u4ee5\uff0c\u8bfb\u8005\u53ef\u4ee5\u638c\u63e1\u4efb\u610f\u4e00\u79cd\u3002"}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)(i,{value:"cpp",label:"C++",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"// \u8f85\u51fd\u6570\u3002\nint dfs(vector<vector<int>>& grid, int r, int c) {\n    if (r < 0 || r >= grid.size() || c < 0 || c >= grid[0].size() ||\n        grid[r][c] == 0) {\n        return 0;\n    }\n    grid[r][c] = 0;\n    return (1 + dfs(grid, r + 1, c) + dfs(grid, r - 1, c) +\n            dfs(grid, r, c + 1) + dfs(grid, r, c - 1));\n}\n\n// \u4e3b\u51fd\u6570\u3002\nint maxAreaOfIsland(vector<vector<int>>& grid) {\n    int max_area = 0;\n    for (int i = 0; i < grid.size(); ++i) {\n        for (int j = 0; j < grid[0].size(); ++j) {\n            max_area = max(max_area, dfs(grid, i, j));\n        }\n    }\n    return max_area;\n}\n"})})}),(0,a.jsx)(i,{value:"py",label:"Python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-py",children:"# \u8f85\u51fd\u6570\u3002\ndef dfs(grid: List[List[int]], r: int, c: int) -> int:\n    if r < 0 or r >= len(grid) or c < 0 or c >= len(grid[0]) or grid[r][c] == 0:\n        return 0\n    grid[r][c] = 0\n    return (1 + dfs(grid, r + 1, c) + dfs(grid, r - 1, c) +\n            dfs(grid, r, c + 1) + dfs(grid, r, c - 1))\n\n# \u4e3b\u51fd\u6570\u3002\ndef maxAreaOfIsland(grid: List[List[int]]) -> int:\n    max_area = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            max_area = max(max_area, dfs(grid, i, j))\n    return max_area\n"})})})]}),"\n",(0,a.jsx)(e.h2,{id:"547-number-of-provinces",children:(0,a.jsx)(e.a,{href:"https://leetcode.com/problems/number-of-provinces/",children:"547. Number of Provinces"})}),"\n",(0,a.jsx)(e.h3,{id:"\u9898\u76ee\u63cf\u8ff0-1",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,a.jsx)(e.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7684 0-1 \u77e9\u9635\uff0c\u5982\u679c\u7b2c (i, j) \u4f4d\u7f6e\u662f 1\uff0c\u5219\u8868\u793a\u7b2c i \u4e2a\u57ce\u5e02\u548c\u7b2c j \u4e2a\u57ce\u5e02\u5904\u4e8e\u540c\u4e00\u57ce\u5e02\u5708\u3002\u5df2\u77e5\u57ce\u5e02\u7684\u76f8\u90bb\u5173\u7cfb\u662f\u53ef\u4ee5\u4f20\u9012\u7684\uff0c\u5373\u5982\u679c a \u548c b \u76f8\u90bb\uff0cb \u548c c \u76f8\u90bb\uff0c\u90a3\u4e48 a \u548c c \u4e5f\u76f8\u90bb\uff0c\u6362\u8a00\u4e4b\u8fd9\u4e09\u4e2a\u57ce\u5e02\u5904\u4e8e\u540c\u4e00\u4e2a\u57ce\u5e02\u5708\u4e4b\u5185\u3002\u6c42\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u57ce\u5e02\u5708\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b-1",children:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b"}),"\n",(0,a.jsx)(e.p,{children:"\u8f93\u5165\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u57ce\u5e02\u5708\u6570\u91cf\u3002\u56e0\u4e3a\u57ce\u5e02\u76f8\u90bb\u5173\u7cfb\u5177\u6709\u5bf9\u79f0\u6027\uff0c\u8be5\u4e8c\u7ef4\u6570\u7ec4\u4e3a\u5bf9\u79f0\u77e9\u9635\u3002\u540c\u65f6\uff0c\u56e0\u4e3a\u81ea\u5df1\u4e5f\u5904\u4e8e\u81ea\u5df1\u7684\u57ce\u5e02\u5708\uff0c\u5bf9\u89d2\u7ebf\u4e0a\u7684\u503c\u5168\u90e8\u4e3a 1\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"Input:\n[[1,1,0],\n [1,1,0],\n [0,0,1]]\nOutput: 2\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u8fd9\u4e2a\u6837\u4f8b\u4e2d\uff0c[1,2] \u5904\u4e8e\u4e00\u4e2a\u57ce\u5e02\u5708\uff0c[3] \u5904\u4e8e\u4e00\u4e2a\u57ce\u5e02\u5708\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u9898\u89e3-1",children:"\u9898\u89e3"}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u4e0a\u4e00\u9053\u9898\u76ee\u4e2d\uff0c\u56fe\u7684\u8868\u793a\u65b9\u6cd5\u662f\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u4ee3\u8868\u4e00\u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0e\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u8282\u70b9\u76f8\u90bb\u3002\u800c\u5728\u8fd9\u4e00\u9053\u9898\u91cc\u9762\uff0c\u6bcf\u4e00\u884c\uff08\u5217\uff09\u8868\u793a\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u6bcf\u5217\uff08\u884c\uff09\u8868\u793a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u76f8\u90bb\u8282\u70b9\u3002\u4e0a\u4e00\u9053\u9898\u76ee\u62e5\u6709 m \xd7 n \u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709 4 \u6761\u8fb9\uff1b\u800c\u672c\u9898\u62e5\u6709 n \u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709 n \u6761\u8fb9\uff0c\u8868\u793a\u548c\u6240\u6709\u57ce\u5e02\u90fd\u76f8\u90bb\uff0c\u6700\u5c11\u53ef\u4ee5\u6709 1 \u6761\u8fb9\uff0c\u8868\u793a\u5f53\u524d\u57ce\u5e02\u5708\u53ea\u6709\u81ea\u5df1\u3002\u5f53\u6e05\u695a\u4e86\u56fe\u7684\u8868\u793a\u65b9\u6cd5\u540e\uff0c\u8fd9\u9053\u9898\u76ee\u4e0e\u4e0a\u4e00\u9053\u9898\u76ee\u672c\u8d28\u4e0a\u662f\u540c\u4e00\u9053\u9898\uff1a\u641c\u7d22\u57ce\u5e02\u5708\uff08\u5c9b\u5c7f\u5708\uff09\u7684\u4e2a\u6570\u3002\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u9012\u5f52\u7684\u5199\u6cd5\u3002"}),"\n",(0,a.jsx)(e.admonition,{type:"warning",children:(0,a.jsx)(e.p,{children:"\u5bf9\u4e8e\u8282\u70b9\u8fde\u63a5\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528\u5e76\u67e5\u96c6\u6765\u8fdb\u884c\u5feb\u901f\u7684\u8fde\u63a5\u548c\u641c\u7d22\u3002\u6211\u4eec\u5c06\u4f1a\u5728\u4e4b\u540e\u7684\u7ae0\u8282\u8bb2\u89e3\u3002"})}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)(i,{value:"cpp",label:"C++",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"// \u8f85\u51fd\u6570\u3002\nvoid dfs(vector<vector<int>>& isConnected, int i, vector<bool>& visited) {\n    visited[i] = true;\n    for (int j = 0; j < isConnected.size(); ++j) {\n        if (isConnected[i][j] == 1 && !visited[j]) {\n            dfs(isConnected, j, visited);\n        }\n    }\n}\n\n// \u4e3b\u51fd\u6570\u3002\nint findCircleNum(vector<vector<int>>& isConnected) {\n    int n = isConnected.size(), count = 0;\n    // \u9632\u6b62\u91cd\u590d\u641c\u7d22\u5df2\u88ab\u641c\u7d22\u8fc7\u7684\u8282\u70b9\u3002\n    vector<bool> visited(n, false);\n    for (int i = 0; i < n; ++i) {\n        if (!visited[i]) {\n            dfs(isConnected, i, visited);\n            ++count;\n        }\n    }\n    return count;\n}\n"})})}),(0,a.jsx)(i,{value:"py",label:"Python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-py",children:"# \u8f85\u51fd\u6570\u3002\ndef dfs(isConnected: List[List[int]], city: int, visited: Set[int]):\n    visited.add(city)\n    for i in range(len(isConnected)):\n        if isConnected[city][i] == 1 and i not in visited:\n            dfs(isConnected, i, visited)\n\n# \u4e3b\u51fd\u6570\u3002\ndef findCircleNum(isConnected: List[List[int]]) -> int:\n    count = 0\n    # \u9632\u6b62\u91cd\u590d\u641c\u7d22\u5df2\u88ab\u641c\u7d22\u8fc7\u7684\u8282\u70b9\u3002\n    visited = set()\n    for i in range(len(isConnected)):\n        if i not in visited:\n            dfs(isConnected, i, visited)\n            count += 1\n    return count\n"})})})]}),"\n",(0,a.jsx)(e.h2,{id:"417-paci\ufb01c-atlantic-water-flow",children:(0,a.jsx)(e.a,{href:"https://leetcode.com/problems/pacific-atlantic-water-flow/",children:"417. Paci\ufb01c Atlantic Water Flow"})}),"\n",(0,a.jsx)(e.h3,{id:"\u9898\u76ee\u63cf\u8ff0-2",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,a.jsx)(e.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7684\u975e\u8d1f\u6574\u6570\u77e9\u9635\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c\u8868\u793a\u6d77\u62d4\u9ad8\u5ea6\u3002\u5047\u8bbe\u5de6\u8fb9\u548c\u4e0a\u8fb9\u662f\u592a\u5e73\u6d0b\uff0c\u53f3\u8fb9\u548c\u4e0b\u8fb9\u662f\u5927\u897f\u6d0b\uff0c\u6c42\u4ece\u54ea\u4e9b\u4f4d\u7f6e\u5411\u4e0b\u6d41\u6c34\uff0c\u53ef\u4ee5\u6d41\u5230\u592a\u5e73\u6d0b\u548c\u5927\u897f\u6d0b\u3002\u6c34\u53ea\u80fd\u4ece\u6d77\u62d4\u9ad8\u7684\u4f4d\u7f6e\u6d41\u5230\u6d77\u62d4\u4f4e\u6216\u76f8\u540c\u7684\u4f4d\u7f6e\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b-2",children:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b"}),"\n",(0,a.jsx)(e.p,{children:"\u8f93\u5165\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u8868\u793a\u6d77\u62d4\u9ad8\u5ea6\u3002\u8f93\u51fa\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u5927\u5c0f\u56fa\u5b9a\u4e3a 2\uff0c\u8868\u793a\u6ee1\u8db3\u6761\u4ef6\u7684\u4f4d\u7f6e\u5750\u6807\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"Input:\n \u592a\u5e73\u6d0b ~  ~  ~  ~  ~\n    ~  1   2  2  3  (5) *\n    ~  3   2  3 (4) (4) *\n    ~  2   4 (5) 3   1 *\n    ~ (6) (7) 1  4   5 *\n    ~ (5)  1  1  2   4 *\n       *   *  *  *   * \u5927\u897f\u6d0b\nOutput: [[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]]\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u8fd9\u4e2a\u6837\u4f8b\u4e2d\uff0c\u6709\u62ec\u53f7\u7684\u533a\u57df\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u4f4d\u7f6e\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u9898\u89e3-2",children:"\u9898\u89e3"}),"\n",(0,a.jsx)(e.p,{children:"\u867d\u7136\u9898\u76ee\u8981\u6c42\u7684\u662f\u6ee1\u8db3\u5411\u4e0b\u6d41\u80fd\u5230\u8fbe\u4e24\u4e2a\u5927\u6d0b\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u6240\u6709\u7684\u4f4d\u7f6e\u8fdb\u884c\u641c\u7d22\uff0c\u90a3\u4e48\u5728\u4e0d\u526a\u679d\u7684\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u4f1a\u5f88\u9ad8\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\u60f3\uff0c\u4ece\u4e24\u4e2a\u5927\u6d0b\u5f00\u59cb\u5411\u4e0a\u6d41\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u77e9\u5f62\u56db\u6761\u8fb9\u8fdb\u884c\u641c\u7d22\u3002\u641c\u7d22\u5b8c\u6210\u540e\uff0c\u53ea\u9700\u904d\u5386\u4e00\u904d\u77e9\u9635\uff0c\u4e24\u4e2a\u5927\u6d0b\u5411\u4e0a\u6d41\u90fd\u80fd\u5230\u8fbe\u7684\u4f4d\u7f6e\u5373\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u4f4d\u7f6e\u3002"}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)(i,{value:"cpp",label:"C++",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"vector<int> direction{-1, 0, 1, 0, -1};\n// \u8f85\u51fd\u6570\u3002\nvoid dfs(const vector<vector<int>>& heights, vector<vector<bool>>& can_reach,\n         int r, int c) {\n    if (can_reach[r][c]) {\n        return;\n    }\n    can_reach[r][c] = true;\n    for (int i = 0; i < 4; ++i) {\n        int x = r + direction[i], y = c + direction[i + 1];\n        if (x >= 0 && x < heights.size() && y >= 0 && y < heights[0].size() &&\n            heights[r][c] <= heights[x][y]) {\n            dfs(heights, can_reach, x, y);\n        }\n    }\n}\n\n// \u4e3b\u51fd\u6570\u3002\nvector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {\n    int m = heights.size(), n = heights[0].size();\n    vector<vector<bool>> can_reach_p(m, vector<bool>(n, false));\n    vector<vector<bool>> can_reach_a(m, vector<bool>(n, false));\n    vector<vector<int>> can_reach_p_and_a;\n    for (int i = 0; i < m; ++i) {\n        dfs(heights, can_reach_p, i, 0);\n        dfs(heights, can_reach_a, i, n - 1);\n    }\n    for (int i = 0; i < n; ++i) {\n        dfs(heights, can_reach_p, 0, i);\n        dfs(heights, can_reach_a, m - 1, i);\n    }\n    for (int i = 0; i < m; ++i) {\n        for (int j = 0; j < n; ++j) {\n            if (can_reach_p[i][j] && can_reach_a[i][j]) {\n                can_reach_p_and_a.push_back({i, j});\n            }\n        }\n    }\n    return can_reach_p_and_a;\n}\n"})})}),(0,a.jsx)(i,{value:"py",label:"Python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-py",children:"direction = [-1, 0, 1, 0, -1]\n\n# \u8f85\u51fd\u6570\u3002\ndef dfs(heights: List[List[int]], can_reach: List[List[int]], r: int, c: int):\n    if can_reach[r][c]:\n        return\n    can_reach[r][c] = True\n    for i in range(4):\n        x, y = r + direction[i], c + direction[i + 1]\n        if (x >= 0 and x < len(heights) and y >= 0 and y < len(heights[0]) and\n            heights[x][y] >= heights[r][c]):\n            dfs(heights, can_reach, x, y)\n\n# \u4e3b\u51fd\u6570\u3002\ndef pacificAtlantic(heights: List[List[int]]) -> List[List[int]]:\n    m, n = len(heights), len(heights[0])\n    can_reach_p = [[False for _ in range(n)] for _ in range(m)]\n    can_reach_a = [[False for _ in range(n)] for _ in range(m)]\n    for i in range(m):\n        dfs(heights, can_reach_p, i, 0)\n        dfs(heights, can_reach_a, i, n - 1)\n    for j in range(n):\n        dfs(heights, can_reach_p, 0, j)\n        dfs(heights, can_reach_a, m - 1, j)\n    return [\n            [i, j] for i in range(m) for j in range(n)\n            if can_reach_p[i][j] and can_reach_a[i][j]\n        ]\n"})})})]})]})}function h(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(o,{...n})}):o(n)}function x(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);