"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[1273],{4293:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"data-structures/10-11-exercises","title":"10.11 Exercises","description":"Basic Difficulty","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/10-data-structures/10-11-exercises.md","sourceDirName":"10-data-structures","slug":"/data-structures/10-11-exercises","permalink":"/leetcode_101/en/data-structures/10-11-exercises","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/10-data-structures/10-11-exercises.md","tags":[],"version":"current","sidebarPosition":58,"frontMatter":{"sidebar_position":58},"sidebar":"tutorialSidebar","previous":{"title":"10.10 Prefix Sum and Integral Image","permalink":"/leetcode_101/en/data-structures/10-10-prefix-sum-integral-image"},"next":{"title":"11. \u4ee4\u4eba\u5934\u5927\u7684\u5b57\u7b26\u4e32","permalink":"/leetcode_101/en/category/11-\u4ee4\u4eba\u5934\u5927\u7684\u5b57\u7b26\u4e32"}}');var l=a(4848),i=a(8453);const r={sidebar_position:58},t="10.11 Exercises",c={},h=[{value:"Basic Difficulty",id:"basic-difficulty",level:2},{value:"566. Reshape the Matrix",id:"566-reshape-the-matrix",level:3},{value:"225. Implement Stack using Queues",id:"225-implement-stack-using-queues",level:3},{value:"503. Next Greater Element II",id:"503-next-greater-element-ii",level:3},{value:"217. Contains Duplicate",id:"217-contains-duplicate",level:3},{value:"697. Degree of an Array",id:"697-degree-of-an-array",level:3},{value:"594. Longest Harmonious Subsequence",id:"594-longest-harmonious-subsequence",level:3},{value:"15. 3Sum",id:"15-3sum",level:3},{value:"Advanced Difficulty",id:"advanced-difficulty",level:2},{value:"287. Find the Duplicate Number",id:"287-find-the-duplicate-number",level:3},{value:"313. Super Ugly Number",id:"313-super-ugly-number",level:3},{value:"870. Advantage Shuffle",id:"870-advantage-shuffle",level:3},{value:"307. Range Sum Query - Mutable",id:"307-range-sum-query---mutable",level:3}];function m(e){const s={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",p:"p",semantics:"semantics",span:"span",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"1011-exercises",children:"10.11 Exercises"})}),"\n",(0,l.jsx)(s.h2,{id:"basic-difficulty",children:"Basic Difficulty"}),"\n",(0,l.jsx)(s.h3,{id:"566-reshape-the-matrix",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/reshape-the-matrix/",children:"566. Reshape the Matrix"})}),"\n",(0,l.jsx)(s.p,{children:"This problem is not particularly challenging; it only requires some patience."}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"225-implement-stack-using-queues",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/implement-stack-using-queues/",children:"225. Implement Stack using Queues"})}),"\n",(0,l.jsx)(s.p,{children:"Using a similar approach, we can also implement a stack using queues."}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"503-next-greater-element-ii",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/next-greater-element-ii/",children:"503. Next Greater Element II"})}),"\n",(0,l.jsxs)(s.p,{children:["A variant of the ",(0,l.jsx)(s.code,{children:"Daily Temperatures"})," problem."]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"217-contains-duplicate",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/contains-duplicate/",children:"217. Contains Duplicate"})}),"\n",(0,l.jsx)(s.p,{children:"Which data structure would allow us to quickly check for duplicates?"}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"697-degree-of-an-array",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/degree-of-an-array/",children:"697. Degree of an Array"})}),"\n",(0,l.jsx)(s.p,{children:"How can we preprocess an array to correctly and efficiently compute the length of a subarray?"}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"594-longest-harmonious-subsequence",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/longest-harmonious-subsequence/",children:"594. Longest Harmonious Subsequence"})}),"\n",(0,l.jsxs)(s.p,{children:["A variant of the ",(0,l.jsx)(s.code,{children:"Longest Consecutive Sequence"})," problem."]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"15-3sum",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/3sum/",children:"15. 3Sum"})}),"\n",(0,l.jsxs)(s.p,{children:["Since the complexity of sorting is ",(0,l.jsxs)(s.span,{className:"katex",children:[(0,l.jsx)(s.span,{className:"katex-mathml",children:(0,l.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,l.jsxs)(s.semantics,{children:[(0,l.jsxs)(s.mrow,{children:[(0,l.jsx)(s.mi,{children:"O"}),(0,l.jsx)(s.mo,{stretchy:"false",children:"("}),(0,l.jsx)(s.mi,{children:"n"}),(0,l.jsx)(s.mi,{children:"log"}),(0,l.jsx)(s.mo,{children:"\u2061"}),(0,l.jsx)(s.mi,{children:"n"}),(0,l.jsx)(s.mo,{stretchy:"false",children:")"}),(0,l.jsx)(s.mo,{children:"<"}),(0,l.jsx)(s.mi,{children:"O"}),(0,l.jsx)(s.mo,{stretchy:"false",children:"("}),(0,l.jsxs)(s.msup,{children:[(0,l.jsx)(s.mi,{children:"n"}),(0,l.jsx)(s.mn,{children:"2"})]}),(0,l.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,l.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n \\log n) < O(n^2)"})]})})}),(0,l.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,l.jsxs)(s.span,{className:"base",children:[(0,l.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,l.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,l.jsx)(s.span,{className:"mopen",children:"("}),(0,l.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,l.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,l.jsxs)(s.span,{className:"mop",children:["lo",(0,l.jsx)(s.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,l.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,l.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,l.jsx)(s.span,{className:"mclose",children:")"}),(0,l.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,l.jsx)(s.span,{className:"mrel",children:"<"}),(0,l.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,l.jsxs)(s.span,{className:"base",children:[(0,l.jsx)(s.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,l.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,l.jsx)(s.span,{className:"mopen",children:"("}),(0,l.jsxs)(s.span,{className:"mord",children:[(0,l.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,l.jsx)(s.span,{className:"msupsub",children:(0,l.jsx)(s.span,{className:"vlist-t",children:(0,l.jsx)(s.span,{className:"vlist-r",children:(0,l.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,l.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,l.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,l.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsx)(s.span,{className:"mord mtight",children:"2"})})]})})})})})]}),(0,l.jsx)(s.span,{className:"mclose",children:")"})]})]})]}),", we can either sort the array first and then perform an ",(0,l.jsxs)(s.span,{className:"katex",children:[(0,l.jsx)(s.span,{className:"katex-mathml",children:(0,l.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,l.jsxs)(s.semantics,{children:[(0,l.jsxs)(s.mrow,{children:[(0,l.jsx)(s.mi,{children:"O"}),(0,l.jsx)(s.mo,{stretchy:"false",children:"("}),(0,l.jsxs)(s.msup,{children:[(0,l.jsx)(s.mi,{children:"n"}),(0,l.jsx)(s.mn,{children:"2"})]}),(0,l.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,l.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n^2)"})]})})}),(0,l.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,l.jsxs)(s.span,{className:"base",children:[(0,l.jsx)(s.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,l.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,l.jsx)(s.span,{className:"mopen",children:"("}),(0,l.jsxs)(s.span,{className:"mord",children:[(0,l.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,l.jsx)(s.span,{className:"msupsub",children:(0,l.jsx)(s.span,{className:"vlist-t",children:(0,l.jsx)(s.span,{className:"vlist-r",children:(0,l.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,l.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,l.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,l.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsx)(s.span,{className:"mord mtight",children:"2"})})]})})})})})]}),(0,l.jsx)(s.span,{className:"mclose",children:")"})]})})]})," pointer search, or directly use a hash table for an ",(0,l.jsxs)(s.span,{className:"katex",children:[(0,l.jsx)(s.span,{className:"katex-mathml",children:(0,l.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,l.jsxs)(s.semantics,{children:[(0,l.jsxs)(s.mrow,{children:[(0,l.jsx)(s.mi,{children:"O"}),(0,l.jsx)(s.mo,{stretchy:"false",children:"("}),(0,l.jsxs)(s.msup,{children:[(0,l.jsx)(s.mi,{children:"n"}),(0,l.jsx)(s.mn,{children:"2"})]}),(0,l.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,l.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n^2)"})]})})}),(0,l.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,l.jsxs)(s.span,{className:"base",children:[(0,l.jsx)(s.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,l.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,l.jsx)(s.span,{className:"mopen",children:"("}),(0,l.jsxs)(s.span,{className:"mord",children:[(0,l.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,l.jsx)(s.span,{className:"msupsub",children:(0,l.jsx)(s.span,{className:"vlist-t",children:(0,l.jsx)(s.span,{className:"vlist-r",children:(0,l.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,l.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,l.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,l.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsx)(s.span,{className:"mord mtight",children:"2"})})]})})})})})]}),(0,l.jsx)(s.span,{className:"mclose",children:")"})]})})]})," search."]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"advanced-difficulty",children:"Advanced Difficulty"}),"\n",(0,l.jsx)(s.h3,{id:"287-find-the-duplicate-number",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/find-the-duplicate-number/",children:"287. Find the Duplicate Number"})}),"\n",(0,l.jsxs)(s.p,{children:["A variant of the ",(0,l.jsx)(s.code,{children:"Find Missing Number"})," problem. Besides marking negative values, are there any other algorithms to solve this?"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"313-super-ugly-number",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/super-ugly-number/",children:"313. Super Ugly Number"})}),"\n",(0,l.jsx)(s.p,{children:"Try solving this using a priority queue."}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"870-advantage-shuffle",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/advantage-shuffle/",children:"870. Advantage Shuffle"})}),"\n",(0,l.jsx)(s.p,{children:"If we need to compare relative sizes and the same number can appear multiple times, which data structure should we use?"}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"307-range-sum-query---mutable",children:(0,l.jsx)(s.a,{href:"https://leetcode.com/problems/range-sum-query-mutable/",children:"307. Range Sum Query - Mutable"})}),"\n",(0,l.jsxs)(s.p,{children:["A variant of the ",(0,l.jsx)(s.code,{children:"Prefix Sum"})," problem. I admit this might be slightly advanced; you might want to look up what a ",(0,l.jsx)(s.code,{children:"Segment Tree"})," is."]})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(m,{...e})}):m(e)}}}]);