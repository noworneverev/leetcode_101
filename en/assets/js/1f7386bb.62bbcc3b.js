"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[1202],{1570:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});const i=JSON.parse('{"id":"graphs/14-2-bipartite-graph","title":"14.2 \u4e8c\u5206\u56fe","description":"\u4e8c\u5206\u56fe\u7b97\u6cd5\u4e5f\u79f0\u4e3a\u67d3\u8272\u6cd5\uff0c\u662f\u4e00\u79cd\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3002\u5982\u679c\u53ef\u4ee5\u7528\u4e24\u79cd\u989c\u8272\u5bf9\u56fe\u4e2d\u7684\u8282\u70b9\u8fdb\u884c\u7740\u8272\uff0c\u5e76\u4e14\u4fdd\u8bc1\u76f8\u90bb\u7684\u8282\u70b9\u989c\u8272\u4e0d\u540c\uff0c\u90a3\u4e48\u56fe\u4e3a\u4e8c\u5206\u3002","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/14-graphs/14-2-bipartite-graph.mdx","sourceDirName":"14-graphs","slug":"/graphs/14-2-bipartite-graph","permalink":"/leetcode_101/en/graphs/14-2-bipartite-graph","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/14-graphs/14-2-bipartite-graph.mdx","tags":[],"version":"current","sidebarPosition":76,"frontMatter":{"sidebar_position":76},"sidebar":"tutorialSidebar","previous":{"title":"14.1 \u6570\u636e\u7ed3\u6784\u4ecb\u7ecd","permalink":"/leetcode_101/en/graphs/14-1-data-structure-introduction"},"next":{"title":"14.3 \u62d3\u6251\u6392\u5e8f","permalink":"/leetcode_101/en/graphs/14-3-topological-sorting"}}');var t=r(4848),o=r(8453);const l={sidebar_position:76},a="14.2 \u4e8c\u5206\u56fe",p={},s=[{value:"785. Is Graph Bipartite?",id:"785-is-graph-bipartite",level:2},{value:"Problem Description",id:"problem-description",level:3},{value:"Input and Output Example",id:"input-and-output-example",level:3},{value:"Solution Explanation",id:"solution-explanation",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components},{TabItem:r,Tabs:i}=n;return r||h("TabItem",!0),i||h("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"142-\u4e8c\u5206\u56fe",children:"14.2 \u4e8c\u5206\u56fe"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"\u4e8c\u5206\u56fe"}),"\u7b97\u6cd5\u4e5f\u79f0\u4e3a",(0,t.jsx)(n.code,{children:"\u67d3\u8272\u6cd5"}),"\uff0c\u662f\u4e00\u79cd\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3002\u5982\u679c\u53ef\u4ee5\u7528\u4e24\u79cd\u989c\u8272\u5bf9\u56fe\u4e2d\u7684\u8282\u70b9\u8fdb\u884c\u7740\u8272\uff0c\u5e76\u4e14\u4fdd\u8bc1\u76f8\u90bb\u7684\u8282\u70b9\u989c\u8272\u4e0d\u540c\uff0c\u90a3\u4e48\u56fe\u4e3a\u4e8c\u5206\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"785-is-graph-bipartite",children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/is-graph-bipartite/",children:"785. Is Graph Bipartite?"})}),"\n",(0,t.jsx)(n.h3,{id:"problem-description",children:"Problem Description"}),"\n",(0,t.jsx)(n.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u5224\u65ad\u5176\u662f\u5426\u53ef\u4ee5\u4e8c\u5206\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"input-and-output-example",children:"Input and Output Example"}),"\n",(0,t.jsx)(n.p,{children:"\u8f93\u5165\u662f\u90bb\u63a5\u94fe\u8868\u8868\u793a\u7684\u56fe\uff08\u5982\u4f4d\u7f6e 0 \u7684\u90bb\u63a5\u94fe\u8868\u4e3a [1,3]\uff0c\u8868\u793a 0 \u4e0e 1\u30010 \u4e0e 3 \u76f8\u8fde\uff09\uff1b\u8f93\u51fa\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8868\u793a\u56fe\u662f\u5426\u4e8c\u5206\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: [[1,3], [0,2], [1,3], [0,2]]\n0----1\n|    |\n|    |\n3----2\nOutput: true\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u5728\u8fd9\u4e2a\u6837\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u628a ",2," \u5206\u4e3a\u4e00\u7ec4\uff0c\u628a ",3," \u5206\u4e3a\u53e6\u4e00\u7ec4\u3002"]}),"\n",(0,t.jsx)(n.h3,{id:"solution-explanation",children:"Solution Explanation"}),"\n",(0,t.jsx)(n.p,{children:"\u5229\u7528\u961f\u5217\u548c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u672a\u67d3\u8272\u7684\u8282\u70b9\u8fdb\u884c\u67d3\u8272\uff0c\u5e76\u4e14\u68c0\u67e5\u662f\u5426\u6709\u989c\u8272\u76f8\u540c\u7684\u76f8\u90bb\u8282\u70b9\u5b58\u5728\u3002\u6ce8\u610f\u5728\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u7528 0 \u8868\u793a\u672a\u68c0\u67e5\u7684\u8282\u70b9\uff0c\u7528 1 \u548c 2 \u8868\u793a\u4e24\u79cd\u4e0d\u540c\u7684\u989c\u8272\u3002"}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)(r,{value:"cpp",label:"C++",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"bool isBipartite(vector<vector<int>>& graph) {\n    int n = graph.size();\n    vector<int> color(n, 0);\n    queue<int> q;\n    for (int i = 0; i < n; ++i) {\n        if (color[i] == 0) {\n            q.push(i);\n            color[i] = 1;\n        }\n        while (!q.empty()) {\n            int node = q.front();\n            q.pop();\n            for (int j : graph[node]) {\n                if (color[j] == 0) {\n                    q.push(j);\n                    color[j] = color[node] == 2 ? 1 : 2;\n                } else if (color[j] == color[node]) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n"})})}),(0,t.jsx)(r,{value:"py",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"def isBipartite(graph: List[List[int]]) -> bool:\n    n = len(graph)\n    color = [0] * n\n    q = collections.deque()\n\n    for i in range(n):\n        if color[i] == 0:\n            q.append(i)\n            color[i] = 1\n        while len(q) > 0:\n            node = q.popleft()\n            for j in graph[node]:\n                if color[j] == 0:\n                    q.append(j)\n                    color[j] = 1 if color[node] == 2 else 2\n                elif color[j] == color[node]:\n                    return False\n    return True\n"})})})]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);