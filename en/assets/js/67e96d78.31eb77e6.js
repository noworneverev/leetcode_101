"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[9835],{1994:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"mathematical-solutions/8-5-random-sampling","title":"8.5 Random and Sampling","description":"384. Shuffle an Array","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/8-mathematical-solutions/8-5-random-sampling.mdx","sourceDirName":"8-mathematical-solutions","slug":"/mathematical-solutions/8-5-random-sampling","permalink":"/leetcode_101/en/mathematical-solutions/8-5-random-sampling","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":42,"frontMatter":{"sidebar_position":42},"sidebar":"tutorialSidebar","previous":{"title":"8.4 Numerical Processing","permalink":"/leetcode_101/en/mathematical-solutions/8-4-number-processing"},"next":{"title":"8.6 Exercises","permalink":"/leetcode_101/en/mathematical-solutions/8-6-exercises"}}');var l=n(4848),i=n(8453);const t={sidebar_position:42},r="8.5 Random and Sampling",c={},m=[{value:"384. Shuffle an Array",id:"384-shuffle-an-array",level:2},{value:"Problem Description",id:"problem-description",level:3},{value:"Input and Output Example",id:"input-and-output-example",level:3},{value:"Solution Explanation",id:"solution-explanation",level:3},{value:"528. Random Pick with Weight",id:"528-random-pick-with-weight",level:2},{value:"Problem Description",id:"problem-description-1",level:3},{value:"Input and Output Example",id:"input-and-output-example-1",level:3},{value:"Solution Explanation",id:"solution-explanation-1",level:3},{value:"382. Linked List Random Node",id:"382-linked-list-random-node",level:2},{value:"Problem Description",id:"problem-description-2",level:3},{value:"Input and Output Example",id:"input-and-output-example-2",level:3},{value:"Solution Explanation",id:"solution-explanation-2",level:3}];function d(s){const e={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",math:"math",mfrac:"mfrac",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",...(0,i.R)(),...s.components},{TabItem:n,Tabs:a}=e;return n||o("TabItem",!0),a||o("Tabs",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"85-random-and-sampling",children:"8.5 Random and Sampling"})}),"\n",(0,l.jsx)(e.h2,{id:"384-shuffle-an-array",children:(0,l.jsx)(e.a,{href:"https://leetcode.com/problems/shuffle-an-array/",children:"384. Shuffle an Array"})}),"\n",(0,l.jsx)(e.h3,{id:"problem-description",children:"Problem Description"}),"\n",(0,l.jsxs)(e.p,{children:["Given an array, implement two functions. The first function ",(0,l.jsx)(e.code,{children:"shuffle"})," randomly shuffles the array, and the second function ",(0,l.jsx)(e.code,{children:"reset"})," restores the array to its original order."]}),"\n",(0,l.jsx)(e.h3,{id:"input-and-output-example",children:"Input and Output Example"}),"\n",(0,l.jsx)(e.p,{children:"Input is an array of integers and a list of function names. Output is a two-dimensional array representing the result of each function call."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'Input: nums = [1,2,3], actions: ["shuffle","shuffle","reset"]\nOutput: [[2,1,3],[3,2,1],[1,2,3]]\n'})}),"\n",(0,l.jsx)(e.p,{children:"In this example, the first two shuffle results can be any random permutations."}),"\n",(0,l.jsx)(e.h3,{id:"solution-explanation",children:"Solution Explanation"}),"\n",(0,l.jsxs)(e.p,{children:["We use the classical ",(0,l.jsx)(e.code,{children:"Fisher-Yates Shuffle Algorithm"}),", which works by swapping elements randomly to shuffle the array. Both forward and backward implementations are equally valid. Pay attention to the implementation details of the ",(0,l.jsx)(e.code,{children:"reset"})," function and the constructor of the ",(0,l.jsx)(e.code,{children:"Solution"})," class."]}),"\n",(0,l.jsxs)(a,{children:[(0,l.jsx)(n,{value:"cpp",label:"C++",children:(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-cpp",children:"class Solution {\n   public:\n    Solution(vector<int> nums) : nums_(nums) {}\n\n    vector<int> reset() { return nums_; }\n\n    vector<int> shuffle() {\n        vector<int> shuffled(nums_);\n        int n = nums_.size();\n        // Reverse shuffle: effective and equivalent.\n        for (int i = n - 1; i >= 0; --i) {\n            swap(shuffled[i], shuffled[rand() % (i + 1)]);\n        }\n        // Forward shuffle: another valid approach.\n        // for (int i = 0; i < n; ++i) {\n        // int pos = rand() % (n - i);\n        // swap(shuffled[i], shuffled[i+pos]);\n        // }\n        return shuffled;\n    }\n\n   private:\n    vector<int> nums_;\n};\n"})})}),(0,l.jsx)(n,{value:"py",label:"Python",children:(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-py",children:"class Solution:\n    def __init__(self, nums: List[int]):\n        self.base = nums[:]\n\n    def reset(self) -> List[int]:\n        return self.base[:]\n\n    def shuffle(self) -> List[int]:\n        shuffled = self.base[:]\n        n = len(self.base)\n        # Reverse shuffle: effective and equivalent.\n        for i in range(n - 1, -1, -1):\n            j = random.randint(0, i)\n            shuffled[i], shuffled[j] = shuffled[j], shuffled[i]\n        # Forward shuffle: another valid approach.\n        # for i in range(n):\n        #   j = i + random.randint(0, n - i - 1)\n        #   shuffled[i], shuffled[j] = shuffled[j], shuffled[i]\n        return shuffled\n"})})})]}),"\n",(0,l.jsx)(e.h2,{id:"528-random-pick-with-weight",children:(0,l.jsx)(e.a,{href:"https://leetcode.com/problems/random-pick-with-weight/",children:"528. Random Pick with Weight"})}),"\n",(0,l.jsx)(e.h3,{id:"problem-description-1",children:"Problem Description"}),"\n",(0,l.jsx)(e.p,{children:"Given an array where each position's value represents its weight, implement a method to randomly sample indices based on these weights."}),"\n",(0,l.jsx)(e.h3,{id:"input-and-output-example-1",children:"Input and Output Example"}),"\n",(0,l.jsx)(e.p,{children:"Input consists of a one-dimensional positive integer array representing weights, and another one-dimensional string array of commands specifying the number of random samples. Output is a one-dimensional integer array indicating the sampled indices."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'Input: weights = [1,3], actions: ["pickIndex","pickIndex","pickIndex"]\nOutput: [0,1,1]\n'})}),"\n",(0,l.jsx)(e.p,{children:"In this example, the chosen index is uncertain each time, but the expected probability for index 0 is 1/4, and for index 1 is 3/4."}),"\n",(0,l.jsx)(e.h3,{id:"solution-explanation-1",children:"Solution Explanation"}),"\n",(0,l.jsxs)(e.p,{children:["We can first calculate the prefix sum using ",(0,l.jsx)(e.code,{children:"partial_sum"}),", which gives the cumulative sum of weights up to each position. The resulting array for positive integers is monotonically increasing. When sampling, we generate a random number and use binary search to locate its position within the prefix sum, simulating the weighted sampling process. This binary search can be implemented using ",(0,l.jsx)(e.code,{children:"lower_bound"}),"."]}),"\n",(0,l.jsxs)(e.p,{children:["For the example, the prefix sum of weights [1,3] is [1,4]. If the random number is 1, ",(0,l.jsx)(e.code,{children:"lower_bound"})," returns 0; if the random number is 2, 3, or 4, ",(0,l.jsx)(e.code,{children:"lower_bound"})," returns 1."]}),"\n",(0,l.jsx)(e.p,{children:"We'll delve deeper into prefix sum techniques in the following sections."}),"\n",(0,l.jsxs)(a,{children:[(0,l.jsx)(n,{value:"cpp",label:"C++",children:(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-cpp",children:"class Solution {\n   public:\n    Solution(vector<int> weights) : cumsum_(weights) {\n        partial_sum(cumsum_.begin(), cumsum_.end(), cumsum_.begin());\n    }\n\n    int pickIndex() {\n        int val = (rand() % cumsum_.back()) + 1;\n        return lower_bound(cumsum_.begin(), cumsum_.end(), val) -\n               cumsum_.begin();\n    }\n\n   private:\n    vector<int> cumsum_;\n};\n"})})}),(0,l.jsx)(n,{value:"py",label:"Python",children:(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-py",children:"class Solution:\n    def __init__(self, weights: List[int]):\n        self.cumsum = weights[:]\n        for i in range(1, len(weights)):\n            self.cumsum[i] += self.cumsum[i - 1]\n\n        def pickIndex(self) -> int:\n            val = random.randint(1, self.cumsum[-1])\n            return bisect.bisect_left(self.cumsum, val, 0, len(self.cumsum))\n"})})})]}),"\n",(0,l.jsx)(e.h2,{id:"382-linked-list-random-node",children:(0,l.jsx)(e.a,{href:"https://leetcode.com/problems/linked-list-random-node/",children:"382. Linked List Random Node"})}),"\n",(0,l.jsx)(e.h3,{id:"problem-description-2",children:"Problem Description"}),"\n",(0,l.jsx)(e.p,{children:"Given a singly linked list, design an algorithm to randomly return one of its values."}),"\n",(0,l.jsx)(e.h3,{id:"input-and-output-example-2",children:"Input and Output Example"}),"\n",(0,l.jsx)(e.p,{children:"Input is a singly linked list, output is a number representing the value of one of its nodes."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"Input: 1->2->3->4->5\nOutput: 3\n"})}),"\n",(0,l.jsx)(e.p,{children:"In this example, each node has an equal chance of being selected, such as node 3."}),"\n",(0,l.jsx)(e.h3,{id:"solution-explanation-2",children:"Solution Explanation"}),"\n",(0,l.jsxs)(e.p,{children:["Unlike arrays, where the total size is known, we cannot determine the total length of a linked list before traversal. In this scenario, we can use ",(0,l.jsx)(e.strong,{children:"reservoir sampling"}),": traverse the linked list, and at the ",(0,l.jsxs)(e.span,{className:"katex",children:[(0,l.jsx)(e.span,{className:"katex-mathml",children:(0,l.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,l.jsxs)(e.semantics,{children:[(0,l.jsx)(e.mrow,{children:(0,l.jsx)(e.mi,{children:"m"})}),(0,l.jsx)(e.annotation,{encoding:"application/x-tex",children:"m"})]})})}),(0,l.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,l.jsxs)(e.span,{className:"base",children:[(0,l.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,l.jsx)(e.span,{className:"mord mathnormal",children:"m"})]})})]}),"-th node, choose it with a probability of ",(0,l.jsxs)(e.span,{className:"katex",children:[(0,l.jsx)(e.span,{className:"katex-mathml",children:(0,l.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,l.jsxs)(e.semantics,{children:[(0,l.jsx)(e.mrow,{children:(0,l.jsxs)(e.mfrac,{children:[(0,l.jsx)(e.mn,{children:"1"}),(0,l.jsx)(e.mi,{children:"m"})]})}),(0,l.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\frac{1}{m}"})]})})}),(0,l.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,l.jsxs)(e.span,{className:"base",children:[(0,l.jsx)(e.span,{className:"strut",style:{height:"1.1901em",verticalAlign:"-0.345em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mopen nulldelimiter"}),(0,l.jsx)(e.span,{className:"mfrac",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsxs)(e.span,{className:"vlist",style:{height:"0.8451em"},children:[(0,l.jsxs)(e.span,{style:{top:"-2.655em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsx)(e.span,{className:"mord mtight",children:(0,l.jsx)(e.span,{className:"mord mathnormal mtight",children:"m"})})})]}),(0,l.jsxs)(e.span,{style:{top:"-3.23em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,l.jsxs)(e.span,{style:{top:"-3.394em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,l.jsx)(e.span,{className:"mord mtight",children:(0,l.jsx)(e.span,{className:"mord mtight",children:"1"})})})]})]}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.345em"},children:(0,l.jsx)(e.span,{})})})]})}),(0,l.jsx)(e.span,{className:"mclose nulldelimiter"})]})]})})]})," to replace the previously chosen node."]}),"\n",(0,l.jsxs)(e.p,{children:["A simple proof of the randomness of reservoir sampling is as follows: for the ",(0,l.jsxs)(e.span,{className:"katex",children:[(0,l.jsx)(e.span,{className:"katex-mathml",children:(0,l.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,l.jsxs)(e.semantics,{children:[(0,l.jsx)(e.mrow,{children:(0,l.jsx)(e.mi,{children:"m"})}),(0,l.jsx)(e.annotation,{encoding:"application/x-tex",children:"m"})]})})}),(0,l.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,l.jsxs)(e.span,{className:"base",children:[(0,l.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,l.jsx)(e.span,{className:"mord mathnormal",children:"m"})]})})]}),"-th node in a linked list of length ",(0,l.jsxs)(e.span,{className:"katex",children:[(0,l.jsx)(e.span,{className:"katex-mathml",children:(0,l.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,l.jsxs)(e.semantics,{children:[(0,l.jsx)(e.mrow,{children:(0,l.jsx)(e.mi,{children:"n"})}),(0,l.jsx)(e.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,l.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,l.jsxs)(e.span,{className:"base",children:[(0,l.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,l.jsx)(e.span,{className:"mord mathnormal",children:"n"})]})})]}),", the sufficient and necessary condition for it to be sampled is that it is chosen, and none of the subsequent nodes are chosen. The probability is calculated as:"]}),"\n",(0,l.jsx)(e.span,{className:"katex-display",children:(0,l.jsxs)(e.span,{className:"katex",children:[(0,l.jsx)(e.span,{className:"katex-mathml",children:(0,l.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,l.jsxs)(e.semantics,{children:[(0,l.jsxs)(e.mrow,{children:[(0,l.jsxs)(e.mfrac,{children:[(0,l.jsx)(e.mn,{children:"1"}),(0,l.jsx)(e.mi,{children:"m"})]}),(0,l.jsx)(e.mo,{children:"\xd7"}),(0,l.jsxs)(e.mfrac,{children:[(0,l.jsx)(e.mi,{children:"m"}),(0,l.jsxs)(e.mrow,{children:[(0,l.jsx)(e.mi,{children:"m"}),(0,l.jsx)(e.mo,{children:"+"}),(0,l.jsx)(e.mn,{children:"1"})]})]}),(0,l.jsx)(e.mo,{children:"\xd7"}),(0,l.jsxs)(e.mfrac,{children:[(0,l.jsxs)(e.mrow,{children:[(0,l.jsx)(e.mi,{children:"m"}),(0,l.jsx)(e.mo,{children:"+"}),(0,l.jsx)(e.mn,{children:"1"})]}),(0,l.jsxs)(e.mrow,{children:[(0,l.jsx)(e.mi,{children:"m"}),(0,l.jsx)(e.mo,{children:"+"}),(0,l.jsx)(e.mn,{children:"2"})]})]}),(0,l.jsx)(e.mo,{children:"\xd7"}),(0,l.jsx)(e.mo,{separator:"true",children:"\u22c5"}),(0,l.jsx)(e.mo,{separator:"true",children:"\u22c5"}),(0,l.jsx)(e.mo,{separator:"true",children:"\u22c5"}),(0,l.jsx)(e.mo,{children:"\xd7"}),(0,l.jsxs)(e.mfrac,{children:[(0,l.jsxs)(e.mrow,{children:[(0,l.jsx)(e.mi,{children:"n"}),(0,l.jsx)(e.mo,{children:"\u2212"}),(0,l.jsx)(e.mn,{children:"1"})]}),(0,l.jsx)(e.mi,{children:"n"})]}),(0,l.jsx)(e.mo,{children:"="}),(0,l.jsxs)(e.mfrac,{children:[(0,l.jsx)(e.mn,{children:"1"}),(0,l.jsx)(e.mi,{children:"n"})]})]}),(0,l.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\frac{1}{m} \xd7 \\frac{m}{m+1} \xd7 \\frac{m+1}{m+2} \xd7 \xb7 \xb7 \xb7 \xd7 \\frac{n\u22121}{n} = \\frac{1}{n}"})]})})}),(0,l.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,l.jsxs)(e.span,{className:"base",children:[(0,l.jsx)(e.span,{className:"strut",style:{height:"2.0074em",verticalAlign:"-0.686em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mopen nulldelimiter"}),(0,l.jsx)(e.span,{className:"mfrac",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsxs)(e.span,{className:"vlist",style:{height:"1.3214em"},children:[(0,l.jsxs)(e.span,{style:{top:"-2.314em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"mord",children:(0,l.jsx)(e.span,{className:"mord mathnormal",children:"m"})})]}),(0,l.jsxs)(e.span,{style:{top:"-3.23em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,l.jsxs)(e.span,{style:{top:"-3.677em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"mord",children:(0,l.jsx)(e.span,{className:"mord",children:"1"})})]})]}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.686em"},children:(0,l.jsx)(e.span,{})})})]})}),(0,l.jsx)(e.span,{className:"mclose nulldelimiter"})]}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mbin",children:"\xd7"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,l.jsxs)(e.span,{className:"base",children:[(0,l.jsx)(e.span,{className:"strut",style:{height:"1.8769em",verticalAlign:"-0.7693em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mopen nulldelimiter"}),(0,l.jsx)(e.span,{className:"mfrac",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsxs)(e.span,{className:"vlist",style:{height:"1.1076em"},children:[(0,l.jsxs)(e.span,{style:{top:"-2.314em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mbin",children:"+"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mord",children:"1"})]})]}),(0,l.jsxs)(e.span,{style:{top:"-3.23em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,l.jsxs)(e.span,{style:{top:"-3.677em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"mord",children:(0,l.jsx)(e.span,{className:"mord mathnormal",children:"m"})})]})]}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.7693em"},children:(0,l.jsx)(e.span,{})})})]})}),(0,l.jsx)(e.span,{className:"mclose nulldelimiter"})]}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mbin",children:"\xd7"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,l.jsxs)(e.span,{className:"base",children:[(0,l.jsx)(e.span,{className:"strut",style:{height:"2.0908em",verticalAlign:"-0.7693em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mopen nulldelimiter"}),(0,l.jsx)(e.span,{className:"mfrac",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsxs)(e.span,{className:"vlist",style:{height:"1.3214em"},children:[(0,l.jsxs)(e.span,{style:{top:"-2.314em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mbin",children:"+"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mord",children:"2"})]})]}),(0,l.jsxs)(e.span,{style:{top:"-3.23em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,l.jsxs)(e.span,{style:{top:"-3.677em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mbin",children:"+"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mord",children:"1"})]})]})]}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.7693em"},children:(0,l.jsx)(e.span,{})})})]})}),(0,l.jsx)(e.span,{className:"mclose nulldelimiter"})]}),(0,l.jsx)(e.span,{className:"mord",children:"\xd7"}),(0,l.jsx)(e.span,{className:"mpunct",children:"\u22c5\u22c5\u22c5"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,l.jsx)(e.span,{className:"mord",children:"\xd7"}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mopen nulldelimiter"}),(0,l.jsx)(e.span,{className:"mfrac",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsxs)(e.span,{className:"vlist",style:{height:"1.3214em"},children:[(0,l.jsxs)(e.span,{style:{top:"-2.314em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"mord",children:(0,l.jsx)(e.span,{className:"mord mathnormal",children:"n"})})]}),(0,l.jsxs)(e.span,{style:{top:"-3.23em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,l.jsxs)(e.span,{style:{top:"-3.677em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,l.jsx)(e.span,{className:"mord",children:"1"})]})]})]}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.686em"},children:(0,l.jsx)(e.span,{})})})]})}),(0,l.jsx)(e.span,{className:"mclose nulldelimiter"})]}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,l.jsx)(e.span,{className:"mrel",children:"="}),(0,l.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,l.jsxs)(e.span,{className:"base",children:[(0,l.jsx)(e.span,{className:"strut",style:{height:"2.0074em",verticalAlign:"-0.686em"}}),(0,l.jsxs)(e.span,{className:"mord",children:[(0,l.jsx)(e.span,{className:"mopen nulldelimiter"}),(0,l.jsx)(e.span,{className:"mfrac",children:(0,l.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,l.jsxs)(e.span,{className:"vlist-r",children:[(0,l.jsxs)(e.span,{className:"vlist",style:{height:"1.3214em"},children:[(0,l.jsxs)(e.span,{style:{top:"-2.314em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"mord",children:(0,l.jsx)(e.span,{className:"mord mathnormal",children:"n"})})]}),(0,l.jsxs)(e.span,{style:{top:"-3.23em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,l.jsxs)(e.span,{style:{top:"-3.677em"},children:[(0,l.jsx)(e.span,{className:"pstrut",style:{height:"3em"}}),(0,l.jsx)(e.span,{className:"mord",children:(0,l.jsx)(e.span,{className:"mord",children:"1"})})]})]}),(0,l.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,l.jsx)(e.span,{className:"vlist-r",children:(0,l.jsx)(e.span,{className:"vlist",style:{height:"0.686em"},children:(0,l.jsx)(e.span,{})})})]})}),(0,l.jsx)(e.span,{className:"mclose nulldelimiter"})]})]})]})]})}),"\n",(0,l.jsx)(e.p,{children:"Thus, each node has an equal probability of being selected."}),"\n",(0,l.jsx)(e.p,{children:"Alternatively, we can preprocess the linked list by traversing it once and converting it into an array for easier random access."}),"\n",(0,l.jsxs)(a,{children:[(0,l.jsx)(n,{value:"cpp",label:"C++",children:(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-cpp",children:"class Solution {\n   public:\n    Solution(ListNode* node) : head_(node) {}\n\n    int getRandom() {\n        int pick = head_->val;\n        ListNode* node = head_->next;\n        int i = 2;\n        while (node) {\n            if (rand() % i == 0) {\n                pick = node->val;\n            }\n            ++i;\n            node = node->next;\n        }\n        return pick;\n    }\n\n   private:\n    ListNode* head_;\n};\n"})})}),(0,l.jsx)(n,{value:"py",label:"Python",children:(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-py",children:"class Solution:\n    def __init__(self, head: Optional[ListNode]):\n        self.head = head\n\n    def getRandom(self) -> int:\n        pick = self.head.val\n        node = self.head.next\n        i = 2\n        while node is not None:\n            if random.randint(0, i - 1) == 0:\n                pick = node.val\n            i += 1\n            node = node.next\n        return pick\n"})})})]})]})}function h(s={}){const{wrapper:e}={...(0,i.R)(),...s.components};return e?(0,l.jsx)(e,{...s,children:(0,l.jsx)(d,{...s})}):d(s)}function o(s,e){throw new Error("Expected "+(e?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);