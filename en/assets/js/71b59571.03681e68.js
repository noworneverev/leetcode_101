"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[4406],{8764:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"trees/13-3-level-order-traversal","title":"13.3 \u5c42\u6b21\u904d\u5386","description":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u8fdb\u884c\u5c42\u6b21\u904d\u5386\u3002\u6ce8\u610f\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u961f\u5217\u6765\u5206\u522b\u5b58\u50a8\u5f53\u524d\u5c42\u7684\u8282\u70b9\u548c\u4e0b\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u5728\u5f00\u59cb\u904d\u5386\u4e00\u5c42\u7684\u8282\u70b9\u65f6\uff0c\u5f53\u524d\u961f\u5217\u4e2d\u7684\u8282\u70b9\u6570\u5c31\u662f\u5f53\u524d\u5c42\u7684\u8282\u70b9\u6570\uff0c\u53ea\u8981\u63a7\u5236\u904d\u5386\u8fd9\u4e48\u591a\u8282\u70b9\u6570\uff0c\u5c31\u80fd\u4fdd\u8bc1\u8fd9\u6b21\u904d\u5386\u7684\u90fd\u662f\u5f53\u524d\u5c42\u7684\u8282\u70b9\u3002","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/13-trees/13-3-level-order-traversal.mdx","sourceDirName":"13-trees","slug":"/trees/13-3-level-order-traversal","permalink":"/leetcode_101/en/trees/13-3-level-order-traversal","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/13-trees/13-3-level-order-traversal.mdx","tags":[],"version":"current","sidebarPosition":70,"frontMatter":{"sidebar_position":70},"sidebar":"tutorialSidebar","previous":{"title":"13.2 \u6811\u7684\u9012\u5f52","permalink":"/leetcode_101/en/trees/13-2-tree-recursion"},"next":{"title":"13.4 \u524d\u4e2d\u540e\u5e8f\u904d\u5386","permalink":"/leetcode_101/en/trees/13-4-preorder-inorder-postorder-traversal"}}');var t=r(4848),o=r(8453);const i={sidebar_position:70},s="13.3 \u5c42\u6b21\u904d\u5386",a={},d=[{value:"637. Average of Levels in Binary Tree",id:"637-average-of-levels-in-binary-tree",level:2},{value:"Problem Description",id:"problem-description",level:3},{value:"Input and Output Example",id:"input-and-output-example",level:3},{value:"Solution Explanation",id:"solution-explanation",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components},{TabItem:r,Tabs:l}=n;return r||u("TabItem",!0),l||u("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"133-\u5c42\u6b21\u904d\u5386",children:"13.3 \u5c42\u6b21\u904d\u5386"})}),"\n",(0,t.jsx)(n.p,{children:"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u8fdb\u884c\u5c42\u6b21\u904d\u5386\u3002\u6ce8\u610f\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u961f\u5217\u6765\u5206\u522b\u5b58\u50a8\u5f53\u524d\u5c42\u7684\u8282\u70b9\u548c\u4e0b\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u5728\u5f00\u59cb\u904d\u5386\u4e00\u5c42\u7684\u8282\u70b9\u65f6\uff0c\u5f53\u524d\u961f\u5217\u4e2d\u7684\u8282\u70b9\u6570\u5c31\u662f\u5f53\u524d\u5c42\u7684\u8282\u70b9\u6570\uff0c\u53ea\u8981\u63a7\u5236\u904d\u5386\u8fd9\u4e48\u591a\u8282\u70b9\u6570\uff0c\u5c31\u80fd\u4fdd\u8bc1\u8fd9\u6b21\u904d\u5386\u7684\u90fd\u662f\u5f53\u524d\u5c42\u7684\u8282\u70b9\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"637-average-of-levels-in-binary-tree",children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/average-of-levels-in-binary-tree/",children:"637. Average of Levels in Binary Tree"})}),"\n",(0,t.jsx)(n.h3,{id:"problem-description",children:"Problem Description"}),"\n",(0,t.jsx)(n.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u6c42\u6bcf\u4e00\u5c42\u7684\u8282\u70b9\u503c\u7684\u5e73\u5747\u6570\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"input-and-output-example",children:"Input and Output Example"}),"\n",(0,t.jsx)(n.p,{children:"\u8f93\u5165\u662f\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u8868\u793a\u6bcf\u5c42\u8282\u70b9\u503c\u7684\u5e73\u5747\u6570\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input:\n    3\n   / \\\n  9  20\n     / \\\n    15  7\nOutput: [3, 14.5, 11]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"solution-explanation",children:"Solution Explanation"}),"\n",(0,t.jsx)(n.p,{children:"\u5229\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u6c42\u53d6\u6bcf\u5c42\u7684\u5e73\u5747\u503c\u3002"}),"\n",(0,t.jsxs)(l,{children:[(0,t.jsx)(r,{value:"cpp",label:"C++",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"vector<double> averageOfLevels(TreeNode* root) {\n    vector<double> level_avg;\n    if (root == nullptr) {\n        return level_avg;\n    }\n    queue<TreeNode*> q;\n    q.push(root);\n    int count = q.size();\n    while (count > 0) {\n        double level_sum = 0;\n        for (int i = 0; i < count; ++i) {\n            TreeNode* node = q.front();\n            q.pop();\n            level_sum += node->val;\n            if (node->left != nullptr) {\n                q.push(node->left);\n            }\n            if (node->right != nullptr) {\n                q.push(node->right);\n            }\n        }\n        level_avg.push_back(level_sum / count);\n        count = q.size();\n    }\n    return level_avg;\n}\n"})})}),(0,t.jsx)(r,{value:"py",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"def averageOfLevels(root: Optional[TreeNode]) -> List[float]:\n    level_avg = []\n    if root is None:\n        return level_avg\n    q = collections.deque()\n    q.append(root)\n    count = len(q)\n    while count > 0:\n        level_sum = 0\n        for _ in range(count):\n            node = q.popleft()\n            level_sum += node.val\n            if node.left is not None:\n                q.append(node.left)\n            if node.right is not None:\n                q.append(node.right)\n        level_avg.append(level_sum / count)\n        count = len(q)\n    return level_avg\n"})})})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);