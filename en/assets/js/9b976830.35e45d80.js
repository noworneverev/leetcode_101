"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[3717],{2988:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"two-pointer-techniques/2-1-algorithm-explanation","title":"2.1 Algorithm Explanation","description":"The two-pointer technique is primarily used for traversing arrays, where two pointers point to different elements to collaborate on a task. It can also be extended to multiple pointers across multiple arrays.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/2-two-pointer-techniques/2-1-algorithm-explanation.md","sourceDirName":"2-two-pointer-techniques","slug":"/two-pointer-techniques/2-1-algorithm-explanation","permalink":"/leetcode_101/en/two-pointer-techniques/2-1-algorithm-explanation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"2. \u73a9\u8f6c\u53cc\u6307\u9488","permalink":"/leetcode_101/en/category/2-\u73a9\u8f6c\u53cc\u6307\u9488"},"next":{"title":"2.2 Two Sum","permalink":"/leetcode_101/en/two-pointer-techniques/2-2-two-sum"}}');var i=n(4848),r=n(8453);const a={sidebar_position:5},s="2.1 Algorithm Explanation",c={},l=[];function p(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"21-algorithm-explanation",children:"2.1 Algorithm Explanation"})}),"\n",(0,i.jsx)(t.p,{children:"The two-pointer technique is primarily used for traversing arrays, where two pointers point to different elements to collaborate on a task. It can also be extended to multiple pointers across multiple arrays."}),"\n",(0,i.jsx)(t.p,{children:"If two pointers point to the same array and move in the same direction without intersecting, this is also known as a sliding window (the area between the two pointers represents the current window), often used for interval searching."}),"\n",(0,i.jsx)(t.p,{children:"If two pointers point to the same array but move in opposite directions, they can be used for searching, especially when the array is sorted."}),"\n",(0,i.jsxs)(t.p,{children:["In C++, pay attention to the position of ",(0,i.jsx)(t.code,{children:"const"})," as it affects the pointer\u2019s behavior:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"int x;\nint * p1 = &x; // The pointer and the value can both be modified\nconst int * p2 = &x; // The pointer can be modified, but the value cannot (const int)\nint * const p3 = &x; // The pointer cannot be modified (* const), but the value can\nconst int * const p4 = &x; // Neither the pointer nor the value can be modified\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);