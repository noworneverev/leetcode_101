"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[6526],{7342:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"data-structures/10-5-monotonic-stack","title":"10.5 \u5355\u8c03\u6808","description":"\u5355\u8c03\u6808\u901a\u8fc7\u7ef4\u6301\u6808\u5185\u503c\u7684\u5355\u8c03\u9012\u589e\uff08\u9012\u51cf\uff09\u6027\uff0c\u5728\u6574\u4f53 $O(n)$ \u7684\u65f6\u95f4\u5185\u5904\u7406\u9700\u8981\u5927\u5c0f\u6bd4\u8f83\u7684\u95ee\u9898\u3002","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/10-data-structures/10-5-monotonic-stack.mdx","sourceDirName":"10-data-structures","slug":"/data-structures/10-5-monotonic-stack","permalink":"/leetcode_101/en/data-structures/10-5-monotonic-stack","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/10-data-structures/10-5-monotonic-stack.mdx","tags":[],"version":"current","sidebarPosition":52,"frontMatter":{"sidebar_position":52},"sidebar":"tutorialSidebar","previous":{"title":"10.4 \u6808\u548c\u961f\u5217","permalink":"/leetcode_101/en/data-structures/10-4-stack-and-queue"},"next":{"title":"10.6 \u4f18\u5148\u961f\u5217","permalink":"/leetcode_101/en/data-structures/10-6-priority-queue"}}');var a=n(4848),r=n(8453);const i={sidebar_position:52},o="10.5 \u5355\u8c03\u6808",c={},l=[{value:"739. Daily Temperatures",id:"739-daily-temperatures",level:2},{value:"Problem Description",id:"problem-description",level:3},{value:"Input and Output Example",id:"input-and-output-example",level:3},{value:"Solution Explanation",id:"solution-explanation",level:3}];function d(e){const t={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",...(0,r.R)(),...e.components},{TabItem:n,Tabs:s}=t;return n||m("TabItem",!0),s||m("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"105-\u5355\u8c03\u6808",children:"10.5 \u5355\u8c03\u6808"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"\u5355\u8c03\u6808"}),"\u901a\u8fc7\u7ef4\u6301\u6808\u5185\u503c\u7684\u5355\u8c03\u9012\u589e\uff08\u9012\u51cf\uff09\u6027\uff0c\u5728\u6574\u4f53 ",(0,a.jsxs)(t.span,{className:"katex",children:[(0,a.jsx)(t.span,{className:"katex-mathml",children:(0,a.jsx)(t.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(t.semantics,{children:[(0,a.jsxs)(t.mrow,{children:[(0,a.jsx)(t.mi,{children:"O"}),(0,a.jsx)(t.mo,{stretchy:"false",children:"("}),(0,a.jsx)(t.mi,{children:"n"}),(0,a.jsx)(t.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(t.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,a.jsx)(t.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(t.span,{className:"base",children:[(0,a.jsx)(t.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(t.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(t.span,{className:"mopen",children:"("}),(0,a.jsx)(t.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(t.span,{className:"mclose",children:")"})]})})]})," \u7684\u65f6\u95f4\u5185\u5904\u7406\u9700\u8981\u5927\u5c0f\u6bd4\u8f83\u7684\u95ee\u9898\u3002"]}),"\n",(0,a.jsx)(t.h2,{id:"739-daily-temperatures",children:(0,a.jsx)(t.a,{href:"https://leetcode.com/problems/daily-temperatures/",children:"739. Daily Temperatures"})}),"\n",(0,a.jsx)(t.h3,{id:"problem-description",children:"Problem Description"}),"\n",(0,a.jsx)(t.p,{children:"\u7ed9\u5b9a\u6bcf\u5929\u7684\u6e29\u5ea6\uff0c\u6c42\u5bf9\u4e8e\u6bcf\u4e00\u5929\u9700\u8981\u7b49\u51e0\u5929\u624d\u53ef\u4ee5\u7b49\u5230\u66f4\u6696\u548c\u7684\u4e00\u5929\u3002\u5982\u679c\u8be5\u5929\u4e4b\u540e\u4e0d\u5b58\u5728\u66f4\u6696\u548c\u7684\u5929\u6c14\uff0c\u5219\u8bb0\u4e3a 0\u3002"}),"\n",(0,a.jsx)(t.h3,{id:"input-and-output-example",children:"Input and Output Example"}),"\n",(0,a.jsx)(t.p,{children:"\u8f93\u5165\u662f\u4e00\u4e2a\u4e00\u7ef4\u6574\u6570\u6570\u7ec4\uff0c\u8f93\u51fa\u662f\u540c\u6837\u957f\u5ea6\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8868\u793a\u5bf9\u4e8e\u6bcf\u5929\u9700\u8981\u7b49\u5f85\u591a\u5c11\u5929\u3002"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"Input: [73, 74, 75, 71, 69, 72, 76, 73]\nOutput: [1, 1, 4, 2, 1, 1, 0, 0]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"solution-explanation",children:"Solution Explanation"}),"\n",(0,a.jsx)(t.p,{children:"\u6211\u4eec\u53ef\u4ee5\u7ef4\u6301\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u6808\uff0c\u8868\u793a\u6bcf\u5929\u7684\u6e29\u5ea6\uff1b\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\u5929\u6570\u5dee\uff0c\u6211\u4eec\u8fd9\u91cc\u5b58\u653e\u4f4d\u7f6e\uff08\u5373\u65e5\u671f\uff09\u800c\u975e\u6e29\u5ea6\u672c\u8eab\u3002\u6211\u4eec\u4ece\u5de6\u5411\u53f3\u904d\u5386\u6e29\u5ea6\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u65e5\u671f p\uff0c\u5982\u679c p \u7684\u6e29\u5ea6\u6bd4\u6808\u9876\u5b58\u50a8\u4f4d\u7f6e q \u7684\u6e29\u5ea6\u9ad8\uff0c\u5219\u6211\u4eec\u53d6\u51fa q\uff0c\u5e76\u8bb0\u5f55 q \u9700\u8981\u7b49\u5f85\u7684\u5929\u6570\u4e3a p \u2212 q\uff1b\u6211\u4eec\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u76f4\u5230 p \u7684\u6e29\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u6808\u9876\u5b58\u50a8\u4f4d\u7f6e\u7684\u6e29\u5ea6\uff08\u6216\u7a7a\u6808\uff09\u65f6\uff0c\u6211\u4eec\u5c06 p \u63d2\u5165\u6808\u9876\uff0c\u7136\u540e\u8003\u8651\u4e0b\u4e00\u5929\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6808\u5185\u6570\u7ec4\u6c38\u8fdc\u4fdd\u6301\u5355\u8c03\u9012\u51cf\uff0c\u907f\u514d\u4e86\u4f7f\u7528\u6392\u5e8f\u8fdb\u884c\u6bd4\u8f83\u3002\u6700\u540e\u82e5\u6808\u5185\u5269\u4f59\u4e00\u4e9b\u65e5\u671f\uff0c\u5219\u8bf4\u660e\u5b83\u4eec\u4e4b\u540e\u90fd\u6ca1\u6709\u51fa\u73b0\u66f4\u6696\u548c\u7684\u65e5\u671f\u3002"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)(n,{value:"cpp",label:"C++",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"vector<int> dailyTemperatures(vector<int>& temperatures) {\n    int n = temperatures.size();\n    vector<int> days_to_wait(n, 0);\n    stack<int> mono_stack;\n    for (int i = 0; i < n; ++i) {\n        while (!mono_stack.empty()) {\n            int j = mono_stack.top();\n            if (temperatures[i] <= temperatures[j]) {\n                break;\n            }\n            mono_stack.pop();\n            days_to_wait[j] = i - j;\n        }\n        mono_stack.push(i);\n    }\n    return days_to_wait;\n}\n"})})}),(0,a.jsx)(n,{value:"py",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-py",children:"def dailyTemperatures(temperatures: List[int]) -> List[int]:\n    n = len(temperatures)\n    days_to_wait = [0] * n\n    mono_stack = []\n    for i in range(n):\n        while len(mono_stack) > 0:\n            j = mono_stack[-1]\n            if temperatures[i] <= temperatures[j]:\n                break\n            mono_stack.pop()\n            days_to_wait[j] = i - j\n        mono_stack.append(i)\n    return days_to_wait\n"})})})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}function m(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);