"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[9474],{2223:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>n,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"searching-algorithms/5-1-algorithm-explanation","title":"5.1 \u7b97\u6cd5\u89e3\u91ca","description":"Depth First Search (DFS) and Breadth First Search (BFS) are two of the most common priority search methods. They are widely used for searching in structures such as graphs and trees.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/5-searching-algorithms/5-1-algorithm-explanation.md","sourceDirName":"5-searching-algorithms","slug":"/searching-algorithms/5-1-algorithm-explanation","permalink":"/leetcode_101/en/searching-algorithms/5-1-algorithm-explanation","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/5-searching-algorithms/5-1-algorithm-explanation.md","tags":[],"version":"current","sidebarPosition":21,"frontMatter":{"sidebar_position":21},"sidebar":"tutorialSidebar","previous":{"title":"5. \u4e00\u5207\u7686\u53ef\u641c\u7d22","permalink":"/leetcode_101/en/category/5-\u4e00\u5207\u7686\u53ef\u641c\u7d22"},"next":{"title":"5.2 Depth First Search","permalink":"/leetcode_101/en/searching-algorithms/5-2-depth-first-search"}}');var a=t(4848),i=t(8453);const n={sidebar_position:21},o="5.1 \u7b97\u6cd5\u89e3\u91ca",c={},h=[];function d(e){const r={code:"code",h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"51-\u7b97\u6cd5\u89e3\u91ca",children:"5.1 \u7b97\u6cd5\u89e3\u91ca"})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"Depth First Search (DFS)"})," and ",(0,a.jsx)(r.code,{children:"Breadth First Search (BFS)"})," are two of the most common priority search methods. They are widely used for searching in structures such as graphs and trees."]})]})}function l(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);