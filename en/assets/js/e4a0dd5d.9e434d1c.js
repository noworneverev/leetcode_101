"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[9428],{3062:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"divide-and-conquer/7-3-exercises","title":"7.3 Exercises","description":"Basic Difficulty","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/7-divide-and-conquer/7-3-exercises.md","sourceDirName":"7-divide-and-conquer","slug":"/divide-and-conquer/7-3-exercises","permalink":"/leetcode_101/en/divide-and-conquer/7-3-exercises","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":37,"frontMatter":{"sidebar_position":37},"sidebar":"tutorialSidebar","previous":{"title":"7.2 Expression Problems","permalink":"/leetcode_101/en/divide-and-conquer/7-2-expression-problems"},"next":{"title":"8. \u5de7\u89e3\u6570\u5b66\u95ee\u9898","permalink":"/leetcode_101/en/category/8-\u5de7\u89e3\u6570\u5b66\u95ee\u9898"}}');var s=r(4848),t=r(8453);const a={sidebar_position:37},o="7.3 Exercises",d={},c=[{value:"Basic Difficulty",id:"basic-difficulty",level:2},{value:"932. Beautiful Array",id:"932-beautiful-array",level:3},{value:"Advanced Difficulty",id:"advanced-difficulty",level:2},{value:"312. Burst Balloons",id:"312-burst-balloons",level:3}];function l(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"73-exercises",children:"7.3 Exercises"})}),"\n",(0,s.jsx)(i.h2,{id:"basic-difficulty",children:"Basic Difficulty"}),"\n",(0,s.jsx)(i.h3,{id:"932-beautiful-array",children:(0,s.jsx)(i.a,{href:"https://leetcode.com/problems/beautiful-array/",children:"932. Beautiful Array"})}),"\n",(0,s.jsxs)(i.p,{children:["Try solving this using a top-down divide-and-conquer (recursive) approach with ",(0,s.jsx)(i.code,{children:"memoization"})," for optimization; then attempt a bottom-up dynamic programming approach."]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"advanced-difficulty",children:"Advanced Difficulty"}),"\n",(0,s.jsx)(i.h3,{id:"312-burst-balloons",children:(0,s.jsx)(i.a,{href:"https://leetcode.com/problems/burst-balloons/",children:"312. Burst Balloons"})}),"\n",(0,s.jsxs)(i.p,{children:["Try solving this using a top-down divide-and-conquer (recursive) approach with ",(0,s.jsx)(i.code,{children:"memoization"})," for optimization; then attempt a bottom-up dynamic programming approach."]})]})}function u(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);