"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[8726],{5185:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"data-structures/10-8-hash-table","title":"10.8 \u96dc\u6e4a\u8868","description":"\u96dc\u6e4a\u8868\uff08hash table, hash map\uff09\uff0c\u53c8\u7a31\u6563\u5217\u8868\uff0c\u4f7f\u7528 $O(n)$ \u7a7a\u9593\u8907\u96dc\u5ea6\u5b58\u5132\u8cc7\u6599\uff0c\u901a\u904e\u96dc\u6e4a\u51fd\u6578\uff08hash function\uff09\u6620\u5c04\u4f4d\u7f6e\uff0c\u5f9e\u800c\u5be6\u73fe\u8fd1\u4f3c $O(1)$ \u6642\u9593\u8907\u96dc\u5ea6\u7684\u63d2\u5165\u3001\u67e5\u8a62\u3001\u522a\u9664\u7b49\u64cd\u4f5c\u3002\u96dc\u6e4a\u8868\u53ef\u4ee5\u7528\u4f86\u7d71\u8a08\u983b\u7387\u3001\u8a18\u9304\u5167\u5bb9\u7b49\u7b49\u3002","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/10-data-structures/10-8-hash-table.mdx","sourceDirName":"10-data-structures","slug":"/data-structures/10-8-hash-table","permalink":"/leetcode_101/zh-TW/data-structures/10-8-hash-table","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/10-data-structures/10-8-hash-table.mdx","tags":[],"version":"current","sidebarPosition":55,"frontMatter":{"sidebar_position":55},"sidebar":"tutorialSidebar","previous":{"title":"10.7 \u96d9\u7aef\u4f47\u5217","permalink":"/leetcode_101/zh-TW/data-structures/10-7-deque"},"next":{"title":"10.9 \u591a\u91cd\u96c6\u5408\u548c\u6620\u5c04","permalink":"/leetcode_101/zh-TW/data-structures/10-9-multisets-and-maps"}}');var t=s(4848),i=s(8453);const c={sidebar_position:55},l="10.8 \u96dc\u6e4a\u8868",r={},h=[{value:"1. Two Sum",id:"1-two-sum",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3",level:3},{value:"128. Longest Consecutive Sequence",id:"128-longest-consecutive-sequence",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0-1",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-1",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3-1",level:3},{value:"149. Max Points on a Line",id:"149-max-points-on-a-line",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0-2",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-2",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3-2",level:3}];function m(e){const n={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",...(0,i.R)(),...e.components},{TabItem:s,Tabs:a}=n;return s||o("TabItem",!0),a||o("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"108-\u96dc\u6e4a\u8868",children:"10.8 \u96dc\u6e4a\u8868"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"\u96dc\u6e4a\u8868\uff08hash table, hash map\uff09"}),"\uff0c\u53c8\u7a31\u6563\u5217\u8868\uff0c\u4f7f\u7528 ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"O"}),(0,t.jsx)(n.mo,{stretchy:"false",children:"("}),(0,t.jsx)(n.mi,{children:"n"}),(0,t.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(n.span,{className:"mopen",children:"("}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(n.span,{className:"mclose",children:")"})]})})]})," \u7a7a\u9593\u8907\u96dc\u5ea6\u5b58\u5132\u8cc7\u6599\uff0c\u901a\u904e\u96dc\u6e4a\u51fd\u6578\uff08hash function\uff09\u6620\u5c04\u4f4d\u7f6e\uff0c\u5f9e\u800c\u5be6\u73fe\u8fd1\u4f3c ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"O"}),(0,t.jsx)(n.mo,{stretchy:"false",children:"("}),(0,t.jsx)(n.mn,{children:"1"}),(0,t.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(n.span,{className:"mopen",children:"("}),(0,t.jsx)(n.span,{className:"mord",children:"1"}),(0,t.jsx)(n.span,{className:"mclose",children:")"})]})})]})," \u6642\u9593\u8907\u96dc\u5ea6\u7684\u63d2\u5165\u3001\u67e5\u8a62\u3001\u522a\u9664\u7b49\u64cd\u4f5c\u3002\u96dc\u6e4a\u8868\u53ef\u4ee5\u7528\u4f86\u7d71\u8a08\u983b\u7387\u3001\u8a18\u9304\u5167\u5bb9\u7b49\u7b49\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u5982\u679c\u5143\u7d20\u662f\u6709\u9650\u7684\uff0c\u4e14\u7bc4\u570d\u4e0d\u5927\uff0c\u90a3\u9ebc\u53ef\u4ee5\u7528\u4e00\u500b\u56fa\u5b9a\u5927\u5c0f\u7684\u9663\u5217\u4f86\u5b58\u5132\u6216\u7d71\u8a08\u5143\u7d20\u3002\u4f8b\u5982\uff0c\u6211\u5011\u9700\u8981\u7d71\u8a08\u4e00\u500b\u5b57\u4e32\u4e2d\u6240\u6709\u5b57\u6bcd\u7684\u51fa\u73fe\u6b21\u6578\uff0c\u5247\u53ef\u4ee5\u7528\u4e00\u500b\u9577\u5ea6\u70ba 26 \u7684\u9663\u5217\u4f86\u9032\u884c\u7d71\u8a08\uff0c\u5176\u96dc\u6e4a\u51fd\u6578\u5373\u70ba\u5b57\u6bcd\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff0c\u9019\u6a23\u7a7a\u9593\u8907\u96dc\u5ea6\u5c31\u53ef\u4ee5\u964d\u4f4e\u70ba\u5e38\u6578\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"1-two-sum",children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/two-sum/",children:"1. Two Sum"})}),"\n",(0,t.jsx)(n.h3,{id:"\u984c\u76ee\u63cf\u8ff0",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(n.p,{children:"\u7d66\u5b9a\u4e00\u500b\uff08\u672a\u6392\u5e8f\u7684\uff09\u6574\u6578\u9663\u5217\uff0c\u5df2\u77e5\u6709\u4e14\u53ea\u6709\u5169\u500b\u6578\u7684\u548c\u7b49\u65bc\u7d66\u5b9a\u503c\uff0c\u6c42\u9019\u5169\u500b\u6578\u7684\u4f4d\u7f6e\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,t.jsx)(n.p,{children:"\u8f38\u5165\u662f\u4e00\u500b\u4e00\u7dad\u6574\u6578\u9663\u5217\u548c\u4e00\u500b\u76ee\u6a19\u503c\uff0c\u8f38\u51fa\u662f\u4e00\u500b\u5927\u5c0f\u70ba 2 \u7684\u4e00\u7dad\u9663\u5217\uff0c\u8868\u793a\u6eff\u8db3\u689d\u4ef6\u7684\u5169\u500b\u6578\u5b57\u7684\u4f4d\u7f6e\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [2, 7, 15, 11], target = 9\nOutput: [0, 1]\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c\u7b2c 0 \u500b\u4f4d\u7f6e\u7684\u503c 2 \u548c\u7b2c 1 \u500b\u4f4d\u7f6e\u7684\u503c 7 \u7684\u548c\u70ba 9\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"\u984c\u89e3",children:"\u984c\u89e3"}),"\n",(0,t.jsxs)(n.p,{children:["\u6211\u5011\u53ef\u4ee5\u5229\u7528\u96dc\u6e4a\u8868\u5132\u5b58\u904d\u6b77\u904e\u7684\u503c\u4ee5\u53ca\u5b83\u5011\u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u904d\u6b77\u5230\u4f4d\u7f6e i \u7684\u6642\u5019\uff0c\u67e5\u627e\u96dc\u6e4a\u8868\u88e1\u662f\u5426\u5b58\u5728 ",(0,t.jsx)(n.code,{children:"target - nums[i]"}),"\uff0c\u82e5\u5b58\u5728\uff0c\u5247\u8aaa\u660e\u9019\u5169\u500b\u503c\u7684\u548c\u70ba ",(0,t.jsx)(n.code,{children:"target"}),"\u3002"]}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)(s,{value:"cpp",label:"C++",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"vector<int> twoSum(vector<int>& nums, int target) {\n    unordered_map<int, int> cache;  // <\u503c\uff0c\u4f4d\u7f6e>\n    for (int i = 0; i < nums.size(); ++i) {\n        int num1 = nums[i], num2 = target - num1;\n        if (cache.contains(num2)) {\n            return vector<int>{cache[num2], i};\n        }\n        cache[num1] = i;\n    }\n    return {};\n}\n"})})}),(0,t.jsx)(s,{value:"py",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"def twoSum(nums: List[int], target: int) -> List[int]:\n    cache = dict() # <\u503c\uff0c\u4f4d\u7f6e>\n    for i, num1 in enumerate(nums):\n        num2 = target - num1\n        if num2 in cache:\n            return [cache[num2], i]\n        cache[num1] = i\n    return []\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"128-longest-consecutive-sequence",children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/longest-consecutive-sequence/",children:"128. Longest Consecutive Sequence"})}),"\n",(0,t.jsx)(n.h3,{id:"\u984c\u76ee\u63cf\u8ff0-1",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(n.p,{children:"\u7d66\u5b9a\u4e00\u500b\u6574\u6578\u9663\u5217\uff0c\u6c42\u9019\u500b\u9663\u5217\u4e2d\u7684\u6578\u5b57\u53ef\u4ee5\u7d44\u6210\u7684\u6700\u9577\u9023\u7e8c\u5e8f\u5217\u6709\u591a\u9577\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-1",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,t.jsx)(n.p,{children:"\u8f38\u5165\u662f\u4e00\u500b\u6574\u6578\u9663\u5217\uff0c\u8f38\u51fa\u662f\u4e00\u500b\u6574\u6578\uff0c\u8868\u793a\u9023\u7e8c\u5e8f\u5217\u7684\u9577\u5ea6\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c\u6700\u9577\u9023\u7e8c\u5e8f\u5217\u662f [1,2,3,4]\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"\u984c\u89e3-1",children:"\u984c\u89e3"}),"\n",(0,t.jsx)(n.p,{children:"\u6211\u5011\u53ef\u4ee5\u628a\u6240\u6709\u6578\u5b57\u653e\u5230\u4e00\u500b\u96dc\u6e4a\u8868\uff0c\u7136\u5f8c\u4e0d\u65b7\u5730\u5f9e\u96dc\u6e4a\u8868\u4e2d\u4efb\u610f\u53d6\u4e00\u500b\u503c\uff0c\u4e26\u522a\u9664\u6389\u5176\u4e4b\u524d\u4e4b\u5f8c\u7684\u6240\u6709\u9023\u7e8c\u6578\u5b57\uff0c\u7136\u5f8c\u66f4\u65b0\u76ee\u524d\u7684\u6700\u9577\u9023\u7e8c\u5e8f\u5217\u9577\u5ea6\u3002\u91cd\u8907\u9019\u4e00\u904e\u7a0b\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u627e\u5230\u6240\u6709\u7684\u9023\u7e8c\u6578\u5b57\u5e8f\u5217\u3002"}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)(s,{value:"cpp",label:"C++",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int longestConsecutive(vector<int>& nums) {\n    unordered_set<int> cache(nums.begin(), nums.end());\n    int max_len = 0;\n    while (!cache.empty()) {\n        int cur = *(cache.begin());\n        cache.erase(cur);\n        int l = cur - 1, r = cur + 1;\n        while (cache.contains(l)) {\n            cache.erase(l--);\n        }\n        while (cache.contains(r)) {\n            cache.erase(r++);\n        }\n        max_len = max(max_len, r - l - 1);\n    }\n    return max_len;\n}\n"})})}),(0,t.jsx)(s,{value:"py",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"def longestConsecutive(nums: List[int]) -> int:\n    cache = set(nums)\n    max_len = 0\n\n    while len(cache) > 0:\n        cur = next(iter(cache))\n        cache.remove(cur)\n\n        l, r = cur - 1, cur + 1\n        while l in cache:\n            cache.remove(l)\n            l -= 1\n        while r in cache:\n            cache.remove(r)\n            r += 1\n\n        max_len = max(max_len, r - l - 1)\n\n    return max_len\n\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"149-max-points-on-a-line",children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/max-points-on-a-line/",children:"149. Max Points on a Line"})}),"\n",(0,t.jsx)(n.h3,{id:"\u984c\u76ee\u63cf\u8ff0-2",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(n.p,{children:"\u7d66\u5b9a\u4e00\u4e9b\u4e8c\u7dad\u5ea7\u6a19\u4e2d\u7684\u9ede\uff0c\u6c42\u540c\u4e00\u689d\u7dda\u4e0a\u6700\u591a\u6709\u591a\u5c11\u9ede\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-2",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,t.jsx)(n.p,{children:"\u8f38\u5165\u662f\u4e00\u500b\u4e8c\u7dad\u6574\u6578\u9663\u5217\uff0c\u8868\u793a\u6bcf\u500b\u9ede\u7684\u6a6b\u7e31\u5ea7\u6a19\uff1b\u8f38\u51fa\u662f\u4e00\u500b\u6574\u6578\uff0c\u8868\u793a\u6eff\u8db3\u689d\u4ef6\u7684\u6700\u591a\u9ede\u6578\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]\n^\n|\n| o\n| o o\n| o\n| o o\n+-------------------\x3e\n0 1 2 3 4 5 6\nOutput: 4\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"y"}),(0,t.jsx)(n.mo,{children:"="}),(0,t.jsx)(n.mn,{children:"5"}),(0,t.jsx)(n.mo,{children:"\u2212"}),(0,t.jsx)(n.mi,{children:"x"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"y = 5 - x"})]})})}),(0,t.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(n.span,{className:"mrel",children:"="}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,t.jsx)(n.span,{className:"mord",children:"5"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(n.span,{className:"mbin",children:"\u2212"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.4306em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"x"})]})]})]})," \u4e0a\u6709\u56db\u500b\u9ede\u3002"]}),"\n",(0,t.jsx)(n.h3,{id:"\u984c\u89e3-2",children:"\u984c\u89e3"}),"\n",(0,t.jsx)(n.p,{children:"\u5c0d\u65bc\u6bcf\u500b\u9ede\uff0c\u6211\u5011\u5c0d\u5176\u4ed6\u9ede\u5efa\u7acb\u96dc\u6e4a\u8868\uff0c\u7d71\u8a08\u540c\u4e00\u659c\u7387\u7684\u9ede\u4e00\u5171\u6709\u591a\u5c11\u500b\u3002\u9019\u88e1\u5229\u7528\u7684\u539f\u7406\u662f\uff0c\u4e00\u689d\u7dda\u53ef\u4ee5\u7531\u4e00\u500b\u9ede\u548c\u659c\u7387\u552f\u4e00\u78ba\u5b9a\u3002\u6b64\u5916\uff0c\u4e5f\u9700\u8981\u8003\u616e\u659c\u7387\u4e0d\u5b58\u5728\u548c\u91cd\u8907\u5ea7\u6a19\u7684\u60c5\u6cc1\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u672c\u984c\u9084\u5229\u7528\u4e86\u4e00\u500b\u5c0f\u6280\u5de7\uff1a\u5728\u904d\u6b77\u6bcf\u500b\u9ede\u6642\uff0c\u5c0d\u65bc\u9663\u5217\u4e2d\u4f4d\u7f6e i \u7684\u9ede\uff0c\u6211\u5011\u53ea\u9700\u8981\u8003\u616e i \u4e4b\u5f8c\u7684\u9ede\u5373\u53ef\uff0c\u56e0\u70ba i \u4e4b\u524d\u7684\u9ede\u5df2\u7d93\u8003\u616e\u904e i \u4e86\u3002"}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)(s,{value:"cpp",label:"C++",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int maxPoints(vector<vector<int>>& points) {\n    int max_count = 0, n = points.size();\n    for (int i = 0; i < n; ++i) {\n        unordered_map<double, int> cache;  // <\u659c\u7387, \u9ede\u7684\u6578\u91cf>\n        int same_xy = 1, same_y = 1;\n        for (int j = i + 1; j < n; ++j) {\n            if (points[i][1] == points[j][1]) {\n                ++same_y;\n                if (points[i][0] == points[j][0]) {\n                    ++same_xy;\n                }\n            } else {\n                double dx = points[i][0] - points[j][0],\n                       dy = points[i][1] - points[j][1];\n                ++cache[dx / dy];\n            }\n        }\n        max_count = max(max_count, same_y);\n        for (auto item : cache) {\n            max_count = max(max_count, same_xy + item.second);\n        }\n    }\n    return max_count;\n}\n"})})}),(0,t.jsx)(s,{value:"py",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"def maxPoints(points: List[List[int]]) -> int:\n    max_count, n = 0, len(points)\n    \n    for i, point1 in enumerate(points):\n        cache = dict()  # <\u659c\u7387, \u9ede\u7684\u6578\u91cf>\n        same_xy, same_y = 1, 1\n        \n        for point2 in points[i + 1:]:\n            if point1[1] == point2[1]:\n                same_y += 1\n            if point1[0] == point2[0]:\n                same_xy += 1\n            else:\n                dx, dy = point1[0] - point2[0], point1[1] - point2[1]\n                cache[dx / dy] = cache.get(dx / dy, 0) + 1\n\n        max_count = max(max_count, same_y)\n        for count in cache.values():\n            max_count = max(max_count, same_xy + count)\n    \n    return max_count\n\n"})})})]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}function o(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);