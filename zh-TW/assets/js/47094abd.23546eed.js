"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[1450],{9448:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"two-pointer-techniques/2-3-merge-sorted-arrays","title":"2.3 \u5f52\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4","description":"88. Merge Sorted Array","source":"@site/docs/2-two-pointer-techniques/2-3-merge-sorted-arrays.mdx","sourceDirName":"2-two-pointer-techniques","slug":"/two-pointer-techniques/2-3-merge-sorted-arrays","permalink":"/leetcode_101/zh-TW/two-pointer-techniques/2-3-merge-sorted-arrays","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/2-two-pointer-techniques/2-3-merge-sorted-arrays.mdx","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"2.2 Two Sum","permalink":"/leetcode_101/zh-TW/two-pointer-techniques/2-2-two-sum"},"next":{"title":"2.4 \u6ed1\u52a8\u7a97\u53e3","permalink":"/leetcode_101/zh-TW/two-pointer-techniques/2-4-sliding-window"}}');var t=s(4848),i=s(8453);const o={sidebar_position:7},d="2.3 \u5f52\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4",a={},m=[{value:"88. Merge Sorted Array",id:"88-merge-sorted-array",level:2},{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:3},{value:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",level:3},{value:"\u9898\u89e3",id:"\u9898\u89e3",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components},{TabItem:s,Tabs:r}=n;return s||u("TabItem",!0),r||u("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"23-\u5f52\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4",children:"2.3 \u5f52\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4"})}),"\n",(0,t.jsx)(n.h2,{id:"88-merge-sorted-array",children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/merge-sorted-array/",children:"88. Merge Sorted Array"})}),"\n",(0,t.jsx)(n.h3,{id:"\u9898\u76ee\u63cf\u8ff0",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(n.p,{children:"\u7ed9\u5b9a\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u628a\u4e24\u4e2a\u6570\u7ec4\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",children:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b"}),"\n",(0,t.jsx)(n.p,{children:"\u8f93\u5165\u662f\u4e24\u4e2a\u6570\u7ec4\u548c\u5b83\u4eec\u5206\u522b\u7684\u957f\u5ea6 m \u548c n\u3002\u5176\u4e2d\u7b2c\u4e00\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u88ab\u5ef6\u957f\u81f3 m +n\uff0c\u591a\u51fa\u7684\nn \u4f4d\u88ab 0 \u586b\u8865\u3002\u9898\u76ee\u8981\u6c42\u628a\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u5f52\u5e76\u5230\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e0a\uff0c\u4e0d\u9700\u8981\u5f00\u8f9f\u989d\u5916\u7a7a\u95f4\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3\nOutput: nums1 = [1,2,2,3,5,6]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u9898\u89e3",children:"\u9898\u89e3"}),"\n",(0,t.jsx)(n.p,{children:"\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u6570\u7ec4\u5df2\u7ecf\u6392\u597d\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e24\u4e2a\u6307\u9488\u5206\u522b\u653e\u5728\u4e24\u4e2a\u6570\u7ec4\u7684\u672b\u5c3e\uff0c\u5373 nums1 \u7684 m \u2212 1 \u4f4d\u548c nums2 \u7684 n \u2212 1 \u4f4d\u3002\u6bcf\u6b21\u5c06\u8f83\u5927\u7684\u90a3\u4e2a\u6570\u5b57\u590d\u5236\u5230 nums1 \u7684\u540e\u8fb9\uff0c\u7136\u540e\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\u3002\n\u56e0\u4e3a\u6211\u4eec\u4e5f\u8981\u5b9a\u4f4d nums1 \u7684\u672b\u5c3e\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u7b2c\u4e09\u4e2a\u6307\u9488\uff0c\u4ee5\u4fbf\u590d\u5236\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5728\u4ee5\u4e0b\u7684\u4ee3\u7801\u91cc\uff0c\u6211\u4eec\u76f4\u63a5\u5229\u7528 m \u548c n \u5f53\u4f5c\u4e24\u4e2a\u6570\u7ec4\u7684\u6307\u9488\uff0c\u518d\u989d\u5916\u521b\u7acb\u4e00\u4e2a pos \u6307\u9488\uff0c\u8d77\u59cb\u4f4d\u7f6e\u4e3a m +n \u2212 1\u3002\u6bcf\u6b21\u5411\u5de6\u79fb\u52a8 m \u6216 n \u7684\u65f6\u5019\uff0c\u4e5f\u8981\u5411\u5de6\u79fb\u52a8 pos\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0c\u5982\u679c nums1\n\u7684\u6570\u5b57\u5df2\u7ecf\u590d\u5236\u5b8c\uff0c\u4e0d\u8981\u5fd8\u8bb0\u628a nums2 \u7684\u6570\u5b57\u7ee7\u7eed\u590d\u5236\uff1b\u5982\u679c nums2 \u7684\u6570\u5b57\u5df2\u7ecf\u590d\u5236\u5b8c\uff0c\u5269\u4f59 nums1 \u7684\u6570\u5b57\u4e0d\u9700\u8981\u6539\u53d8\uff0c\u56e0\u4e3a\u5b83\u4eec\u5df2\u7ecf\u88ab\u6392\u597d\u5e8f\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5728 C++ \u9898\u89e3\u91cc\u6211\u4eec\u4f7f\u7528\u4e86 ++\u548c--\u7684\u5c0f\u6280\u5de7\uff1aa++\u548c ++a\u90fd\u662f\u5c06 a\u52a0 1\uff0c\u4f46\u662f a++\u8fd4\u56de\u503c\u4e3a a\uff0c\u800c ++a\u8fd4\u56de\u503c\u4e3a a+1\u3002\u5982\u679c\u53ea\u662f\u5e0c\u671b\u589e\u52a0 a\u7684\u503c\uff0c\u800c\u4e0d\u9700\u8981\u8fd4\u56de\u503c\uff0c\u5219\u4e24\u4e2a\u5199\u6cd5\u90fd\u53ef\u4ee5\uff08++a\u5728\u672a\u7ecf\u7f16\u8bd1\u5668\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u901f\u5ea6\u4f1a\u7565\u5feb\u4e00\u4e9b\uff09\u3002"}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)(s,{value:"cpp",label:"C++",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n    int pos = m-- + n-- - 1;\n    while (m >= 0 && n >= 0) {\n        nums1[pos--] = nums1[m] > nums2[n] ? nums1[m--] : nums2[n--];\n    }\n    while (n >= 0) {\n        nums1[pos--] = nums2[n--];\n    }\n}\n"})})}),(0,t.jsx)(s,{value:"py",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"def merge(nums1: List[int], m: int, nums2: List[int], n: int) -> None:\n    pos = m + n - 1\n    m -= 1\n    n -= 1\n    while m >= 0 and n >= 0:\n        if nums1[m] > nums2[n]:\n            nums1[pos] = nums1[m]\n            m -= 1\n        else:\n            nums1[pos] = nums2[n]\n            n -= 1\n        pos -= 1\n    nums1[: n + 1] = nums2[: n + 1]\n"})})})]})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);