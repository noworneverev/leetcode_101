"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[9885],{827:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>t,default:()=>x,frontMatter:()=>i,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"advanced-data-structures/15-4-exercises","title":"15.4 \u7df4\u7fd2","description":"\u57fa\u790e\u96e3\u5ea6","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/15-advanced-data-structures/15-4-exercises.md","sourceDirName":"15-advanced-data-structures","slug":"/advanced-data-structures/15-4-exercises","permalink":"/leetcode_101/zh-TW/advanced-data-structures/15-4-exercises","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":78,"frontMatter":{"sidebar_position":78},"sidebar":"tutorialSidebar","previous":{"title":"15.3 \u8907\u5408\u8cc7\u6599\u7d50\u69cb","permalink":"/leetcode_101/zh-TW/advanced-data-structures/15-3-composite-data-structures"},"next":{"title":"\u9cf4\u8b1d\u540d\u55ae","permalink":"/leetcode_101/zh-TW/acknowledgments"}}');var r=n(4848),c=n(8453);const i={sidebar_position:78},t="15.4 \u7df4\u7fd2",a={},d=[{value:"\u57fa\u790e\u96e3\u5ea6",id:"\u57fa\u790e\u96e3\u5ea6",level:2},{value:"1135. Connecting Cities With Minimum Cost",id:"1135-connecting-cities-with-minimum-cost",level:3},{value:"<strong>\u554f\u984c\u63cf\u8ff0</strong>",id:"\u554f\u984c\u63cf\u8ff0",level:4},{value:"<strong>\u89e3\u984c\u601d\u8def\uff1a\u6700\u5c0f\u751f\u6210\u6a39\uff08Minimum Spanning Tree, MST\uff09</strong>",id:"\u89e3\u984c\u601d\u8def\u6700\u5c0f\u751f\u6210\u6a39minimum-spanning-tree-mst",level:4},{value:"<strong>Kruskal \u6b65\u9a5f\u7c21\u8ff0</strong>",id:"kruskal-\u6b65\u9a5f\u7c21\u8ff0",level:4},{value:"<strong>Python \u7a0b\u5f0f\u78bc</strong>",id:"python-\u7a0b\u5f0f\u78bc",level:4},{value:"<strong>\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6</strong>",id:"\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6",level:4},{value:"<strong>\u7e3d\u7d50</strong>",id:"\u7e3d\u7d50",level:4},{value:"\u9032\u968e\u96e3\u5ea6",id:"\u9032\u968e\u96e3\u5ea6",level:2},{value:"432. All O`one Data Structure",id:"432-all-oone-data-structure",level:3},{value:"<strong>\u554f\u984c\u63cf\u8ff0</strong>",id:"\u554f\u984c\u63cf\u8ff0-1",level:4},{value:"<strong>\u89e3\u984c\u601d\u8def\uff1a\u96d9\u5411\u93c8\u7d50\u4e32\u5217 + \u96dc\u6e4a\u8868 HashMap</strong>",id:"\u89e3\u984c\u601d\u8def\u96d9\u5411\u93c8\u7d50\u4e32\u5217--\u96dc\u6e4a\u8868-hashmap",level:4},{value:"\u2705 \u8cc7\u6599\u7d50\u69cb\u8a2d\u8a08",id:"-\u8cc7\u6599\u7d50\u69cb\u8a2d\u8a08",level:4},{value:"\u2705 \u64cd\u4f5c\u6838\u5fc3\u6982\u5ff5",id:"-\u64cd\u4f5c\u6838\u5fc3\u6982\u5ff5",level:4},{value:"<strong>Python \u5be6\u4f5c</strong>",id:"python-\u5be6\u4f5c",level:4},{value:"<strong>\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6</strong>",id:"\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6-1",level:4},{value:"716. Max Stack",id:"716-max-stack",level:3},{value:"<strong>\u554f\u984c\u63cf\u8ff0</strong>",id:"\u554f\u984c\u63cf\u8ff0-2",level:4},{value:"<strong>\u89e3\u984c\u601d\u8def\uff1a\u5806\u758a + \u96d9\u5411\u93c8\u7d50\u4e32\u5217 + \u6392\u5e8f\u652f\u63f4</strong>",id:"\u89e3\u984c\u601d\u8def\u5806\u758a--\u96d9\u5411\u93c8\u7d50\u4e32\u5217--\u6392\u5e8f\u652f\u63f4",level:4},{value:"\u2705 \u8cc7\u6599\u7d50\u69cb\u8a2d\u8a08",id:"-\u8cc7\u6599\u7d50\u69cb\u8a2d\u8a08-1",level:4},{value:"\u2705 \u6700\u7c21\u65b9\u5f0f\uff08\u652f\u63f4 <code>popMax()</code>\uff09\u7684 Python \u7bc4\u4f8b\uff1a\u7528\u5169\u500b\u5806\u758a\u6a21\u64ec",id:"-\u6700\u7c21\u65b9\u5f0f\u652f\u63f4-popmax\u7684-python-\u7bc4\u4f8b\u7528\u5169\u500b\u5806\u758a\u6a21\u64ec",level:4},{value:"<strong>\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6</strong>",id:"\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6-2",level:4},{value:"<strong>\u9032\u968e\u505a\u6cd5\u88dc\u5145\uff08\u8ffd\u6c42 log n \u64cd\u4f5c\uff09</strong>",id:"\u9032\u968e\u505a\u6cd5\u88dc\u5145\u8ffd\u6c42-log-n-\u64cd\u4f5c",level:4},{value:"<strong>\u7e3d\u7d50</strong>",id:"\u7e3d\u7d50-1",level:4}];function h(e){const s={a:"a",annotation:"annotation",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,c.R)(),...e.components},{Details:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"154-\u7df4\u7fd2",children:"15.4 \u7df4\u7fd2"})}),"\n",(0,r.jsx)(s.h2,{id:"\u57fa\u790e\u96e3\u5ea6",children:"\u57fa\u790e\u96e3\u5ea6"}),"\n",(0,r.jsx)(s.h3,{id:"1135-connecting-cities-with-minimum-cost",children:(0,r.jsx)(s.a,{href:"https://leetcode.com/problems/connecting-cities-with-minimum-cost/",children:"1135. Connecting Cities With Minimum Cost"})}),"\n",(0,r.jsx)(s.p,{children:"\u4f7f\u7528\u4e26\u67e5\u96c6\uff0c\u6309\u7167 Kruskal\u2019s Algorithm \u518d\u89e3\u4e00\u6b21\u9019\u9053\u984c\u5427\u3002"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"\u984c\u89e3"}),(0,r.jsx)(s.h4,{id:"\u554f\u984c\u63cf\u8ff0",children:(0,r.jsx)(s.strong,{children:"\u554f\u984c\u63cf\u8ff0"})}),(0,r.jsxs)(s.p,{children:["\u6709 ",(0,r.jsx)(s.code,{children:"n"})," \u500b\u57ce\u5e02\uff08\u7de8\u865f\u5f9e 1 \u5230 n\uff09\uff0c\u4f60\u53ef\u4ee5\u5f9e ",(0,r.jsx)(s.code,{children:"connections"})," \u4e2d\u9078\u64c7\u4e00\u4e9b\u908a\u4f86\u9023\u63a5\u9019\u4e9b\u57ce\u5e02\u3002",(0,r.jsx)(s.br,{}),"\n","\u6bcf\u689d\u908a\u662f ",(0,r.jsx)(s.code,{children:"[city1, city2, cost]"}),"\uff0c\u8868\u793a\u5f9e ",(0,r.jsx)(s.code,{children:"city1"})," \u5230 ",(0,r.jsx)(s.code,{children:"city2"})," \u5efa\u4e00\u689d\u8def\u9700\u8981\u82b1\u8cbb ",(0,r.jsx)(s.code,{children:"cost"}),"\u3002",(0,r.jsx)(s.br,{}),"\n","\u8acb\u56de\u50b3\u9023\u63a5\u6240\u6709\u57ce\u5e02\u7684",(0,r.jsx)(s.strong,{children:"\u6700\u5c0f\u7e3d\u6210\u672c"}),"\uff0c\u5982\u679c\u7121\u6cd5\u9023\u901a\u6240\u6709\u57ce\u5e02\uff0c\u56de\u50b3 ",(0,r.jsx)(s.code,{children:"-1"}),"\u3002"]}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"\u89e3\u984c\u601d\u8def\u6700\u5c0f\u751f\u6210\u6a39minimum-spanning-tree-mst",children:(0,r.jsx)(s.strong,{children:"\u89e3\u984c\u601d\u8def\uff1a\u6700\u5c0f\u751f\u6210\u6a39\uff08Minimum Spanning Tree, MST\uff09"})}),(0,r.jsxs)(s.p,{children:["\u9019\u984c\u662f\u4e00\u500b\u5178\u578b\u7684 ",(0,r.jsx)(s.strong,{children:"\u6700\u5c0f\u751f\u6210\u6a39"})," \u554f\u984c\uff0c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528\uff1a"]}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Kruskal \u6f14\u7b97\u6cd5"}),"\uff1a\u5f9e\u6b0a\u91cd\u6700\u5c0f\u7684\u908a\u958b\u59cb\u5617\u8a66\u9023\u63a5\u57ce\u5e02\uff0c\u76f4\u5230\u6240\u6709\u57ce\u5e02\u9023\u901a\u3002"]}),"\n",(0,r.jsxs)(s.li,{children:["\u642d\u914d ",(0,r.jsx)(s.strong,{children:"Union-Find"}),"\uff08\u4e26\u67e5\u96c6\uff09\u5224\u65b7\u662f\u5426\u5df2\u5728\u540c\u4e00\u96c6\u5408\u4e2d\uff08\u907f\u514d\u6210\u74b0\uff09\u3002"]}),"\n"]}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"kruskal-\u6b65\u9a5f\u7c21\u8ff0",children:(0,r.jsx)(s.strong,{children:"Kruskal \u6b65\u9a5f\u7c21\u8ff0"})}),(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\u5c07\u6240\u6709\u908a\u4f9d\u7167\u6210\u672c ",(0,r.jsx)(s.code,{children:"cost"})," \u5347\u5e8f\u6392\u5e8f"]}),"\n",(0,r.jsx)(s.li,{children:"\u521d\u59cb\u5316 Union-Find\uff08\u4e26\u67e5\u96c6\uff09\u7d50\u69cb"}),"\n",(0,r.jsxs)(s.li,{children:["\u9010\u689d\u908a\u5617\u8a66\u9023\u63a5\uff1a","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"\u5982\u679c\u5169\u500b\u57ce\u5e02\u4e0d\u5728\u540c\u4e00\u96c6\u5408\uff0c\u5c31\u628a\u5b83\u5011\u5408\u4f75\u4e26\u52a0\u7e3d\u6210\u672c"}),"\n",(0,r.jsxs)(s.li,{children:["\u5982\u679c\u5df2\u7d93\u9023\u4e86 ",(0,r.jsx)(s.code,{children:"n - 1"})," \u689d\u908a\uff0c\u5c31\u53ef\u4ee5\u505c\u6b62"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\u82e5\u6700\u7d42\u5408\u4f75\u7684\u908a\u6578\u4e0d\u8db3 ",(0,r.jsx)(s.code,{children:"n - 1"}),"\uff0c\u4ee3\u8868\u6709\u57ce\u5e02\u7121\u6cd5\u9023\u901a \u2192 \u56de\u50b3 ",(0,r.jsx)(s.code,{children:"-1"})]}),"\n"]}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"python-\u7a0b\u5f0f\u78bc",children:(0,r.jsx)(s.strong,{children:"Python \u7a0b\u5f0f\u78bc"})}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"class Solution:\n    def minimumCost(self, n: int, connections: List[List[int]]) -> int:\n        parent = list(range(n + 1))  # 1-based index\n\n        def find(x):\n            if parent[x] != x:\n                parent[x] = find(parent[x])  # \u8def\u5f91\u58d3\u7e2e\n            return parent[x]\n\n        def union(x, y):\n            root_x, root_y = find(x), find(y)\n            if root_x == root_y:\n                return False  # \u5df2\u7d93\u9023\u901a\uff0c\u4e0d\u80fd\u91cd\u8907\u9023\n            parent[root_x] = root_y\n            return True\n\n        connections.sort(key=lambda x: x[2])  # \u4f9d\u6210\u672c\u6392\u5e8f\n        total_cost = 0\n        edges_used = 0\n\n        for u, v, cost in connections:\n            if union(u, v):\n                total_cost += cost\n                edges_used += 1\n                if edges_used == n - 1:\n                    return total_cost\n\n        return -1\n"})}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6",children:(0,r.jsx)(s.strong,{children:"\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6"})}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"\u6642\u9593\u8907\u96dc\u5ea6"}),"\uff1a$O(E \\log E + E \\cdot \\alpha(N))$\uff0c\u6392\u5e8f + Union-Find \u64cd\u4f5c\uff08$\\alpha$ \u70ba\u963f\u514b\u66fc\u51fd\u6578\u53cd\u51fd\u6578\uff0c\u8da8\u8fd1\u5e38\u6578\uff09"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"\u7a7a\u9593\u8907\u96dc\u5ea6"}),"\uff1a$O(N)$\uff0c\u7528\u65bc Union-Find \u7684 parent \u9663\u5217"]}),"\n"]}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"\u7e3d\u7d50",children:(0,r.jsx)(s.strong,{children:"\u7e3d\u7d50"})}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"\u7d93\u5178 MST \u554f\u984c\uff0c\u8207 1584 \u984c\u908f\u8f2f\u4e00\u81f4"}),"\n",(0,r.jsx)(s.li,{children:"\u82e5\u719f\u6089 Kruskal + Union-Find \u53ef\u8fc5\u901f\u5957\u7528"}),"\n",(0,r.jsx)(s.li,{children:"\u9069\u5408\u8207 Prim\u3001Dijkstra \u4f5c\u6cd5\u9032\u884c\u6bd4\u8f03\u5b78\u7fd2"}),"\n"]})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"\u9032\u968e\u96e3\u5ea6",children:"\u9032\u968e\u96e3\u5ea6"}),"\n",(0,r.jsx)(s.h3,{id:"432-all-oone-data-structure",children:(0,r.jsx)(s.a,{href:"https://leetcode.com/problems/all-oone-data-structure/",children:"432. All O`one Data Structure"})}),"\n",(0,r.jsxs)(s.p,{children:["\u8a2d\u8a08\u4e00\u500b\u5305\u542b increaseKey\uff0cdecreaseKey\uff0cgetMaxKey\uff0cgetMinKey \u5747\u70ba ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]})," \u6642\u9593\u8907\u96dc\u5ea6\u7684\u8cc7\u6599\u7d50\u69cb\u3002"]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"\u984c\u89e3"}),(0,r.jsx)(s.h4,{id:"\u554f\u984c\u63cf\u8ff0-1",children:(0,r.jsx)(s.strong,{children:"\u554f\u984c\u63cf\u8ff0"})}),(0,r.jsxs)(s.p,{children:["\u8acb\u4f60\u5be6\u4f5c\u4e00\u500b\u652f\u63f4\u4ee5\u4e0b\u64cd\u4f5c\u7684\u8cc7\u6599\u7d50\u69cb ",(0,r.jsx)(s.code,{children:"AllOne"}),"\uff1a"]}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"inc(key)"}),"\uff1a\u5c07 ",(0,r.jsx)(s.code,{children:"key"})," \u7684\u8a08\u6578\u52a0\u4e00\uff08\u82e5\u4e0d\u5b58\u5728\u5247\u8a2d\u70ba 1\uff09"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"dec(key)"}),"\uff1a\u5c07 ",(0,r.jsx)(s.code,{children:"key"})," \u7684\u8a08\u6578\u6e1b\u4e00\uff08\u82e5\u70ba 1 \u5247\u522a\u9664 key\uff09"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"getMaxKey()"}),"\uff1a\u56de\u50b3\u76ee\u524d",(0,r.jsx)(s.strong,{children:"\u64c1\u6709\u6700\u5927\u8a08\u6578\u7684 key"}),"\uff08\u82e5\u6709\u591a\u500b\u56de\u50b3\u4efb\u4e00\u500b\uff09"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"getMinKey()"}),"\uff1a\u56de\u50b3\u76ee\u524d",(0,r.jsx)(s.strong,{children:"\u64c1\u6709\u6700\u5c0f\u8a08\u6578\u7684 key"}),"\uff08\u82e5\u6709\u591a\u500b\u56de\u50b3\u4efb\u4e00\u500b\uff09"]}),"\n"]}),(0,r.jsxs)(s.p,{children:["\u8981\u6c42\u6240\u6709\u64cd\u4f5c\u7684 ",(0,r.jsx)(s.strong,{children:"\u6642\u9593\u8907\u96dc\u5ea6\u70ba O(1)"}),"\u3002"]}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"\u89e3\u984c\u601d\u8def\u96d9\u5411\u93c8\u7d50\u4e32\u5217--\u96dc\u6e4a\u8868-hashmap",children:(0,r.jsx)(s.strong,{children:"\u89e3\u984c\u601d\u8def\uff1a\u96d9\u5411\u93c8\u7d50\u4e32\u5217 + \u96dc\u6e4a\u8868 HashMap"})}),(0,r.jsx)(s.p,{children:"\u672c\u984c\u7684\u95dc\u9375\u662f\u300c\u5982\u4f55 O(1) \u627e\u51fa\u6700\u5927 / \u6700\u5c0f\u8a08\u6578\u7684 key\u300d\u3002"}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"-\u8cc7\u6599\u7d50\u69cb\u8a2d\u8a08",children:"\u2705 \u8cc7\u6599\u7d50\u69cb\u8a2d\u8a08"}),(0,r.jsx)(s.p,{children:"\u4f7f\u7528\u4ee5\u4e0b\u4e09\u500b\u7d50\u69cb\uff1a"}),(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"key_count_map"}),"\uff1a\u8a18\u9304\u6bcf\u500b key \u7684\u8a08\u6578 ",(0,r.jsx)(s.code,{children:"key \u2192 count"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"count_bucket_map"}),"\uff1a\u8a18\u9304\u6bcf\u500b count \u5c0d\u61c9\u7684\u96d9\u5411\u93c8\u7d50\u7bc0\u9ede\uff08\u6876\uff09",(0,r.jsx)(s.code,{children:"count \u2192 Bucket"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"\u96d9\u5411\u93c8\u7d50\u4e32\u5217\uff08bucket list\uff09"}),"\uff1a","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"\u6bcf\u500b\u7bc0\u9ede\u662f\u4e00\u500b\u8a08\u6578\u6876\uff08bucket\uff09"}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"bucket.val = count"}),", ",(0,r.jsx)(s.code,{children:"bucket.set = \u6240\u6709\u6b64 count \u7684 key"})]}),"\n",(0,r.jsx)(s.li,{children:"\u5de6 \u2192 \u5c0f count\uff0c\u53f3 \u2192 \u5927 count\uff08\u6240\u4ee5\u982d\u662f\u6700\u5c0f\uff0c\u5c3e\u662f\u6700\u5927\uff09"}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"-\u64cd\u4f5c\u6838\u5fc3\u6982\u5ff5",children:"\u2705 \u64cd\u4f5c\u6838\u5fc3\u6982\u5ff5"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\u6bcf\u6b21 ",(0,r.jsx)(s.code,{children:"inc/dec"})," \u90fd\u6703\u8b93\u67d0\u500b key \u5f9e\u4e00\u500b bucket \u79fb\u5230\u53e6\u4e00\u500b bucket\uff08count \u6539\u8b8a\uff09"]}),"\n",(0,r.jsx)(s.li,{children:"\u82e5\u65b0\u7684 count \u6240\u5728\u7684 bucket \u4e0d\u5b58\u5728\uff0c\u5247\u52d5\u614b\u63d2\u5165"}),"\n",(0,r.jsx)(s.li,{children:"\u82e5\u820a\u7684 bucket \u6c92\u6709 key \u4e86\uff0c\u5247\u79fb\u9664"}),"\n"]}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"python-\u5be6\u4f5c",children:(0,r.jsx)(s.strong,{children:"Python \u5be6\u4f5c"})}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"class Bucket:\n    def __init__(self, val):\n        self.val = val\n        self.keys = set()\n        self.prev = self.next = None\n\nclass AllOne:\n\n    def __init__(self):\n        self.key_count = {}\n        self.count_bucket = {}\n        self.head = Bucket(float('-inf'))\n        self.tail = Bucket(float('inf'))\n        self.head.next = self.tail\n        self.tail.prev = self.head\n\n    def _insert_after(self, prev_bucket, new_bucket):\n        new_bucket.prev = prev_bucket\n        new_bucket.next = prev_bucket.next\n        prev_bucket.next.prev = new_bucket\n        prev_bucket.next = new_bucket\n\n    def _remove_bucket(self, bucket):\n        bucket.prev.next = bucket.next\n        bucket.next.prev = bucket.prev\n        del self.count_bucket[bucket.val]\n\n    def inc(self, key: str) -> None:\n        count = self.key_count.get(key, 0)\n        self.key_count[key] = count + 1\n\n        curr_bucket = self.count_bucket.get(count)\n        next_bucket = self.count_bucket.get(count + 1)\n\n        if not next_bucket:\n            next_bucket = Bucket(count + 1)\n            self.count_bucket[count + 1] = next_bucket\n            self._insert_after(curr_bucket or self.head, next_bucket)\n        next_bucket.keys.add(key)\n\n        if curr_bucket:\n            curr_bucket.keys.remove(key)\n            if not curr_bucket.keys:\n                self._remove_bucket(curr_bucket)\n\n    def dec(self, key: str) -> None:\n        if key not in self.key_count:\n            return\n        count = self.key_count[key]\n        if count == 1:\n            del self.key_count[key]\n        else:\n            self.key_count[key] = count - 1\n\n        curr_bucket = self.count_bucket[count]\n        prev_bucket = self.count_bucket.get(count - 1)\n\n        if count > 1:\n            if not prev_bucket:\n                prev_bucket = Bucket(count - 1)\n                self.count_bucket[count - 1] = prev_bucket\n                self._insert_after(curr_bucket.prev, prev_bucket)\n            prev_bucket.keys.add(key)\n\n        curr_bucket.keys.remove(key)\n        if not curr_bucket.keys:\n            self._remove_bucket(curr_bucket)\n\n    def getMaxKey(self) -> str:\n        if self.tail.prev == self.head:\n            return \"\"\n        return next(iter(self.tail.prev.keys))\n\n    def getMinKey(self) -> str:\n        if self.head.next == self.tail:\n            return \"\"\n        return next(iter(self.head.next.keys))\n"})}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6-1",children:(0,r.jsx)(s.strong,{children:"\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6"})}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"\u6642\u9593\u8907\u96dc\u5ea6"}),"\uff1a\u6240\u6709\u64cd\u4f5c\u70ba ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]}),"\uff0c\u56e0\u70ba\uff1a"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"\u67e5\u627e key \u2192 count \u662f\u96dc\u6e4a"}),"\n",(0,r.jsx)(s.li,{children:"\u6bcf\u500b key \u6700\u591a\u52a0\u5165/\u79fb\u51fa\u6876\u4e00\u6b21"}),"\n",(0,r.jsx)(s.li,{children:"\u96d9\u5411\u93c8\u7d50\u4e32\u5217\u64cd\u4f5c\u70ba\u5e38\u6578\u6642\u9593"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"\u7a7a\u9593\u8907\u96dc\u5ea6"}),"\uff1a",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"K"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(K)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"K"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]}),"\uff0c",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{children:"K"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"K"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"K"})]})})]})," \u70ba key \u6578\u91cf"]}),"\n"]}),"\n"]}),(0,r.jsx)(s.hr,{})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"716-max-stack",children:(0,r.jsx)(s.a,{href:"https://leetcode.com/problems/max-stack/",children:"716. Max Stack"})}),"\n",(0,r.jsx)(s.p,{children:"\u8a2d\u8a08\u4e00\u500b\u652f\u6301 push\uff0cpop\uff0ctop\uff0cgetMax \u548c popMax \u7684\u5806\u758a\u3002\u53ef\u4ee5\u7528\u985e\u4f3c LRU \u7684\u65b9\u6cd5\u964d\u4f4e\u6642\u9593\u8907\u96dc\u5ea6\uff0c\u4f46\u56e0\u70ba\u8981\u7372\u53d6\u7684\u662f\u6700\u5927\u503c\uff0c\u6211\u5011\u61c9\u8a72\u628a unordered_map \u63db\u6210\u54ea\u4e00\u7a2e\u8cc7\u6599\u7d50\u69cb\u5462\uff1f"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"\u984c\u89e3"}),(0,r.jsx)(s.h4,{id:"\u554f\u984c\u63cf\u8ff0-2",children:(0,r.jsx)(s.strong,{children:"\u554f\u984c\u63cf\u8ff0"})}),(0,r.jsx)(s.p,{children:"\u8acb\u4f60\u5be6\u4f5c\u4e00\u500b Max Stack\uff08\u652f\u63f4\u53d6\u6700\u5927\u503c\u7684\u5806\u758a\uff09\uff0c\u652f\u63f4\u4ee5\u4e0b\u64cd\u4f5c\uff1a"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"push(x)"}),"\uff1a\u63a8\u5165\u5143\u7d20 ",(0,r.jsx)(s.code,{children:"x"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"pop()"}),"\uff1a\u79fb\u9664\u4e26\u56de\u50b3\u5806\u758a\u9802\u7aef\u7684\u5143\u7d20"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"top()"}),"\uff1a\u56de\u50b3\u5806\u758a\u9802\u7aef\u5143\u7d20\uff08\u4e0d\u79fb\u9664\uff09"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"peekMax()"}),"\uff1a\u56de\u50b3\u5806\u758a\u4e2d",(0,r.jsx)(s.strong,{children:"\u6700\u5927\u503c"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"popMax()"}),"\uff1a\u79fb\u9664\u4e26\u56de\u50b3",(0,r.jsx)(s.strong,{children:"\u5806\u758a\u4e2d\u6700\u9760\u8fd1\u9802\u7aef\u7684\u6700\u5927\u503c"})]}),"\n"]}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"\u89e3\u984c\u601d\u8def\u5806\u758a--\u96d9\u5411\u93c8\u7d50\u4e32\u5217--\u6392\u5e8f\u652f\u63f4",children:(0,r.jsx)(s.strong,{children:"\u89e3\u984c\u601d\u8def\uff1a\u5806\u758a + \u96d9\u5411\u93c8\u7d50\u4e32\u5217 + \u6392\u5e8f\u652f\u63f4"})}),(0,r.jsxs)(s.p,{children:["\u9019\u984c\u7684\u96e3\u9ede\u662f ",(0,r.jsx)(s.code,{children:"popMax()"}),"\uff1a\u4f60\u9700\u8981\u5728\u5806\u758a\u4e2d\u627e\u51fa",(0,r.jsx)(s.strong,{children:"\u6700\u5927\u503c\uff0c\u4e26\u4e14\u5f9e\u4e2d\u9593\u522a\u9664\u6700\u9760\u8fd1\u9802\u7aef\u7684\u90a3\u4e00\u500b"}),"\u3002"]}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"-\u8cc7\u6599\u7d50\u69cb\u8a2d\u8a08-1",children:"\u2705 \u8cc7\u6599\u7d50\u69cb\u8a2d\u8a08"}),(0,r.jsxs)(s.p,{children:["\u4f7f\u7528\u4ee5\u4e0b\u4e09\u500b\u8cc7\u6599\u7d50\u69cb\u4f86\u652f\u63f4\u6240\u6709\u64cd\u4f5c\u70ba\u5e73\u5747 ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"log"}),(0,r.jsx)(s.mo,{children:"\u2061"}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(\\log n)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsxs)(s.span,{className:"mop",children:["lo",(0,r.jsx)(s.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]}),"\uff1a"]}),(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"\u96d9\u5411\u93c8\u7d50\u4e32\u5217"}),"\uff1a\u6a21\u64ec\u5806\u758a\uff08\u652f\u63f4\u5f9e\u4e2d\u9593\u522a\u9664\uff09"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"\u6392\u5e8f\u6a39\uff08\u5982 TreeMap\uff09\u6216 heapq + counter"}),"\uff1a\u627e\u51fa\u6700\u5927\u503c"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"value \u2192 [list of node] \u7684\u6620\u5c04"}),"\uff1a\u652f\u63f4\u5feb\u901f\u5f9e\u6392\u5e8f\u7d50\u69cb\u4e2d\u627e\u5230\u5c0d\u61c9\u7bc0\u9ede"]}),"\n"]}),(0,r.jsx)(s.hr,{}),(0,r.jsxs)(s.h4,{id:"-\u6700\u7c21\u65b9\u5f0f\u652f\u63f4-popmax\u7684-python-\u7bc4\u4f8b\u7528\u5169\u500b\u5806\u758a\u6a21\u64ec",children:["\u2705 \u6700\u7c21\u65b9\u5f0f\uff08\u652f\u63f4 ",(0,r.jsx)(s.code,{children:"popMax()"}),"\uff09\u7684 Python \u7bc4\u4f8b\uff1a\u7528\u5169\u500b\u5806\u758a\u6a21\u64ec"]}),(0,r.jsxs)(s.p,{children:["\u9019\u7a2e\u65b9\u5f0f\u53ef\u901a\u904e\u984c\u76ee\uff0c\u4f46 ",(0,r.jsx)(s.code,{children:"popMax()"})," \u4e0d\u662f O(1)\uff0c\u50c5\u70ba\u5be6\u7528\u89e3\uff1a"]}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"class MaxStack:\n\n    def __init__(self):\n        self.stack = []\n        self.max_stack = []\n\n    def push(self, x: int) -> None:\n        self.stack.append(x)\n        if not self.max_stack or x >= self.max_stack[-1]:\n            self.max_stack.append(x)\n\n    def pop(self) -> int:\n        val = self.stack.pop()\n        if val == self.max_stack[-1]:\n            self.max_stack.pop()\n        return val\n\n    def top(self) -> int:\n        return self.stack[-1]\n\n    def peekMax(self) -> int:\n        return self.max_stack[-1]\n\n    def popMax(self) -> int:\n        max_val = self.peekMax()\n        buffer = []\n        while self.top() != max_val:\n            buffer.append(self.pop())\n        self.pop()  # remove max\n        while buffer:\n            self.push(buffer.pop())\n        return max_val\n"})}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6-2",children:(0,r.jsx)(s.strong,{children:"\u6642\u9593\u8207\u7a7a\u9593\u8907\u96dc\u5ea6"})}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"push/pop/top/peekMax"}),"\uff1a",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"popMax"}),"\uff1a\u6700\u5dee ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]}),"\uff08\u9700\u8981\u5c07\u6574\u500b\u5806\u758a\u6383\u4e00\u904d\uff09"]}),"\n"]}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"\u9032\u968e\u505a\u6cd5\u88dc\u5145\u8ffd\u6c42-log-n-\u64cd\u4f5c",children:(0,r.jsx)(s.strong,{children:"\u9032\u968e\u505a\u6cd5\u88dc\u5145\uff08\u8ffd\u6c42 log n \u64cd\u4f5c\uff09"})}),(0,r.jsxs)(s.p,{children:["\u5982\u679c\u4f60\u5e0c\u671b\u6240\u6709\u64cd\u4f5c\u90fd\u5728 ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"log"}),(0,r.jsx)(s.mo,{children:"\u2061"}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(\\log n)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsxs)(s.span,{className:"mop",children:["lo",(0,r.jsx)(s.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]})," \u6216 ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]}),"\uff1a"]}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\u4f7f\u7528 ",(0,r.jsx)(s.strong,{children:"\u96d9\u5411\u93c8\u7d50\u4e32\u5217"}),"\uff08\u8a18\u9304\u5806\u758a\u9806\u5e8f\uff09"]}),"\n",(0,r.jsxs)(s.li,{children:["\u4f7f\u7528 ",(0,r.jsx)(s.strong,{children:"\u5e73\u8861\u6a39\u7d50\u69cb\uff08\u5982 TreeMap \u6216 OrderedDict\uff09"})," \u8a18\u9304 val \u2192 list of node"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"popMax()"})," \u5c31\u80fd\u5feb\u901f\u627e\u6700\u5927\u503c\u4e26\u522a\u9664\u5c0d\u61c9\u7bc0\u9ede\uff08\u5f9e\u4e2d\u9593\u79fb\u9664\uff09"]}),"\n"]}),(0,r.jsx)(s.p,{children:"\u6b64\u89e3\u6cd5 LeetCode \u901a\u904e\u4f46\u5be6\u4f5c\u8907\u96dc\uff0c\u5be6\u52d9\u4e0a\u591a\u9078\u7528\u7b2c\u4e00\u7a2e\u8f03\u7c21\u6f54\u7248\u672c\u5373\u53ef\u3002"}),(0,r.jsx)(s.hr,{}),(0,r.jsx)(s.h4,{id:"\u7e3d\u7d50-1",children:(0,r.jsx)(s.strong,{children:"\u7e3d\u7d50"})}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"\u53ef\u901a\u904e LeetCode \u7684\u7c21\u55ae\u505a\u6cd5\u662f\u300c\u5169\u500b\u5806\u758a\u300d"}),"\n",(0,r.jsx)(s.li,{children:"\u82e5\u9762\u8a66\u8ffd\u6c42\u6700\u4f73\u5316\uff0c\u53ef\u8003\u616e\u300c\u96d9\u5411\u93c8\u7d50\u4e32\u5217 + TreeMap\u300d"}),"\n",(0,r.jsx)(s.li,{children:"\u662f\u7d93\u5178\u8907\u5408\u8cc7\u6599\u7d50\u69cb\u984c\uff0c\u9069\u5408\u8207 LRU\u3001All O(1) Data Structure \u4e26\u7df4\u7fd2"}),"\n"]})]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{})})]})}function x(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);