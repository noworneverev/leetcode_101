"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[7e3],{7772:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"trees/13-7-exercises","title":"13.7 \u7df4\u7fd2","description":"\u57fa\u790e\u96e3\u5ea6","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/13-trees/13-7-exercises.md","sourceDirName":"13-trees","slug":"/trees/13-7-exercises","permalink":"/leetcode_101/zh-TW/trees/13-7-exercises","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/13-trees/13-7-exercises.md","tags":[],"version":"current","sidebarPosition":74,"frontMatter":{"sidebar_position":74},"sidebar":"tutorialSidebar","previous":{"title":"13.6 \u5b57\u5178\u6a39","permalink":"/leetcode_101/zh-TW/trees/13-6-trie"},"next":{"title":"14. \u6307\u9488\u4e09\u5251\u5ba2\u4e4b\u4e09\uff1a\u56fe","permalink":"/leetcode_101/zh-TW/category/14-\u6307\u9488\u4e09\u5251\u5ba2\u4e4b\u4e09\u56fe"}}');var s=t(4848),o=t(8453);const i={sidebar_position:74},a="13.7 \u7df4\u7fd2",l={},d=[{value:"\u57fa\u790e\u96e3\u5ea6",id:"\u57fa\u790e\u96e3\u5ea6",level:2},{value:"226. Invert Binary Tree",id:"226-invert-binary-tree",level:3},{value:"617. Merge Two Binary Trees",id:"617-merge-two-binary-trees",level:3},{value:"572. Subtree of Another Tree",id:"572-subtree-of-another-tree",level:3},{value:"404. Sum of Left Leaves",id:"404-sum-of-left-leaves",level:3},{value:"513. Find Bottom Left Tree Value",id:"513-find-bottom-left-tree-value",level:3},{value:"538. Convert BST to Greater Tree",id:"538-convert-bst-to-greater-tree",level:3},{value:"235. Lowest Common Ancestor of a Binary Search Tree",id:"235-lowest-common-ancestor-of-a-binary-search-tree",level:3},{value:"530. Minimum Absolute Difference in BST",id:"530-minimum-absolute-difference-in-bst",level:3},{value:"\u9032\u968e\u96e3\u5ea6",id:"\u9032\u968e\u96e3\u5ea6",level:2},{value:"1530. Number of Good Leaf Nodes Pairs",id:"1530-number-of-good-leaf-nodes-pairs",level:3},{value:"889. Construct Binary Tree from Preorder and Postorder Traversal",id:"889-construct-binary-tree-from-preorder-and-postorder-traversal",level:3},{value:"106. Construct Binary Tree from Inorder and Postorder Traversal",id:"106-construct-binary-tree-from-inorder-and-postorder-traversal",level:3},{value:"94. Binary Tree Inorder Traversal",id:"94-binary-tree-inorder-traversal",level:3},{value:"145. Binary Tree Postorder Traversal",id:"145-binary-tree-postorder-traversal",level:3},{value:"236. Lowest Common Ancestor of a Binary Tree",id:"236-lowest-common-ancestor-of-a-binary-tree",level:3},{value:"109. Convert Sorted List to Binary Search Tree",id:"109-convert-sorted-list-to-binary-search-tree",level:3},{value:"897. Increasing Order Search Tree",id:"897-increasing-order-search-tree",level:3},{value:"653. Two Sum IV - Input is a BST",id:"653-two-sum-iv---input-is-a-bst",level:3},{value:"450. Delete Node in a BST",id:"450-delete-node-in-a-bst",level:3}];function c(e){const r={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"137-\u7df4\u7fd2",children:"13.7 \u7df4\u7fd2"})}),"\n",(0,s.jsx)(r.h2,{id:"\u57fa\u790e\u96e3\u5ea6",children:"\u57fa\u790e\u96e3\u5ea6"}),"\n",(0,s.jsx)(r.h3,{id:"226-invert-binary-tree",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/invert-binary-tree/",children:"226. Invert Binary Tree"})}),"\n",(0,s.jsx)(r.p,{children:"\u5de7\u7528\u905e\u8ff4\uff0c\u4f60\u53ef\u4ee5\u5728\u4e94\u884c\u5167\u5b8c\u6210\u9019\u9053\u984c\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"617-merge-two-binary-trees",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/merge-two-binary-trees/",children:"617. Merge Two Binary Trees"})}),"\n",(0,s.jsx)(r.p,{children:"\u540c\u6a23\u7684\uff0c\u5229\u7528\u905e\u8ff4\u53ef\u4ee5\u8f15\u9b06\u641e\u5b9a\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"572-subtree-of-another-tree",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/subtree-of-another-tree/",children:"572. Subtree of Another Tree"})}),"\n",(0,s.jsx)(r.p,{children:"\u5b50\u6a39\u662f\u5c0d\u7a31\u6a39\u7684\u59ca\u59b9\u984c\uff0c\u5beb\u6cd5\u4e5f\u5341\u5206\u985e\u4f3c\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"404-sum-of-left-leaves",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/sum-of-left-leaves/",children:"404. Sum of Left Leaves"})}),"\n",(0,s.jsx)(r.p,{children:"\u600e\u9ebc\u5224\u65b7\u4e00\u500b\u7bc0\u9ede\u662f\u4e0d\u662f\u5de6\u7bc0\u9ede\u5462\uff1f\u4e00\u7a2e\u53ef\u884c\u7684\u65b9\u6cd5\u662f\uff0c\u5728\u8f14\u51fd\u5f0f\u88e1\u591a\u50b3\u4e00\u500b\u53c3\u6578\uff0c\u8868\u793a\u7576\u524d\u7bc0\u9ede\u662f\u4e0d\u662f\u7236\u7bc0\u9ede\u7684\u5de6\u7bc0\u9ede\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"513-find-bottom-left-tree-value",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/find-bottom-left-tree-value/",children:"513. Find Bottom Left Tree Value"})}),"\n",(0,s.jsx)(r.p,{children:"\u6700\u5de6\u4e0b\u89d2\u7684\u7bc0\u9ede\u6eff\u8db3\u4ec0\u9ebc\u689d\u4ef6\uff1f\u91dd\u5c0d\u9019\u7a2e\u689d\u4ef6\uff0c\u6211\u5011\u8a72\u5982\u4f55\u627e\u5230\u5b83\uff1f"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"538-convert-bst-to-greater-tree",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/convert-bst-to-greater-tree/",children:"538. Convert BST to Greater Tree"})}),"\n",(0,s.jsx)(r.p,{children:"\u5617\u8a66\u5229\u7528\u67d0\u7a2e\u904d\u6b77\u65b9\u5f0f\u4f86\u89e3\u6c7a\u6b64\u984c\uff0c\u6bcf\u500b\u7bc0\u9ede\u53ea\u9700\u904d\u6b77\u4e00\u6b21\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"235-lowest-common-ancestor-of-a-binary-search-tree",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",children:"235. Lowest Common Ancestor of a Binary Search Tree"})}),"\n",(0,s.jsx)(r.p,{children:"\u5229\u7528 BST \u7684\u7368\u7279\u6027\u8cea\uff0c\u9019\u9053\u984c\u53ef\u4ee5\u5f88\u8f15\u9b06\u5b8c\u6210\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"530-minimum-absolute-difference-in-bst",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst/",children:"530. Minimum Absolute Difference in BST"})}),"\n",(0,s.jsx)(r.p,{children:"\u9084\u8a18\u5f97\u6211\u5011\u6240\u8aaa\u7684\uff0c\u5c0d\u65bc BST \u61c9\u8a72\u5229\u7528\u54ea\u7a2e\u904d\u6b77\u55ce\uff1f"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"\u9032\u968e\u96e3\u5ea6",children:"\u9032\u968e\u96e3\u5ea6"}),"\n",(0,s.jsx)(r.h3,{id:"1530-number-of-good-leaf-nodes-pairs",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs/",children:"1530. Number of Good Leaf Nodes Pairs"})}),"\n",(0,s.jsx)(r.p,{children:"\u984c\u76ee 543 \u7684\u8b8a\u7a2e\u984c\uff0c\u6ce8\u610f\u5728\u8f14\u51fd\u5f0f\u4e2d\uff0c\u6bcf\u6b21\u66f4\u65b0\u7684\u5168\u57df\u8b8a\u6578\u662f\u5de6\u53f3\u5169\u908a\u8ddd\u96e2\u4e4b\u548c\u6eff\u8db3\u689d\u4ef6\u7684\u6578\u91cf\uff0c\u800c\u8fd4\u56de\u7684\u662f\u5de6\u53f3\u5169\u908a\u6240\u6709\uff08\u9577\u5ea6\u4e0d\u6ea2\u51fa\u7684\uff09\u5b50\u7bc0\u9ede\u7684\u9ad8\u5ea6 +1\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"889-construct-binary-tree-from-preorder-and-postorder-traversal",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/",children:"889. Construct Binary Tree from Preorder and Postorder Traversal"})}),"\n",(0,s.jsx)(r.p,{children:"\u7d66\u5b9a\u4efb\u610f\u5169\u7a2e\u904d\u6b77\u7d50\u679c\uff0c\u6211\u5011\u90fd\u53ef\u4ee5\u91cd\u5efa\u6a39\u7684\u7d50\u69cb\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"106-construct-binary-tree-from-inorder-and-postorder-traversal",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/",children:"106. Construct Binary Tree from Inorder and Postorder Traversal"})}),"\n",(0,s.jsx)(r.p,{children:"\u7d66\u5b9a\u4efb\u610f\u5169\u7a2e\u904d\u6b77\u7d50\u679c\uff0c\u6211\u5011\u90fd\u53ef\u4ee5\u91cd\u5efa\u6a39\u7684\u7d50\u69cb\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"94-binary-tree-inorder-traversal",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/binary-tree-inorder-traversal/",children:"94. Binary Tree Inorder Traversal"})}),"\n",(0,s.jsx)(r.p,{children:"\u56e0\u70ba\u524d\u4e2d\u5e8f\u5f8c\u904d\u6b77\u662f\u7528\u905e\u8ff4\u5be6\u73fe\u7684\uff0c\u800c\u905e\u8ff4\u7684\u5e95\u5c64\u5be6\u73fe\u662f\u5806\u758a\u64cd\u4f5c\uff0c\u56e0\u6b64\u6211\u5011\u7e3d\u80fd\u7528\u5806\u758a\u5be6\u73fe\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"145-binary-tree-postorder-traversal",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/binary-tree-postorder-traversal/",children:"145. Binary Tree Postorder Traversal"})}),"\n",(0,s.jsx)(r.p,{children:"\u56e0\u70ba\u524d\u4e2d\u5e8f\u5f8c\u904d\u6b77\u662f\u7528\u905e\u8ff4\u5be6\u73fe\u7684\uff0c\u800c\u905e\u8ff4\u7684\u5e95\u5c64\u5be6\u73fe\u662f\u5806\u758a\u64cd\u4f5c\uff0c\u56e0\u6b64\u6211\u5011\u7e3d\u80fd\u7528\u5806\u758a\u5be6\u73fe\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"236-lowest-common-ancestor-of-a-binary-tree",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/",children:"236. Lowest Common Ancestor of a Binary Tree"})}),"\n",(0,s.jsx)(r.p,{children:"\u73fe\u5728\u4e0d\u662f BST\uff0c\u800c\u662f\u666e\u901a\u7684\u4e8c\u5143\u6a39\u4e86\uff0c\u8a72\u600e\u9ebc\u8fa6\uff1f"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"109-convert-sorted-list-to-binary-search-tree",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/",children:"109. Convert Sorted List to Binary Search Tree"})}),"\n",(0,s.jsx)(r.p,{children:"\u628a\u6392\u597d\u5e8f\u7684\u93c8\u7d50\u4e32\u5217\u8b8a\u6210 BST\u3002\u70ba\u4e86\u4f7f\u5f97 BST \u76e1\u91cf\u5e73\u8861\uff0c\u6211\u5011\u9700\u8981\u5c0b\u627e\u93c8\u7d50\u4e32\u5217\u7684\u4e2d\u9ede\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"897-increasing-order-search-tree",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/increasing-order-search-tree/",children:"897. Increasing Order Search Tree"})}),"\n",(0,s.jsx)(r.p,{children:"\u628a BST \u58d3\u6210\u4e00\u500b\u93c8\u7d50\u4e32\u5217\uff0c\u52d9\u5fc5\u8003\u616e\u6e05\u695a\u6307\u6a19\u64cd\u4f5c\u7684\u9806\u5e8f\uff0c\u5426\u5247\u53ef\u80fd\u6703\u51fa\u73fe\u74b0\u8def\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"653-two-sum-iv---input-is-a-bst",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst/",children:"653. Two Sum IV - Input is a BST"})}),"\n",(0,s.jsx)(r.p,{children:"\u554a\u54c8\uff0c\u9019\u9053\u984c\u53ef\u80fd\u6703\u628a\u4f60\u9a19\u5230\u3002"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"450-delete-node-in-a-bst",children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/delete-node-in-a-bst/",children:"450. Delete Node in a BST"})}),"\n",(0,s.jsx)(r.p,{children:"\u7576\u5c0b\u627e\u5230\u5f85\u522a\u7bc0\u9ede\u6642\uff0c\u4f60\u53ef\u4ee5\u5206\u60c5\u6cc1\u8003\u616e\u2014\u2014\u7576\u524d\u7bc0\u9ede\u662f\u8449\u7bc0\u9ede\u3001\u53ea\u6709\u4e00\u500b\u5b50\u7bc0\u9ede\u548c\u6709\u5169\u500b\u5b50\u7bc0\u9ede\u3002\u5efa\u8b70\u540c\u6642\u56de\u6536\u8a18\u61b6\u9ad4\u3002"})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);