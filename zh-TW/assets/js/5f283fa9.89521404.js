"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[6333],{4177:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"trees/13-5-binary-search-tree","title":"13.5 \u4e8c\u5143\u641c\u5c0b\u6a39","description":"\u4e8c\u5143\u641c\u5c0b\u6a39\uff08Binary Search Tree, BST\uff09\u662f\u4e00\u7a2e\u7279\u6b8a\u7684\u4e8c\u5143\u6a39\uff1a\u5c0d\u65bc\u6bcf\u500b\u7236\u7bc0\u9ede\uff0c\u5176\u5de6\u5b50\u6a39\u4e2d\u6240\u6709\u7bc0\u9ede\u7684\u503c\u5c0f\u65bc\u7b49\u65bc\u7236\u7bc0\u9ede\u7684\u503c\uff0c\u5176\u53f3\u5b50\u6a39\u4e2d\u6240\u6709\u7bc0\u9ede\u7684\u503c\u5927\u65bc\u7b49\u65bc\u7236\u7bc0\u9ede\u7684\u503c\u3002\u56e0\u6b64\u5c0d\u65bc\u4e00\u500b\u4e8c\u5143\u641c\u5c0b\u6a39\uff0c\u6211\u5011\u53ef\u4ee5\u5728 $O(\\\\log n)$ \u7684\u6642\u9593\u5167\u67e5\u627e\u67d0\u503c\u662f\u5426\u5b58\u5728\uff1a\u5f9e\u6839\u7bc0\u9ede\u958b\u59cb\uff0c\u82e5\u7576\u524d\u7bc0\u9ede\u7684\u503c\u5927\u65bc\u67e5\u627e\u503c\u5247\u5411\u5de6\u4e0b\u8d70\uff0c\u82e5\u7576\u524d\u7bc0\u9ede\u7684\u503c\u5c0f\u65bc\u67e5\u627e\u503c\u5247\u5411\u53f3\u4e0b\u8d70\u3002\u540c\u6642\u56e0\u70ba\u4e8c\u5143\u641c\u5c0b\u6a39\u662f\u6709\u5e8f\u7684\uff0c\u5c0d\u5176\u4e2d\u5e8f\u904d\u6b77\u7684\u7d50\u679c\u5373\u70ba\u6392\u597d\u5e8f\u7684\u9663\u5217\u3002","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/13-trees/13-5-binary-search-tree.mdx","sourceDirName":"13-trees","slug":"/trees/13-5-binary-search-tree","permalink":"/leetcode_101/zh-TW/trees/13-5-binary-search-tree","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":72,"frontMatter":{"sidebar_position":72},"sidebar":"tutorialSidebar","previous":{"title":"13.4 \u524d\u4e2d\u5f8c\u5e8f\u904d\u6b77","permalink":"/leetcode_101/zh-TW/trees/13-4-preorder-inorder-postorder-traversal"},"next":{"title":"13.6 \u5b57\u5178\u6a39","permalink":"/leetcode_101/zh-TW/trees/13-6-trie"}}');var t=n(4848),s=n(8453);const o={sidebar_position:72},a="13.5 \u4e8c\u5143\u641c\u5c0b\u6a39",l={},h=[{value:"99. Recover Binary Search Tree",id:"99-recover-binary-search-tree",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3",level:3},{value:"669. Trim a Binary Search Tree",id:"669-trim-a-binary-search-tree",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0-1",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-1",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3-1",level:3}];function c(e){const r={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",ul:"ul",...(0,s.R)(),...e.components},{TabItem:n,Tabs:i}=r;return n||m("TabItem",!0),i||m("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"135-\u4e8c\u5143\u641c\u5c0b\u6a39",children:"13.5 \u4e8c\u5143\u641c\u5c0b\u6a39"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"\u4e8c\u5143\u641c\u5c0b\u6a39"}),"\uff08Binary Search Tree, BST\uff09\u662f\u4e00\u7a2e\u7279\u6b8a\u7684\u4e8c\u5143\u6a39\uff1a\u5c0d\u65bc\u6bcf\u500b\u7236\u7bc0\u9ede\uff0c\u5176\u5de6\u5b50\u6a39\u4e2d\u6240\u6709\u7bc0\u9ede\u7684\u503c\u5c0f\u65bc\u7b49\u65bc\u7236\u7bc0\u9ede\u7684\u503c\uff0c\u5176\u53f3\u5b50\u6a39\u4e2d\u6240\u6709\u7bc0\u9ede\u7684\u503c\u5927\u65bc\u7b49\u65bc\u7236\u7bc0\u9ede\u7684\u503c\u3002\u56e0\u6b64\u5c0d\u65bc\u4e00\u500b\u4e8c\u5143\u641c\u5c0b\u6a39\uff0c\u6211\u5011\u53ef\u4ee5\u5728 ",(0,t.jsxs)(r.span,{className:"katex",children:[(0,t.jsx)(r.span,{className:"katex-mathml",children:(0,t.jsx)(r.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(r.semantics,{children:[(0,t.jsxs)(r.mrow,{children:[(0,t.jsx)(r.mi,{children:"O"}),(0,t.jsx)(r.mo,{stretchy:"false",children:"("}),(0,t.jsx)(r.mi,{children:"log"}),(0,t.jsx)(r.mo,{children:"\u2061"}),(0,t.jsx)(r.mi,{children:"n"}),(0,t.jsx)(r.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(r.annotation,{encoding:"application/x-tex",children:"O(\\log n)"})]})})}),(0,t.jsx)(r.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(r.span,{className:"base",children:[(0,t.jsx)(r.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(r.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(r.span,{className:"mopen",children:"("}),(0,t.jsxs)(r.span,{className:"mop",children:["lo",(0,t.jsx)(r.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,t.jsx)(r.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(r.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(r.span,{className:"mclose",children:")"})]})})]})," \u7684\u6642\u9593\u5167\u67e5\u627e\u67d0\u503c\u662f\u5426\u5b58\u5728\uff1a\u5f9e\u6839\u7bc0\u9ede\u958b\u59cb\uff0c\u82e5\u7576\u524d\u7bc0\u9ede\u7684\u503c\u5927\u65bc\u67e5\u627e\u503c\u5247\u5411\u5de6\u4e0b\u8d70\uff0c\u82e5\u7576\u524d\u7bc0\u9ede\u7684\u503c\u5c0f\u65bc\u67e5\u627e\u503c\u5247\u5411\u53f3\u4e0b\u8d70\u3002\u540c\u6642\u56e0\u70ba\u4e8c\u5143\u641c\u5c0b\u6a39\u662f\u6709\u5e8f\u7684\uff0c\u5c0d\u5176\u4e2d\u5e8f\u904d\u6b77\u7684\u7d50\u679c\u5373\u70ba\u6392\u597d\u5e8f\u7684\u9663\u5217\u3002"]}),"\n",(0,t.jsx)(r.p,{children:"\u4f8b\u5982\u4e0b\u9762\u9019\u68f5\u6a39\u5373\u70ba\u4e8c\u5143\u641c\u5c0b\u6a39\uff0c\u5176\u4e2d\u5e8f\u904d\u6b77\u7d50\u679c\u70ba [1, 2, 3, 4, 5, 6]\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"    4\n   / \\\n  2   5\n / \\   \\\n1   3   6\n"})}),"\n",(0,t.jsx)(r.h2,{id:"99-recover-binary-search-tree",children:(0,t.jsx)(r.a,{href:"https://leetcode.com/problems/recover-binary-search-tree/",children:"99. Recover Binary Search Tree"})}),"\n",(0,t.jsx)(r.h3,{id:"\u984c\u76ee\u63cf\u8ff0",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u7d66\u5b9a\u4e00\u500b\u4e8c\u5143\u641c\u5c0b\u6a39\uff0c\u5df2\u77e5\u6709\u5169\u500b\u7bc0\u9ede\u88ab\u4e0d\u5c0f\u5fc3\u4ea4\u63db\u4e86\uff0c\u8a66\u5fa9\u539f\u6b64\u6a39\u3002"}),"\n",(0,t.jsx)(r.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,t.jsx)(r.p,{children:"\u8f38\u5165\u662f\u4e00\u500b\u88ab\u8aa4\u4ea4\u63db\u5169\u500b\u7bc0\u9ede\u7684\u4e8c\u5143\u641c\u5c0b\u6a39\uff0c\u8f38\u51fa\u662f\u6539\u6b63\u5f8c\u7684\u4e8c\u5143\u641c\u5c0b\u6a39\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"Input:\n  3\n / \\\n1   4\n   /\n  2\nOutput:\n  2\n / \\\n1   4\n   /\n  3\n"})}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c2 \u548c 3 \u88ab\u4e0d\u5c0f\u5fc3\u4ea4\u63db\u4e86\u3002"}),"\n",(0,t.jsx)(r.h3,{id:"\u984c\u89e3",children:"\u984c\u89e3"}),"\n",(0,t.jsxs)(r.p,{children:["\u6211\u5011\u53ef\u4ee5\u4f7f\u7528\u4e2d\u5e8f\u904d\u6b77\u9019\u500b\u4e8c\u5143\u641c\u5c0b\u6a39\uff0c\u540c\u6642\u8a2d\u7f6e\u4e00\u500b ",(0,t.jsx)(r.code,{children:"prev"})," \u6307\u6a19\uff0c\u8a18\u9304\u7576\u524d\u7bc0\u9ede\u4e2d\u5e8f\u904d\u6b77\u6642\u7684\u524d\u4e00\u7bc0\u9ede\u3002\u5982\u679c\u7576\u524d\u7bc0\u9ede\u7684\u503c\u5c0f\u65bc ",(0,t.jsx)(r.code,{children:"prev"})," \u7bc0\u9ede\u7684\u503c\uff0c\u8aaa\u660e\u6b21\u5e8f\u9700\u8981\u8abf\u6574\u3002\u6709\u4e00\u500b\u6280\u5de7\u662f\uff1a"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u5982\u679c\u904d\u6b77\u6574\u500b\u5e8f\u5217\u7684\u904e\u7a0b\u4e2d\u53ea\u51fa\u73fe\u4e00\u6b21\u6b21\u5e8f\u932f\u8aa4\uff0c\u8aaa\u660e\u9019\u5169\u500b\u76f8\u9130\u7bc0\u9ede\u9700\u8981\u88ab\u4ea4\u63db\u3002"}),"\n",(0,t.jsx)(r.li,{children:"\u5982\u679c\u51fa\u73fe\u4e86\u5169\u6b21\u6b21\u5e8f\u932f\u8aa4\uff0c\u5247\u9700\u8981\u4ea4\u63db\u9019\u5169\u500b\u7bc0\u9ede\u3002"}),"\n"]}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)(n,{value:"cpp",label:"C++",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cpp",children:"// \u8f14\u52a9\u51fd\u5f0f\u3002\nvoid inorder(TreeNode* root, TreeNode*& mistake1, TreeNode*& mistake2,\n             TreeNode*& prev) {\n    if (root == nullptr) {\n        return;\n    }\n    inorder(root->left, mistake1, mistake2, prev);\n    if (prev != nullptr && root->val < prev->val) {\n        if (mistake1 == nullptr) {\n            mistake1 = prev;\n        }\n        mistake2 = root;\n    }\n    prev = root;\n    inorder(root->right, mistake1, mistake2, prev);\n}\n// \u4e3b\u51fd\u5f0f\u3002\nvoid recoverTree(TreeNode* root) {\n    TreeNode *mistake1 = nullptr, *mistake2 = nullptr, *prev = nullptr;\n    inorder(root, mistake1, mistake2, prev);\n    if (mistake1 != nullptr && mistake2 != nullptr) {\n        swap(mistake1->val, mistake2->val);\n    }\n}\n"})})}),(0,t.jsx)(n,{value:"py",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-py",children:"# \u8f14\u52a9\u51fd\u5f0f\u3002\n# \u6ce8\u610f\uff0cPython \u4e2d\u4e26\u4e0d\u65b9\u4fbf\u5728\u8f14\u51fd\u5f0f\u4e2d\u76f4\u63a5\u50b3\u6307\u6a19\uff0c\u56e0\u6b64\u6211\u5011\u5efa\u9020\u9577\u5ea6\u70ba 1 \u7684 list \u9032\u884c\u50b3\u5f15\u7528\u3002\ndef inorder(\n    root: Optional[TreeNode],\n    mistake1=List[Optional[TreeNode]],\n    mistake2=List[Optional[TreeNode]],\n    prev=List[Optional[TreeNode]],\n):\n    if root is None:\n        return\n    inorder(root.left, mistake1, mistake2, prev)\n    if prev[0] is not None and root.val < prev[0].val:\n        if mistake1[0] is None:\n            mistake1[0] = prev[0]\n        mistake2[0] = root\n    prev[0] = root\n    inorder(root.right, mistake1, mistake2, prev)\n\n# \u4e3b\u51fd\u5f0f\u3002\ndef recoverTree(root: Optional[TreeNode]) -> None:\n    mistake1, mistake2, prev = [None], [None], [None]\n    inorder(root, mistake1, mistake2, prev)\n    if mistake1[0] is not None and mistake2[0] is not None:\n        mistake1[0].val, mistake2[0].val = mistake2[0].val, mistake1[0].val\n"})})})]}),"\n",(0,t.jsx)(r.h2,{id:"669-trim-a-binary-search-tree",children:(0,t.jsx)(r.a,{href:"https://leetcode.com/problems/trim-a-binary-search-tree/",children:"669. Trim a Binary Search Tree"})}),"\n",(0,t.jsx)(r.h3,{id:"\u984c\u76ee\u63cf\u8ff0-1",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u7d66\u5b9a\u4e00\u500b\u4e8c\u5143\u641c\u5c0b\u6a39\u548c\u5169\u500b\u6574\u6578 L \u548c R\uff0c\u4e14 L < R\uff0c\u8a66\u4fee\u526a\u6b64\u4e8c\u5143\u641c\u5c0b\u6a39\uff0c\u4f7f\u5f97\u4fee\u526a\u5f8c\u6240\u6709\u7bc0\u9ede\u7684\u503c\u90fd\u5728 [L, R] \u7684\u7bc4\u570d\u5167\u3002"}),"\n",(0,t.jsx)(r.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-1",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,t.jsx)(r.p,{children:"\u8f38\u5165\u662f\u4e00\u500b\u4e8c\u5143\u641c\u5c0b\u6a39\u548c\u5169\u500b\u6574\u6578 L \u548c R\uff0c\u8f38\u51fa\u4e00\u500b\u88ab\u4fee\u526a\u597d\u7684\u4e8c\u5143\u641c\u5c0b\u6a39\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"Input: L = 1, R = 3, tree =\n      3\n     / \\\n    0   4\n     \\\n      2\n     /\n    1\nOutput:\n    3\n   /\n  2\n /\n1\n"})}),"\n",(0,t.jsx)(r.h3,{id:"\u984c\u89e3-1",children:"\u984c\u89e3"}),"\n",(0,t.jsx)(r.p,{children:"\u5229\u7528\u4e8c\u5143\u641c\u5c0b\u6a39\u7684\u5927\u5c0f\u95dc\u4fc2\uff0c\u6211\u5011\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5229\u7528\u905e\u8ff4\u9032\u884c\u6a39\u7684\u8655\u7406\u3002"}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)(n,{value:"cpp",label:"C++",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cpp",children:"TreeNode* trimBST(TreeNode* root, int low, int high) {\n    if (root == nullptr) {\n        return root;\n    }\n    if (root->val > high) {\n        return trimBST(root->left, low, high);\n    }\n    if (root->val < low) {\n        return trimBST(root->right, low, high);\n    }\n    root->left = trimBST(root->left, low, high);\n    root->right = trimBST(root->right, low, high);\n    return root;\n}\n"})})}),(0,t.jsx)(n,{value:"py",label:"Python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-py",children:"def trimBST(\n    root: Optional[TreeNode], low: int, high: int\n) -> Optional[TreeNode]:\n    if root is None:\n        return None\n    if root.val > high:\n        return trimBST(root.left, low, high)\n    if root.val < low:\n        return trimBST(root.right, low, high)\n    root.left = trimBST(root.left, low, high)\n    root.right = trimBST(root.right, low, high)\n    return root\n"})})})]})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function m(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);