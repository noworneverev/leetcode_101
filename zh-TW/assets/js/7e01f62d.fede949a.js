"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[7596],{5413:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>t,default:()=>o,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"searching-algorithms/5-2-depth-first-search","title":"5.2 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22","description":"\u6df1\u5ea6\u512a\u5148\u641c\u5c0b (DFS) \u662f\u4e00\u7a2e\u641c\u5c0b\u65b9\u6cd5\uff0c\u5728\u641c\u5c0b\u5230\u4e00\u500b\u65b0\u7bc0\u9ede\u6642\uff0c\u6703\u7acb\u5373\u5c0d\u8a72\u7bc0\u9ede\u9032\u884c\u904d\u6b77\u3002\u56e0\u6b64\uff0c\u904d\u6b77\u9700\u8981\u4f7f\u7528 \u5148\u5165\u5f8c\u51fa (LIFO) \u7684\u5806\u758a\uff0c\u4e5f\u53ef\u4ee5\u900f\u904e\u8207\u5806\u758a\u7b49\u50f9\u7684 \u905e\u8ff4 \u4f86\u5be6\u73fe\u3002\u5c0d\u65bc\u6a39\u7d50\u69cb\u800c\u8a00\uff0c\u7531\u65bc\u6bcf\u6b21\u7e3d\u662f\u5c0d\u65b0\u7bc0\u9ede\u9032\u884c\u904d\u6b77\uff0c\u56e0\u6b64\u770b\u8d77\u4f86\u50cf\u662f\u5f80\u201c\u6df1\u201d\u7684\u65b9\u5411\u524d\u9032\u3002\u5728 Python \u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 collections.deque \u4f86\u5be6\u73fe C++ \u4e2d\u7684\u5806\u758a\u3002\u7136\u800c\uff0c\u5728\u5927\u591a\u6578\u60c5\u6cc1\u4e0b\uff0c\u6211\u5011\u6703\u9078\u64c7\u4f7f\u7528 C++ \u7684 vector \u6216 Python \u7684 list \u4f86\u5be6\u73fe\u5806\u758a\uff0c\u56e0\u70ba\u5b83\u5011\u4e0d\u50c5\u662f\u5148\u5165\u5f8c\u51fa\u7684\u6578\u64da\u7d50\u69cb\uff0c\u9084\u652f\u6301\u96a8\u6a5f\u5b58\u53d6\u3002","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/5-searching-algorithms/5-2-depth-first-search.mdx","sourceDirName":"5-searching-algorithms","slug":"/searching-algorithms/5-2-depth-first-search","permalink":"/leetcode_101/zh-TW/searching-algorithms/5-2-depth-first-search","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/5-searching-algorithms/5-2-depth-first-search.mdx","tags":[],"version":"current","sidebarPosition":22,"frontMatter":{"sidebar_position":22},"sidebar":"tutorialSidebar","previous":{"title":"5.1 \u7b97\u6cd5\u89e3\u91ca","permalink":"/leetcode_101/zh-TW/searching-algorithms/5-1-algorithm-explanation"},"next":{"title":"5.3 \u56de\u6eaf\u6cd5","permalink":"/leetcode_101/zh-TW/searching-algorithms/5-3-backtracking"}}');var a=i(4848),s=i(8453);const c={sidebar_position:22},t="5.2 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22",d={},l=[{value:"695. Max Area of Island",id:"695-max-area-of-island",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3",level:3},{value:"547. Number of Provinces",id:"547-number-of-provinces",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0-1",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-1",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3-1",level:3},{value:"417. Paci\ufb01c Atlantic Water Flow",id:"417-paci\ufb01c-atlantic-water-flow",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0-2",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-2",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3-2",level:3}];function h(n){const e={a:"a",admonition:"admonition",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",...(0,s.R)(),...n.components},{TabItem:i,Tabs:r}=e;return i||x("TabItem",!0),r||x("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"52-\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",children:"5.2 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"\u6df1\u5ea6\u512a\u5148\u641c\u5c0b (DFS)"})," \u662f\u4e00\u7a2e\u641c\u5c0b\u65b9\u6cd5\uff0c\u5728\u641c\u5c0b\u5230\u4e00\u500b\u65b0\u7bc0\u9ede\u6642\uff0c\u6703\u7acb\u5373\u5c0d\u8a72\u7bc0\u9ede\u9032\u884c\u904d\u6b77\u3002\u56e0\u6b64\uff0c\u904d\u6b77\u9700\u8981\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"\u5148\u5165\u5f8c\u51fa (LIFO) \u7684\u5806\u758a"}),"\uff0c\u4e5f\u53ef\u4ee5\u900f\u904e\u8207\u5806\u758a\u7b49\u50f9\u7684 ",(0,a.jsx)(e.code,{children:"\u905e\u8ff4"})," \u4f86\u5be6\u73fe\u3002\u5c0d\u65bc\u6a39\u7d50\u69cb\u800c\u8a00\uff0c\u7531\u65bc\u6bcf\u6b21\u7e3d\u662f\u5c0d\u65b0\u7bc0\u9ede\u9032\u884c\u904d\u6b77\uff0c\u56e0\u6b64\u770b\u8d77\u4f86\u50cf\u662f\u5f80\u201c\u6df1\u201d\u7684\u65b9\u5411\u524d\u9032\u3002\u5728 Python \u4e2d\uff0c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 collections.deque \u4f86\u5be6\u73fe C++ \u4e2d\u7684\u5806\u758a\u3002\u7136\u800c\uff0c\u5728\u5927\u591a\u6578\u60c5\u6cc1\u4e0b\uff0c\u6211\u5011\u6703\u9078\u64c7\u4f7f\u7528 C++ \u7684 vector \u6216 Python \u7684 list \u4f86\u5be6\u73fe\u5806\u758a\uff0c\u56e0\u70ba\u5b83\u5011\u4e0d\u50c5\u662f\u5148\u5165\u5f8c\u51fa\u7684\u6578\u64da\u7d50\u69cb\uff0c\u9084\u652f\u6301\u96a8\u6a5f\u5b58\u53d6\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u8003\u616e\u4ee5\u4e0b\u7c21\u55ae\u7684\u6a39\u7d50\u69cb\uff0c\u5f9e\u7bc0\u9ede 1 \u958b\u59cb\u9032\u884c\u904d\u6b77\u3002\u5982\u679c\u904d\u6b77\u9806\u5e8f\u662f\u5f9e\u5de6\u5b50\u7bc0\u9ede\u5230\u53f3\u5b50\u7bc0\u9ede\uff0c\u90a3\u9ebc\u6309\u7167\u512a\u5148\u5f80\u201c\u6df1\u201d\u7684\u65b9\u5411\u524d\u9032\u7684\u7b56\u7565\uff0c\u904d\u6b77\u904e\u7a0b\u5c07\u662f\uff1a1\uff08\u8d77\u59cb\u7bc0\u9ede\uff09\u2192 2\uff08\u66f4\u6df1\u5c64\u7684\u5de6\u5b50\u7bc0\u9ede\uff09\u2192 4\uff08\u66f4\u6df1\u5c64\u7684\u5de6\u5b50\u7bc0\u9ede\uff09\u2192 2\uff08\u7121\u5b50\u7bc0\u9ede\uff0c\u8fd4\u56de\u7236\u7bc0\u9ede\uff09\u2192 1\uff08\u6240\u6709\u5b50\u7bc0\u9ede\u5df2\u5b8c\u6210\u904d\u6b77\uff0c\u8fd4\u56de\u7236\u7bc0\u9ede\uff09\u2192 3\uff08\u66f4\u6df1\u5c64\u7684\u53f3\u5b50\u7bc0\u9ede\uff09\u2192 1\uff08\u7121\u5b50\u7bc0\u9ede\uff0c\u8fd4\u56de\u7236\u7bc0\u9ede\uff09\u2192 \u7d50\u675f\u7a0b\u5e8f\uff08\u6240\u6709\u5b50\u7bc0\u9ede\u5df2\u5b8c\u6210\u904d\u6b77\uff09\u3002\u5982\u679c\u6211\u5011\u4f7f\u7528\u5806\u758a\u5be6\u73fe\uff0c\u5806\u758a\u9802\u90e8\u5143\u7d20\u7684\u8b8a\u5316\u904e\u7a0b\u5c07\u662f\uff1a1 \u2192 2 \u2192 4 \u2192 3\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"   1\n  / \\\n  2 3\n /\n4\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u6df1\u5ea6\u512a\u5148\u641c\u5c0b\u4e5f\u53ef\u4ee5\u7528\u4f86 ",(0,a.jsx)(e.code,{children:"\u6aa2\u6e2c\u8ff4\u8def"}),"\uff1a\u8a18\u9304\u6bcf\u500b\u904d\u6b77\u904e\u7684\u7bc0\u9ede\u7684\u7236\u7bc0\u9ede\uff0c\u82e5\u67d0\u7bc0\u9ede\u88ab\u518d\u6b21\u904d\u6b77\u4e14\u7236\u7bc0\u9ede\u4e0d\u540c\uff0c\u5247\u8aaa\u660e\u5b58\u5728\u8ff4\u8def\u3002\u53e6\u4e00\u7a2e\u65b9\u6cd5\u662f\u5229\u7528\u62d3\u64b2\u6392\u5e8f\u5224\u65b7\u662f\u5426\u6709\u8ff4\u8def\uff0c\u82e5\u6700\u5f8c\u6709\u7bc0\u9ede\u7684\u5165\u5ea6\u4e0d\u70ba\u96f6\uff0c\u5247\u8aaa\u660e\u5b58\u5728\u8ff4\u8def\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u6709\u6642\u6211\u5011\u9700\u8981\u5c0d\u5df2\u7d93\u641c\u5c0b\u904e\u7684\u7bc0\u9ede\u9032\u884c\u6a19\u8a18\uff0c\u4ee5\u9632\u6b62\u91cd\u8907\u641c\u7d22\uff0c\u9019\u7a2e\u505a\u6cd5\u7a31\u70ba ",(0,a.jsx)(e.code,{children:"\u72c0\u614b\u8a18\u9304"})," \u6216 ",(0,a.jsx)(e.code,{children:"\u8a18\u61b6\u5316 (memoization)"}),"\u3002"]}),"\n",(0,a.jsx)(e.h2,{id:"695-max-area-of-island",children:(0,a.jsx)(e.a,{href:"https://leetcode.com/problems/max-area-of-island/",children:"695. Max Area of Island"})}),"\n",(0,a.jsx)(e.h3,{id:"\u984c\u76ee\u63cf\u8ff0",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,a.jsxs)(e.p,{children:["\u7d66\u5b9a\u4e00\u500b\u4e8c\u7dad\u7684 0-1 \u77e9\u9663\uff0c\u5176\u4e2d ",(0,a.jsx)(e.code,{children:"0"})," \u8868\u793a\u6d77\u6d0b\uff0c",(0,a.jsx)(e.code,{children:"1"})," \u8868\u793a\u9678\u5730\u3002\u7368\u7acb\u7684\u6216\u76f8\u9130\u7684\u9678\u5730\u53ef\u4ee5\u5f62\u6210\u5cf6\u5dbc\uff0c\u6bcf\u500b\u683c\u5b50\u50c5\u8207\u5176\u4e0a\u4e0b\u5de6\u53f3\u56db\u500b\u683c\u5b50\u76f8\u9130\u3002\u6c42\u6700\u5927\u7684\u5cf6\u5dbc\u9762\u7a4d\u3002"]}),"\n",(0,a.jsx)(e.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,a.jsx)(e.p,{children:"\u8f38\u5165\u662f\u4e00\u500b\u4e8c\u7dad\u9663\u5217\uff0c\u8f38\u51fa\u662f\u4e00\u500b\u6574\u6578\uff0c\u8868\u793a\u6700\u5927\u7684\u5cf6\u5dbc\u9762\u7a4d\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"Input:\n[[1,0,1,1,0,1,0,1],\n[1,0,1,1,0,1,1,1],\n[0,0,0,0,0,0,0,1]]\nOutput: 6\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u6700\u5927\u7684\u5cf6\u5dbc\u9762\u7a4d\u70ba 6\uff0c\u4f4d\u65bc\u6700\u53f3\u5074\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u984c\u89e3",children:"\u984c\u89e3"}),"\n",(0,a.jsx)(e.p,{children:"\u6b64\u984c\u662f\u4e00\u500b\u975e\u5e38\u6a19\u6e96\u7684\u641c\u7d22\u554f\u984c\uff0c\u6211\u5011\u53ef\u4ee5\u7528\u4f86\u7df4\u7fd2\u6df1\u5ea6\u512a\u5148\u641c\u7d22\uff08DFS\uff09\u3002\u4e00\u822c\u4f86\u8aaa\uff0c\u6df1\u5ea6\u512a\u5148\u641c\u7d22\u985e\u578b\u7684\u984c\u76ee\u53ef\u4ee5\u5206\u70ba\u4e3b\u51fd\u6578\u548c\u8f14\u51fd\u6578\u5169\u90e8\u5206\u3002\u4e3b\u51fd\u6578\u8ca0\u8cac\u904d\u6b77\u6240\u6709\u7684\u641c\u7d22\u4f4d\u7f6e\uff0c\u5224\u65b7\u662f\u5426\u53ef\u4ee5\u958b\u59cb\u641c\u7d22\uff0c\u5982\u679c\u53ef\u4ee5\u5247\u8abf\u7528\u8f14\u51fd\u6578\u9032\u884c\u641c\u7d22\u3002\u8f14\u51fd\u6578\u5247\u8ca0\u8cac\u6df1\u5ea6\u512a\u5148\u641c\u7d22\u7684\u905e\u6b78\u8abf\u7528\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u7576\u7136\uff0c\u6211\u5011\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5806\u758a\uff08stack\uff09\u4f86\u5be6\u73fe\u6df1\u5ea6\u512a\u5148\u641c\u7d22\uff0c\u4f46\u7531\u65bc\u5806\u758a\u8207\u905e\u6b78\u7684\u904b\u4f5c\u539f\u7406\u76f8\u540c\uff0c\u800c\u905e\u6b78\u76f8\u5c0d\u4f86\u8aaa\u5be6\u73fe\u8d77\u4f86\u66f4\u70ba\u65b9\u4fbf\uff0c\u56e0\u6b64\u5728\u5237\u984c\u6642\u5efa\u8b70\u4f7f\u7528\u905e\u6b78\u7684\u5beb\u6cd5\uff0c\u9019\u6a23\u4e5f\u6709\u5229\u65bc\u9032\u884c\u56de\u6eaf\uff08\u898b\u4e0b\u7bc0\uff09\u3002\u4e0d\u904e\u5728\u5be6\u969b\u5de5\u7a0b\u4e2d\uff0c\u76f4\u63a5\u4f7f\u7528\u5806\u758a\u53ef\u80fd\u624d\u662f\u66f4\u597d\u7684\u9078\u64c7\uff0c\u539f\u56e0\u6709\u4e8c\uff1a\u4e00\u662f\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u4e8c\u662f\u4e0d\u5bb9\u6613\u51fa\u73fe\u905e\u6b78\u5806\u758a\u6ea2\u51fa\u7684\u60c5\u6cc1\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u5011\u5148\u5c55\u793a\u4f7f\u7528\u5806\u758a\u7684\u5beb\u6cd5\u3002\u9019\u88e1\u6211\u5011\u4f7f\u7528\u4e86\u4e00\u500b\u5c0f\u6280\u5de7\uff0c\u5c0d\u65bc\u56db\u500b\u65b9\u5411\u7684\u904d\u6b77\uff0c\u53ef\u4ee5\u5275\u5efa\u4e00\u500b\u6578\u7d44 ",(0,a.jsx)(e.code,{children:"[-1, 0, 1, 0, -1]"}),"\uff0c\u6bcf\u76f8\u9130\u5169\u4f4d\u5373\u5c0d\u61c9\u4e0a\u4e0b\u5de6\u53f3\u56db\u500b\u65b9\u5411\u4e4b\u4e00\u3002\u7576\u7136\uff0c\u60a8\u4e5f\u53ef\u4ee5\u986f\u5f0f\u5730\u5beb\u6210 ",(0,a.jsx)(e.code,{children:"[-1, 0]"}),"\u3001",(0,a.jsx)(e.code,{children:"[1, 0]"}),"\u3001",(0,a.jsx)(e.code,{children:"[0, 1]"})," \u548c ",(0,a.jsx)(e.code,{children:"[0, -1]"}),"\uff0c\u4ee5\u4fbf\u65bc\u7406\u89e3\u3002"]}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)(i,{value:"cpp",label:"C++",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"int maxAreaOfIsland(vector<vector<int>>& grid) {\n    vector<int> direction{-1, 0, 1, 0, -1};\n    int m = grid.size(), n = grid[0].size(), max_area = 0;\n    for (int i = 0; i < m; ++i) {\n        for (int j = 0; j < n; ++j) {\n            if (grid[i][j] == 1) {\n                stack<pair<int, int>> island;\n                // \u521d\u59cb\u5316\u7b2c\u4e00\u500b\u7bc0\u9ede\u3002\n                int local_area = 1;\n                grid[i][j] = 0;\n                island.push({i, j});\n                // \u6df1\u5ea6\u512a\u5148\u641c\u7d22 (DFS)\u3002\n                while (!island.empty()) {\n                    auto [r, c] = island.top();\n                    island.pop();\n                    for (int k = 0; k < 4; ++k) {\n                        int x = r + direction[k], y = c + direction[k + 1];\n                        // \u5c07\u6eff\u8db3\u689d\u4ef6\u7684\u76f8\u9130\u7bc0\u9ede\u52a0\u5165\u5806\u758a\u3002\n                        if (x >= 0 && x < m && y >= 0 && y < n &&\n                            grid[x][y] == 1) {\n                            ++local_area;\n                            grid[x][y] = 0;\n                            island.push({x, y});\n                        }\n                    }\n                }\n                max_area = max(max_area, local_area);\n            }\n        }\n    }\n    return max_area;\n}\n"})})}),(0,a.jsx)(i,{value:"py",label:"Python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-py",children:"def maxAreaOfIsland(grid: List[List[int]]) -> int:\n    direction = [-1, 0, 1, 0, -1]\n    m, n, max_area = len(grid), len(grid[0]), 0\n    for i in range(m):\n        for j in range(n):\n            if grid[i][j] == 1:\n                island = []\n                # \u521d\u59cb\u5316\u7b2c\u4e00\u500b\u7bc0\u9ede\u3002\n                local_area = 1\n                grid[i][j] = 0\n                island.append((i, j))\n                # \u6df1\u5ea6\u512a\u5148\u641c\u7d22 (DFS)\u3002\n                while len(island) > 0:\n                    r, c = island.pop()\n                    for k in range(4):\n                        x, y = r + direction[k], c + direction[k + 1]\n                        # \u5c07\u6eff\u8db3\u689d\u4ef6\u7684\u76f8\u9130\u7bc0\u9ede\u52a0\u5165\u5806\u758a\u3002\n                        if 0 <= x < m and 0 <= y < n and grid[x][y] == 1:\n                            local_area += 1\n                            grid[x][y] = 0\n                            island.append((x, y))\n                max_area = max(max_area, local_area)\n    return max_area\n"})})})]}),"\n",(0,a.jsx)(e.p,{children:"\u4e0b\u9762\u6211\u5011\u5c55\u793a\u905e\u8ff4\u5beb\u6cd5\uff0c\u6ce8\u610f\u9032\u884c\u905e\u8ff4\u641c\u5c0b\u6642\uff0c\u4e00\u5b9a\u8981\u6aa2\u67e5\u908a\u754c\u689d\u4ef6\u3002\u53ef\u4ee5\u5728\u6bcf\u6b21\u547c\u53eb\u8f14\u52a9\u51fd\u5f0f\u4e4b\u524d\u6aa2\u67e5\uff0c\u4e5f\u53ef\u4ee5\u5728\u8f14\u52a9\u51fd\u5f0f\u7684\u4e00\u958b\u59cb\u9032\u884c\u6aa2\u67e5\u3002\u9019\u88e1\u6211\u5011\u6c92\u6709\u5229\u7528 [-1, 0, 1, 0, -1] \u9663\u5217\u9032\u884c\u4e0a\u4e0b\u5de6\u53f3\u56db\u500b\u65b9\u5411\u7684\u641c\u5c0b\uff0c\u800c\u662f\u76f4\u63a5\u986f\u5f0f\u5730\u5beb\u51fa\u4f86\u56db\u7a2e\u4e0d\u540c\u7684\u905e\u8ff4\u51fd\u5f0f\u3002\u5169\u7a2e\u5beb\u6cd5\u90fd\u53ef\u4ee5\uff0c\u8b80\u8005\u53ef\u4ee5\u638c\u63e1\u4efb\u610f\u4e00\u7a2e\u3002"}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)(i,{value:"cpp",label:"C++",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"// \u8f14\u52a9\u51fd\u5f0f\u3002\nint dfs(vector<vector<int>>& grid, int r, int c) {\n    if (r < 0 || r >= grid.size() || c < 0 || c >= grid[0].size() ||\n        grid[r][c] == 0) {\n        return 0;\n    }\n    grid[r][c] = 0;\n    return (1 + dfs(grid, r + 1, c) + dfs(grid, r - 1, c) +\n            dfs(grid, r, c + 1) + dfs(grid, r, c - 1));\n}\n\n// \u4e3b\u51fd\u5f0f\u3002\nint maxAreaOfIsland(vector<vector<int>>& grid) {\n    int max_area = 0;\n    for (int i = 0; i < grid.size(); ++i) {\n        for (int j = 0; j < grid[0].size(); ++j) {\n            max_area = max(max_area, dfs(grid, i, j));\n        }\n    }\n    return max_area;\n}\n"})})}),(0,a.jsx)(i,{value:"py",label:"Python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-py",children:"# \u8f14\u52a9\u51fd\u5f0f\u3002\ndef dfs(grid: List[List[int]], r: int, c: int) -> int:\n    if r < 0 or r >= len(grid) or c < 0 or c >= len(grid[0]) or grid[r][c] == 0:\n        return 0\n    grid[r][c] = 0\n    return (1 + dfs(grid, r + 1, c) + dfs(grid, r - 1, c) +\n            dfs(grid, r, c + 1) + dfs(grid, r, c - 1))\n\n# \u4e3b\u51fd\u5f0f\u3002\ndef maxAreaOfIsland(grid: List[List[int]]) -> int:\n    max_area = 0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            max_area = max(max_area, dfs(grid, i, j))\n    return max_area\n"})})})]}),"\n",(0,a.jsx)(e.h2,{id:"547-number-of-provinces",children:(0,a.jsx)(e.a,{href:"https://leetcode.com/problems/number-of-provinces/",children:"547. Number of Provinces"})}),"\n",(0,a.jsx)(e.h3,{id:"\u984c\u76ee\u63cf\u8ff0-1",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,a.jsx)(e.p,{children:"\u7d66\u5b9a\u4e00\u500b\u4e8c\u7dad\u7684 0-1 \u77e9\u9663\uff0c\u5982\u679c\u7b2c (i, j) \u4f4d\u7f6e\u662f 1\uff0c\u5247\u8868\u793a\u7b2c i \u500b\u57ce\u5e02\u548c\u7b2c j \u500b\u57ce\u5e02\u8655\u65bc\u540c\u4e00\u57ce\u5e02\u5708\u3002\u5df2\u77e5\u57ce\u5e02\u7684\u76f8\u9130\u95dc\u4fc2\u662f\u53ef\u4ee5\u50b3\u905e\u7684\uff0c\u5373\u5982\u679c a \u548c b \u76f8\u9130\uff0cb \u548c c \u76f8\u9130\uff0c\u90a3\u9ebc a \u548c c \u4e5f\u76f8\u9130\uff0c\u63db\u8a00\u4e4b\u9019\u4e09\u500b\u57ce\u5e02\u8655\u65bc\u540c\u4e00\u500b\u57ce\u5e02\u5708\u4e4b\u5167\u3002\u6c42\u4e00\u5171\u6709\u591a\u5c11\u500b\u57ce\u5e02\u5708\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-1",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,a.jsx)(e.p,{children:"\u8f38\u5165\u662f\u4e00\u500b\u4e8c\u7dad\u6578\u7d44\uff0c\u8f38\u51fa\u662f\u4e00\u500b\u6574\u6578\uff0c\u8868\u793a\u57ce\u5e02\u5708\u6578\u91cf\u3002\u56e0\u70ba\u57ce\u5e02\u76f8\u9130\u95dc\u4fc2\u5177\u6709\u5c0d\u7a31\u6027\uff0c\u8a72\u4e8c\u7dad\u6578\u7d44\u70ba\u5c0d\u7a31\u77e9\u9663\u3002\u540c\u6642\uff0c\u56e0\u70ba\u81ea\u5df1\u4e5f\u8655\u65bc\u81ea\u5df1\u7684\u57ce\u5e02\u5708\uff0c\u5c0d\u89d2\u7dda\u4e0a\u7684\u503c\u5168\u90e8\u70ba 1\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"Input:\n[[1,1,0],\n[1,1,0],\n[0,0,1]]\nOutput: 2\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c[1,2] \u8655\u65bc\u4e00\u500b\u57ce\u5e02\u5708\uff0c[3] \u8655\u65bc\u53e6\u4e00\u500b\u57ce\u5e02\u5708\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u984c\u89e3-1",children:"\u984c\u89e3"}),"\n",(0,a.jsxs)(e.p,{children:["\u5728\u4e0a\u4e00\u9053\u984c\u76ee\u4e2d\uff0c\u5716\u7684\u8868\u793a\u65b9\u6cd5\u662f\uff0c\u6bcf\u500b\u4f4d\u7f6e\u4ee3\u8868\u4e00\u500b\u7bc0\u9ede\uff0c\u6bcf\u500b\u7bc0\u9ede\u8207\u4e0a\u4e0b\u5de6\u53f3\u56db\u500b\u7bc0\u9ede\u76f8\u9130\u3002\u800c\u5728\u9019\u4e00\u9053\u984c\u76ee\u88e1\u9762\uff0c\u6bcf\u4e00\u884c\uff08\u5217\uff09\u8868\u793a\u4e00\u500b\u7bc0\u9ede\uff0c\u5b83\u7684\u6bcf\u5217\uff08\u884c\uff09\u8868\u793a\u662f\u5426\u5b58\u5728\u4e00\u500b\u76f8\u9130\u7bc0\u9ede\u3002\u4e0a\u4e00\u9053\u984c\u76ee\u64c1\u6709 ",(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsxs)(e.mrow,{children:[(0,a.jsx)(e.mi,{children:"m"}),(0,a.jsx)(e.mo,{children:"\xd7"}),(0,a.jsx)(e.mi,{children:"n"})]}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"m \\times n"})]})})}),(0,a.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"\xd7"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"n"})]})]})]})," \u500b\u7bc0\u9ede\uff0c\u6bcf\u500b\u7bc0\u9ede\u6709 4 \u689d\u908a\uff1b\u800c\u672c\u984c\u64c1\u6709 ",(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsx)(e.mrow,{children:(0,a.jsx)(e.mi,{children:"n"})}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,a.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"n"})]})})]})," \u500b\u7bc0\u9ede\uff0c\u6bcf\u500b\u7bc0\u9ede\u6700\u591a\u6709 ",(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsx)(e.mrow,{children:(0,a.jsx)(e.mi,{children:"n"})}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,a.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"n"})]})})]})," \u689d\u908a\uff0c\u8868\u793a\u548c\u6240\u6709\u57ce\u5e02\u90fd\u76f8\u9130\uff0c\u6700\u5c11\u53ef\u4ee5\u6709 1 \u689d\u908a\uff0c\u8868\u793a\u7576\u524d\u57ce\u5e02\u5708\u53ea\u6709\u81ea\u5df1\u3002\u7576\u6e05\u695a\u4e86\u5716\u7684\u8868\u793a\u65b9\u6cd5\u5f8c\uff0c\u9019\u9053\u984c\u76ee\u8207\u4e0a\u4e00\u9053\u984c\u76ee\u672c\u8cea\u4e0a\u662f\u540c\u4e00\u9053\u984c\uff1a\u641c\u7d22\u57ce\u5e02\u5708\uff08\u5cf6\u5dbc\u5708\uff09\u7684\u500b\u6578\u3002\u6211\u5011\u9019\u88e1\u63a1\u7528\u905e\u8ff4\u7684\u5beb\u6cd5\u3002"]}),"\n",(0,a.jsx)(e.admonition,{type:"warning",children:(0,a.jsx)(e.p,{children:"\u5c0d\u65bc\u7bc0\u9ede\u9023\u63a5\u985e\u554f\u984c\uff0c\u6211\u5011\u4e5f\u53ef\u4ee5\u5229\u7528\u4e26\u67e5\u96c6\u4f86\u9032\u884c\u5feb\u901f\u7684\u9023\u63a5\u548c\u641c\u7d22\u3002\u6211\u5011\u5c07\u6703\u5728\u4e4b\u5f8c\u7684\u7ae0\u7bc0\u8b1b\u89e3\u3002"})}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)(i,{value:"cpp",label:"C++",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"// \u8f14\u52a9\u51fd\u5f0f\u3002\nvoid dfs(vector<vector<int>>& isConnected, int i, vector<bool>& visited) {\n    visited[i] = true;\n    for (int j = 0; j < isConnected.size(); ++j) {\n        if (isConnected[i][j] == 1 && !visited[j]) {\n            dfs(isConnected, j, visited);\n        }\n    }\n}\n\n// \u4e3b\u51fd\u5f0f\u3002\nint findCircleNum(vector<vector<int>>& isConnected) {\n    int n = isConnected.size(), count = 0;\n    // \u9632\u6b62\u91cd\u8907\u641c\u7d22\u5df2\u88ab\u641c\u7d22\u904e\u7684\u7bc0\u9ede\n    vector<bool> visited(n, false);\n    for (int i = 0; i < n; ++i) {\n        if (!visited[i]) {\n            dfs(isConnected, i, visited);\n            ++count;\n        }\n    }\n    return count;\n}\n"})})}),(0,a.jsx)(i,{value:"py",label:"Python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-py",children:"# \u8f14\u52a9\u51fd\u5f0f\u3002\ndef dfs(isConnected: List[List[int]], city: int, visited: Set[int]):\n    visited.add(city)\n    for i in range(len(isConnected)):\n        if isConnected[city][i] == 1 and i not in visited:\n            dfs(isConnected, i, visited)\n\n# \u4e3b\u51fd\u5f0f\u3002\ndef findCircleNum(isConnected: List[List[int]]) -> int:\n    count = 0\n    # \u9632\u6b62\u91cd\u8907\u641c\u7d22\u5df2\u88ab\u641c\u7d22\u904e\u7684\u7bc0\u9ede\n    visited = set()\n    for i in range(len(isConnected)):\n        if i not in visited:\n            dfs(isConnected, i, visited)\n            count += 1\n    return count\n"})})})]}),"\n",(0,a.jsx)(e.h2,{id:"417-paci\ufb01c-atlantic-water-flow",children:(0,a.jsx)(e.a,{href:"https://leetcode.com/problems/pacific-atlantic-water-flow/",children:"417. Paci\ufb01c Atlantic Water Flow"})}),"\n",(0,a.jsx)(e.h3,{id:"\u984c\u76ee\u63cf\u8ff0-2",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,a.jsx)(e.p,{children:"\u7d66\u5b9a\u4e00\u500b\u4e8c\u7dad\u7684\u975e\u8ca0\u6574\u6578\u77e9\u9663\uff0c\u6bcf\u500b\u4f4d\u7f6e\u7684\u503c\u8868\u793a\u6d77\u62d4\u9ad8\u5ea6\u3002\u5047\u8a2d\u5de6\u908a\u548c\u4e0a\u908a\u662f\u592a\u5e73\u6d0b\uff0c\u53f3\u908a\u548c\u4e0b\u908a\u662f\u5927\u897f\u6d0b\uff0c\u6c42\u5f9e\u54ea\u4e9b\u4f4d\u7f6e\u5411\u4e0b\u6d41\u6c34\u53ef\u4ee5\u6d41\u5230\u592a\u5e73\u6d0b\u548c\u5927\u897f\u6d0b\u3002\u6c34\u53ea\u80fd\u5f9e\u6d77\u62d4\u9ad8\u7684\u4f4d\u7f6e\u6d41\u5411\u6d77\u62d4\u4f4e\u6216\u76f8\u540c\u7684\u4f4d\u7f6e\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-2",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,a.jsx)(e.p,{children:"\u8f38\u5165\u662f\u4e00\u500b\u4e8c\u7dad\u7684\u975e\u8ca0\u6574\u6578\u77e9\u9663\uff0c\u8868\u793a\u6d77\u62d4\u9ad8\u5ea6\u3002\u8f38\u51fa\u662f\u4e00\u500b\u4e8c\u7dad\u7684\u6578\u7d44\uff0c\u5176\u4e2d\u7b2c\u4e8c\u7dad\u5927\u5c0f\u56fa\u5b9a\u70ba 2\uff0c\u8868\u793a\u6eff\u8db3\u689d\u4ef6\u7684\u4f4d\u7f6e\u5750\u6a19\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"Input:\n \u592a\u5e73\u6d0b ~  ~  ~  ~  ~\n    ~  1   2  2  3  (5) *\n    ~  3   2  3 (4) (4) *\n    ~  2   4 (5) 3   1 *\n    ~ (6) (7) 1  4   5 *\n    ~ (5)  1  1  2   4 *\n       *   *  *  *   * \u5927\u897f\u6d0b\nOutput: [[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]]\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u6b64\u7bc4\u4f8b\u4e2d\uff0c\u6709\u62ec\u865f\u7684\u5340\u57df\u70ba\u6eff\u8db3\u689d\u4ef6\u7684\u4f4d\u7f6e\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u984c\u89e3-2",children:"\u984c\u89e3"}),"\n",(0,a.jsx)(e.p,{children:"\u96d6\u7136\u984c\u76ee\u8981\u6c42\u627e\u5230\u53ef\u4ee5\u5411\u4e0b\u6d41\u5230\u9054\u5169\u500b\u5927\u6d0b\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u5c0d\u6240\u6709\u4f4d\u7f6e\u9032\u884c\u641c\u7d22\uff0c\u8907\u96dc\u5ea6\u6703\u975e\u5e38\u9ad8\u4e14\u7121\u6cd5\u526a\u679d\u3002\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u53cd\u5411\u601d\u8003\uff0c\u5f9e\u5169\u500b\u5927\u6d0b\u958b\u59cb\u6a21\u64ec\u6c34\u5f80\u4e0a\u6d41\uff0c\u9019\u6a23\u53ea\u9700\u8981\u5c0d\u77e9\u5f62\u7684\u56db\u689d\u908a\u9032\u884c\u641c\u7d22\u3002\u5b8c\u6210\u641c\u7d22\u5f8c\uff0c\u904d\u6b77\u6574\u500b\u77e9\u9663\uff0c\u627e\u5230\u5169\u500b\u5927\u6d0b\u5411\u4e0a\u6d41\u90fd\u80fd\u5230\u9054\u7684\u4f4d\u7f6e\uff0c\u5373\u70ba\u6eff\u8db3\u689d\u4ef6\u7684\u4f4d\u7f6e\u3002"}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)(i,{value:"cpp",label:"C++",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"vector<int> direction{-1, 0, 1, 0, -1};\n// \u8f14\u52a9\u51fd\u5f0f\u3002\nvoid dfs(const vector<vector<int>>& heights, vector<vector<bool>>& can_reach,\n         int r, int c) {\n    if (can_reach[r][c]) {\n        return;\n    }\n    can_reach[r][c] = true;\n    for (int i = 0; i < 4; ++i) {\n        int x = r + direction[i], y = c + direction[i + 1];\n        if (x >= 0 && x < heights.size() && y >= 0 && y < heights[0].size() &&\n            heights[r][c] <= heights[x][y]) {\n            dfs(heights, can_reach, x, y);\n        }\n    }\n}\n\n// \u4e3b\u51fd\u5f0f\u3002\nvector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {\n    int m = heights.size(), n = heights[0].size();\n    vector<vector<bool>> can_reach_p(m, vector<bool>(n, false));\n    vector<vector<bool>> can_reach_a(m, vector<bool>(n, false));\n    vector<vector<int>> can_reach_p_and_a;\n    for (int i = 0; i < m; ++i) {\n        dfs(heights, can_reach_p, i, 0);\n        dfs(heights, can_reach_a, i, n - 1);\n    }\n    for (int i = 0; i < n; ++i) {\n        dfs(heights, can_reach_p, 0, i);\n        dfs(heights, can_reach_a, m - 1, i);\n    }\n    for (int i = 0; i < m; ++i) {\n        for (int j = 0; j < n; ++j) {\n            if (can_reach_p[i][j] && can_reach_a[i][j]) {\n                can_reach_p_and_a.push_back({i, j});\n            }\n        }\n    }\n    return can_reach_p_and_a;\n}\n"})})}),(0,a.jsx)(i,{value:"py",label:"Python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-py",children:"direction = [-1, 0, 1, 0, -1]\n\n# \u8f14\u52a9\u51fd\u5f0f\u3002\ndef dfs(heights: List[List[int]], can_reach: List[List[int]], r: int, c: int):\n    if can_reach[r][c]:\n        return\n    can_reach[r][c] = True\n    for i in range(4):\n        x, y = r + direction[i], c + direction[i + 1]\n        if (x >= 0 and x < len(heights) and y >= 0 and y < len(heights[0]) and\n            heights[x][y] >= heights[r][c]):\n            dfs(heights, can_reach, x, y)\n\n# \u4e3b\u51fd\u5f0f\u3002\ndef pacificAtlantic(heights: List[List[int]]) -> List[List[int]]:\n    m, n = len(heights), len(heights[0])\n    can_reach_p = [[False for _ in range(n)] for _ in range(m)]\n    can_reach_a = [[False for _ in range(n)] for _ in range(m)]\n    for i in range(m):\n        dfs(heights, can_reach_p, i, 0)\n        dfs(heights, can_reach_a, i, n - 1)\n    for j in range(n):\n        dfs(heights, can_reach_p, 0, j)\n        dfs(heights, can_reach_a, m - 1, j)\n    return [\n            [i, j] for i in range(m) for j in range(n)\n            if can_reach_p[i][j] and can_reach_a[i][j]\n        ]\n"})})})]})]})}function o(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(h,{...n})}):h(n)}function x(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);