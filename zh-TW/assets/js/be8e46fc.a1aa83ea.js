"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[9090],{528:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"searching-algorithms/5-3-backtracking","title":"5.3 \u56de\u6eaf\u6cd5","description":"\u56de\u6eaf\u6cd5\uff08backtracking\uff09\u662f\u4f18\u5148\u641c\u7d22\u7684\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u53c8\u79f0\u4e3a\u8bd5\u63a2\u6cd5\uff0c\u5e38\u7528\u4e8e\u9700\u8981\u8bb0\u5f55\u8282\u70b9\u72b6\u6001\u7684\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u6392\u5217\u3001\u7ec4\u5408\u3001\u9009\u62e9\u7c7b\u95ee\u9898\u4f7f\u7528\u56de\u6eaf\u6cd5\u6bd4\u8f83\u65b9\u4fbf\u3002","source":"@site/docs/5-searching-algorithms/5-3-backtracking.mdx","sourceDirName":"5-searching-algorithms","slug":"/searching-algorithms/5-3-backtracking","permalink":"/leetcode_101/zh-TW/searching-algorithms/5-3-backtracking","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/5-searching-algorithms/5-3-backtracking.mdx","tags":[],"version":"current","sidebarPosition":23,"frontMatter":{"sidebar_position":23},"sidebar":"tutorialSidebar","previous":{"title":"5.2 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22","permalink":"/leetcode_101/zh-TW/searching-algorithms/5-2-depth-first-search"},"next":{"title":"5.4 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","permalink":"/leetcode_101/zh-TW/searching-algorithms/5-4-breadth-first-search"}}');var o=e(4848),t=e(8453);const s={sidebar_position:23},a="5.3 \u56de\u6eaf\u6cd5",c={},l=[{value:"46. Permutations",id:"46-permutations",level:2},{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:3},{value:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",level:3},{value:"\u9898\u89e3",id:"\u9898\u89e3",level:3},{value:"77. Combinations",id:"77-combinations",level:2},{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0-1",level:3},{value:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b-1",level:3},{value:"\u9898\u89e3",id:"\u9898\u89e3-1",level:3},{value:"79. Word Search",id:"79-word-search",level:2},{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0-2",level:3},{value:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b-2",level:3},{value:"\u9898\u89e3",id:"\u9898\u89e3-2",level:3},{value:"51. N-Queens",id:"51-n-queens",level:2},{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0-3",level:3},{value:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b-3",level:3},{value:"\u9898\u89e3",id:"\u9898\u89e3-3",level:3}];function d(n){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,t.R)(),...n.components},{TabItem:r,Tabs:s}=i;return r||p("TabItem",!0),s||p("Tabs",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"53-\u56de\u6eaf\u6cd5",children:"5.3 \u56de\u6eaf\u6cd5"})}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"\u56de\u6eaf\u6cd5"}),"\uff08backtracking\uff09\u662f\u4f18\u5148\u641c\u7d22\u7684\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u53c8\u79f0\u4e3a\u8bd5\u63a2\u6cd5\uff0c\u5e38\u7528\u4e8e\u9700\u8981\u8bb0\u5f55\u8282\u70b9\u72b6\u6001\u7684\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u6392\u5217\u3001\u7ec4\u5408\u3001\u9009\u62e9\u7c7b\u95ee\u9898\u4f7f\u7528\u56de\u6eaf\u6cd5\u6bd4\u8f83\u65b9\u4fbf\u3002"]}),"\n",(0,o.jsxs)(i.p,{children:["\u987e\u540d\u601d\u4e49\uff0c\u56de\u6eaf\u6cd5\u7684\u6838\u5fc3\u662f\u56de\u6eaf\u3002\u5728\u641c\u7d22\u5230\u67d0\u4e00\u8282\u70b9\u7684\u65f6\u5019\uff0c\u5982\u679c\u6211\u4eec\u53d1\u73b0\u76ee\u524d\u7684\u8282\u70b9\uff08\u53ca\u5176\u5b50\u8282\u70b9\uff09\u5e76\u4e0d\u662f\u9700\u6c42\u76ee\u6807\u65f6\uff0c\u6211\u4eec\u56de\u9000\u5230\u539f\u6765\u7684\u8282\u70b9\u7ee7\u7eed\u641c\u7d22\uff0c\u5e76\u4e14",(0,o.jsx)(i.code,{children:"\u628a\u5728\u76ee\u524d\u8282\u70b9\u4fee\u6539\u7684\u72b6\u6001\u8fd8\u539f"}),"\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u59cb\u7ec8\u53ea\u5bf9\u56fe\u7684\u603b\u72b6\u6001\u8fdb\u884c\u4fee\u6539\uff0c\u800c\u975e\u6bcf\u6b21\u904d\u5386\u65f6\u65b0\u5efa\u4e00\u4e2a\u56fe\u6765\u50a8\u5b58\u72b6\u6001\u3002\u5728\u5177\u4f53\u7684\u5199\u6cd5\u4e0a\uff0c\u5b83\u4e0e\u666e\u901a\u7684\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u4e00\u6837\uff0c\u90fd\u6709 [\u4fee\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001]\u2192[\u9012\u5f52\u5b50\u8282\u70b9] \u7684\u6b65\u9aa4\uff0c\u53ea\u662f\u591a\u4e86\u56de\u6eaf\u7684\u6b65\u9aa4\uff0c\u53d8\u6210\u4e86 [\u4fee\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001]\u2192[\u9012\u5f52\u5b50\u8282\u70b9]\u2192[\u56de\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001]\u3002"]}),"\n",(0,o.jsxs)(i.p,{children:["\u6ca1\u6709\u63a5\u89e6\u8fc7\u56de\u6eaf\u6cd5\u7684\u8bfb\u8005\u53ef\u80fd\u4f1a\u4e0d\u660e\u767d\u6211\u5728\u8bb2\u4ec0\u4e48\uff0c\u8fd9\u4e5f\u5b8c\u5168\u6b63\u5e38\uff0c\u5e0c\u671b\u4ee5\u4e0b\u51e0\u9053\u9898\u53ef\u4ee5\u8ba9\u60a8\u7406\u89e3\u56de\u6eaf\u6cd5\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u660e\u767d\uff0c\u53ef\u4ee5\u8bb0\u4f4f\u4e24\u4e2a\u5c0f\u8bc0\u7a8d\uff0c",(0,o.jsx)(i.code,{children:"\u4e00\u662f\u6309\u5f15\u7528\u4f20\u72b6\u6001\uff0c\u4e8c\u662f\u6240\u6709\u7684\u72b6\u6001\u4fee\u6539\u5728\u9012\u5f52\u5b8c\u6210\u540e\u56de\u6539"}),"\u3002"]}),"\n",(0,o.jsx)(i.p,{children:"\u56de\u6eaf\u6cd5\u4fee\u6539\u4e00\u822c\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u4fee\u6539\u6700\u540e\u4e00\u4f4d\u8f93\u51fa\uff0c\u6bd4\u5982\u6392\u5217\u7ec4\u5408\uff1b\u4e00\u79cd\u662f\u4fee\u6539\u8bbf\u95ee\u6807\u8bb0\uff0c\u6bd4\u5982\u77e9\u9635\u91cc\u641c\u5b57\u7b26\u4e32\u3002"}),"\n",(0,o.jsx)(i.h2,{id:"46-permutations",children:(0,o.jsx)(i.a,{href:"https://leetcode.com/problems/permutations/",children:"46. Permutations"})}),"\n",(0,o.jsx)(i.h3,{id:"\u9898\u76ee\u63cf\u8ff0",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,o.jsx)(i.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u91cd\u590d\u6570\u5b57\u7684\u6574\u6570\u6570\u7ec4\uff0c\u6c42\u5176\u6240\u6709\u7684\u6392\u5217\u65b9\u5f0f\u3002"}),"\n",(0,o.jsx)(i.h3,{id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b",children:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b"}),"\n",(0,o.jsx)(i.p,{children:"\u8f93\u5165\u662f\u4e00\u4e2a\u4e00\u7ef4\u6574\u6570\u6570\u7ec4\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u8868\u793a\u8f93\u5165\u6570\u7ec4\u7684\u6240\u6709\u6392\u5217\u65b9\u5f0f\u3002"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"Input: [1,2,3]\nOutput: [[1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,2,1], [3,1,2]]\n"})}),"\n",(0,o.jsx)(i.p,{children:"\u53ef\u4ee5\u4ee5\u4efb\u610f\u987a\u5e8f\u8f93\u51fa\uff0c\u53ea\u8981\u5305\u542b\u4e86\u6240\u6709\u6392\u5217\u65b9\u5f0f\u5373\u53ef\u3002"}),"\n",(0,o.jsx)(i.h3,{id:"\u9898\u89e3",children:"\u9898\u89e3"}),"\n",(0,o.jsx)(i.p,{children:"\u600e\u6837\u8f93\u51fa\u6240\u6709\u7684\u6392\u5217\u65b9\u5f0f\u5462\uff1f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5f53\u524d\u4f4d\u7f6e i\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u4e8e\u4e4b\u540e\u7684\u4efb\u610f\u4f4d\u7f6e\u4ea4\u6362\uff0c\u7136\u540e\u7ee7\u7eed\u5904\u7406\u4f4d\u7f6e i+1\uff0c\u76f4\u5230\u5904\u7406\u5230\u6700\u540e\u4e00\u4f4d\u3002\u4e3a\u4e86\u9632\u6b62\u6211\u4eec\u6bcf\u6b64\u904d\u5386\u65f6\u90fd\u8981\u65b0\u5efa\u4e00\u4e2a\u5b50\u6570\u7ec4\u50a8\u5b58\u4f4d\u7f6e i \u4e4b\u524d\u5df2\u7ecf\u4ea4\u6362\u597d\u7684\u6570\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u56de\u6eaf\u6cd5\uff0c\u53ea\u5bf9\u539f\u6570\u7ec4\u8fdb\u884c\u4fee\u6539\uff0c\u5728\u9012\u5f52\u5b8c\u6210\u540e\u518d\u4fee\u6539\u56de\u6765\u3002"}),"\n",(0,o.jsx)(i.p,{children:"\u6211\u4eec\u4ee5\u6837\u4f8b [1,2,3] \u4e3a\u4f8b\uff0c\u6309\u7167\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u8f93\u51fa\u7684\u6570\u7ec4\u987a\u5e8f\u4e3a [[1,2,3], [1,3,2], [2,1,3], [2,3,1],[3,2,1], [3,1,2]]\uff0c\u53ef\u4ee5\u770b\u5230\u6240\u6709\u7684\u6392\u5217\u5728\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\u90fd\u88ab\u8003\u8651\u5230\u4e86\u3002"}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(r,{value:"cpp",label:"C++",children:(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-cpp",children:"// \u8f85\u51fd\u6570\u3002\nvoid backtracking(vector<int> &nums, int level,\n                  vector<vector<int>> &permutations) {\n    if (level == nums.size() - 1) {\n        permutations.push_back(nums);\n        return;\n    }\n    for (int i = level; i < nums.size(); ++i) {\n        swap(nums[i], nums[level]);  // \u4fee\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n        backtracking(nums, level + 1, permutations);  // \u9012\u5f52\u5b50\u8282\u70b9\n        swap(nums[i], nums[level]);  // \u56de\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n    }\n}\n// \u4e3b\u51fd\u6570\u3002\nvector<vector<int>> permute(vector<int> &nums) {\n    vector<vector<int>> permutations;\n    backtracking(nums, 0, permutations);\n    return permutations;\n}\n"})})}),(0,o.jsx)(r,{value:"py",label:"Python",children:(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-py",children:"# \u8f85\u51fd\u6570\u3002\ndef backtracking(nums: List[int], level: int, permutations: List[List[int]]):\n    if level == len(nums) - 1:\n        permutations.append(nums[:]) # int\u4e3a\u57fa\u672c\u7c7b\u578b\uff0c\u53ef\u4ee5\u6d45\u62f7\u8d1d\n        return\n    for i in range(level, len(nums)):\n        nums[i], nums[level] = nums[level], nums[i] # \u4fee\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n        backtracking(nums, level + 1, permutations) # \u9012\u5f52\u5b50\u8282\u70b9\n        nums[i], nums[level] = nums[level], nums[i] # \u56de\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n\n# \u4e3b\u51fd\u6570\u3002\ndef permute(nums: List[int]) -> List[List[int]]:\n    permutations = []\n    backtracking(nums, 0, permutations)\n    return permutations\n"})})})]}),"\n",(0,o.jsx)(i.h2,{id:"77-combinations",children:(0,o.jsx)(i.a,{href:"https://leetcode.com/problems/combinations/",children:"77. Combinations"})}),"\n",(0,o.jsx)(i.h3,{id:"\u9898\u76ee\u63cf\u8ff0-1",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,o.jsx)(i.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n \u548c\u4e00\u4e2a\u6574\u6570 k\uff0c\u6c42\u5728 1 \u5230 n \u4e2d\u9009\u53d6 k \u4e2a\u6570\u5b57\u7684\u6240\u6709\u7ec4\u5408\u65b9\u6cd5\u3002"}),"\n",(0,o.jsx)(i.h3,{id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b-1",children:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b"}),"\n",(0,o.jsx)(i.p,{children:"\u8f93\u5165\u662f\u4e24\u4e2a\u6b63\u6574\u6570 n \u548c k\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u8868\u793a\u6240\u6709\u7ec4\u5408\u65b9\u5f0f\u3002"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"Input: n = 4, k = 2\nOutput: [[2,4], [3,4], [2,3], [1,2], [1,3], [1,4]]\n"})}),"\n",(0,o.jsx)(i.p,{children:"\u8fd9\u91cc\u4e8c\u7ef4\u6570\u7ec4\u7684\u6bcf\u4e2a\u7ef4\u5ea6\u90fd\u53ef\u4ee5\u4ee5\u4efb\u610f\u987a\u5e8f\u8f93\u51fa\u3002"}),"\n",(0,o.jsx)(i.h3,{id:"\u9898\u89e3-1",children:"\u9898\u89e3"}),"\n",(0,o.jsx)(i.p,{children:"\u7c7b\u4f3c\u4e8e\u6392\u5217\u95ee\u9898\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fdb\u884c\u56de\u6eaf\u3002\u6392\u5217\u56de\u6eaf\u7684\u662f\u4ea4\u6362\u7684\u4f4d\u7f6e\uff0c\u800c\u7ec4\u5408\u56de\u6eaf\u7684\u662f\u662f\u5426\u628a\u5f53\u524d\u7684\u6570\u5b57\u52a0\u5165\u7ed3\u679c\u4e2d\u3002"}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(r,{value:"cpp",label:"C++",children:(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-cpp",children:"// \u8f85\u51fd\u6570\u3002\nvoid backtracking(vector<vector<int>>& combinations, vector<int>& pick, int pos,\n                  int n, int k) {\n    if (pick.size() == k) {\n        combinations.push_back(pick);\n        return;\n    }\n    for (int i = pos; i <= n; ++i) {\n        pick.push_back(i);  // \u4fee\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n        backtracking(combinations, pick, i + 1, n, k);  // \u9012\u5f52\u5b50\u8282\u70b9\n        pick.pop_back();  // \u56de\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n    }\n}\n\n// \u4e3b\u51fd\u6570\u3002\nvector<vector<int>> combine(int n, int k) {\n    vector<vector<int>> combinations;\n    vector<int> pick;\n    backtracking(combinations, pick, 1, n, k);\n    return combinations;\n}\n"})})}),(0,o.jsx)(r,{value:"py",label:"Python",children:(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-py",children:"# \u8f85\u51fd\u6570\u3002\ndef backtracking(\n    combinations: List[List[int]], pick: List[int], pos: int, n: int, k: int\n):\n    if len(pick) == k:\n        combinations.append(pick[:]) # int\u4e3a\u57fa\u672c\u7c7b\u578b\uff0c\u53ef\u4ee5\u6d45\u62f7\u8d1d\n        return\n    for i in range(pos, n + 1):\n        pick.append(i) # \u4fee\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n        backtracking(combinations, pick, i + 1, n, k) # \u9012\u5f52\u5b50\u8282\u70b9\n        pick.pop() # \u56de\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n\n# \u4e3b\u51fd\u6570\u3002\ndef combine(n: int, k: int) -> List[List[int]]:\n    combinations = []\n    pick = []\n    backtracking(combinations, pick, 1, n, k)\n    return combinations\n"})})})]}),"\n",(0,o.jsx)(i.h2,{id:"79-word-search",children:(0,o.jsx)(i.a,{href:"https://leetcode.com/problems/word-search/",children:"79. Word Search"})}),"\n",(0,o.jsx)(i.h3,{id:"\u9898\u76ee\u63cf\u8ff0-2",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,o.jsx)(i.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u6bcd\u77e9\u9635\uff0c\u6240\u6709\u7684\u5b57\u6bcd\u90fd\u4e0e\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u4e0a\u7684\u5b57\u6bcd\u76f8\u8fde\u3002\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u5b57\u7b26\u4e32\u80fd\u4e0d\u80fd\u5728\u5b57\u6bcd\u77e9\u9635\u4e2d\u5bfb\u627e\u5230\u3002"}),"\n",(0,o.jsx)(i.h3,{id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b-2",children:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b"}),"\n",(0,o.jsx)(i.p,{children:"\u8f93\u5165\u662f\u4e00\u4e2a\u4e8c\u7ef4\u5b57\u7b26\u6570\u7ec4\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8868\u793a\u5b57\u7b26\u4e32\u662f\u5426\u53ef\u4ee5\u88ab\u5bfb\u627e\u5230\u3002"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:'Input: word = "ABCCED", board =\n[[\u2019A\u2019,\u2019B\u2019,\u2019C\u2019,\u2019E\u2019],\n [\u2019S\u2019,\u2019F\u2019,\u2019C\u2019,\u2019S\u2019],\n [\u2019A\u2019,\u2019D\u2019,\u2019E\u2019,\u2019E\u2019]]\nOutput: true\n'})}),"\n",(0,o.jsx)(i.p,{children:'\u4ece\u5de6\u4e0a\u89d2\u7684\u2019A\u2019 \u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5411\u53f3\u3001\u518d\u5411\u4e0b\u3001\u6700\u540e\u5411\u5de6\uff0c\u627e\u5230\u8fde\u7eed\u7684"ABCCED"\u3002'}),"\n",(0,o.jsx)(i.h3,{id:"\u9898\u89e3-2",children:"\u9898\u89e3"}),"\n",(0,o.jsx)(i.p,{children:"\u4e0d\u540c\u4e8e\u6392\u5217\u7ec4\u5408\u95ee\u9898\uff0c\u672c\u9898\u91c7\u7528\u7684\u5e76\u4e0d\u662f\u4fee\u6539\u8f93\u51fa\u65b9\u5f0f\uff0c\u800c\u662f\u4fee\u6539\u8bbf\u95ee\u6807\u8bb0\u3002\u5728\u6211\u4eec\u5bf9\u4efb\u610f\u4f4d\u7f6e\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u65f6\uff0c\u6211\u4eec\u5148\u6807\u8bb0\u5f53\u524d\u4f4d\u7f6e\u4e3a\u5df2\u8bbf\u95ee\uff0c\u4ee5\u907f\u514d\u91cd\u590d\u904d\u5386\uff08\u5982\u9632\u6b62\u5411\u53f3\u641c\u7d22\u540e\u53c8\u5411\u5de6\u8fd4\u56de\uff09\uff1b\u5728\u6240\u6709\u7684\u53ef\u80fd\u90fd\u641c\u7d22\u5b8c\u6210\u540e\uff0c\u518d\u56de\u6539\u5f53\u524d\u4f4d\u7f6e\u4e3a\u672a\u8bbf\u95ee\uff0c\u9632\u6b62\u5e72\u6270\u5176\u5b83\u4f4d\u7f6e\u641c\u7d22\u5230\u5f53\u524d\u4f4d\u7f6e\u3002\u4f7f\u7528\u56de\u6eaf\u6cd5\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u5bf9\u4e00\u4e2a\u4e8c\u7ef4\u7684\u8bbf\u95ee\u77e9\u9635\u8fdb\u884c\u4fee\u6539\uff0c\u800c\u4e0d\u7528\u628a\u6bcf\u6b21\u7684\u641c\u7d22\u72b6\u6001\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u5bf9\u8c61\u4f20\u5165\u9012\u5f52\u51fd\u6570\u4e2d\u3002"}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(r,{value:"cpp",label:"C++",children:(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-cpp",children:"// \u8f85\u51fd\u6570\u3002\nbool backtracking(vector<vector<char>>& board, string& word,\n                  vector<vector<bool>>& visited, int i, int j, int word_pos) {\n    if (i < 0 || i >= board.size() || j < 0 || j >= board[0].size() ||\n        visited[i][j] || board[i][j] != word[word_pos]) {\n        return false;\n    }\n    if (word_pos == word.size() - 1) {\n        return true;\n    }\n    visited[i][j] = true;  // \u4fee\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n    if (backtracking(board, word, visited, i + 1, j, word_pos + 1) ||\n        backtracking(board, word, visited, i - 1, j, word_pos + 1) ||\n        backtracking(board, word, visited, i, j + 1, word_pos + 1) ||\n        backtracking(board, word, visited, i, j - 1, word_pos + 1)) {\n        return true;  // \u9012\u5f52\u5b50\u8282\u70b9\n    }\n    visited[i][j] = false;  // \u56de\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n    return false;\n}\n\n// \u4e3b\u51fd\u6570\u3002\nbool exist(vector<vector<char>>& board, string word) {\n    int m = board.size(), n = board[0].size();\n    vector<vector<bool>> visited(m, vector<bool>(n, false));\n    for (int i = 0; i < m; ++i) {\n        for (int j = 0; j < n; ++j) {\n            if (backtracking(board, word, visited, i, j, 0)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n"})})}),(0,o.jsx)(r,{value:"py",label:"Python",children:(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-py",children:"# \u8f85\u51fd\u6570\u3002\ndef backtracking(board: List[List[str]], word: str,\n                visited: List[List[bool]], i: int, j: int, word_pos: int):\n    if (i < 0 or i >= len(board) or j < 0 or j >= len(board[0])\n        or visited[i][j] or board[i][j] != word[word_pos]):\n        return False\n    if word_pos == len(word) - 1:\n        return True\n    visited[i][j] = True # \u4fee\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n    if (backtracking(board, word, visited, i + 1, j, word_pos + 1) or\n        backtracking(board, word, visited, i - 1, j, word_pos + 1) or\n        backtracking(board, word, visited, i, j + 1, word_pos + 1) or\n        backtracking(board, word, visited, i, j - 1, word_pos + 1)):\n        return True # \u9012\u5f52\u5b50\u8282\u70b9\n    visited[i][j] = False # \u56de\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\n    return False\n\n# \u4e3b\u51fd\u6570\u3002\ndef exist(board: List[List[str]], word: str) -> bool:\n    m, n = len(board), len(board[0])\n    visited = [[False for _ in range(n)] for _ in range(m)]\n    return any([\n        backtracking(board, word, visited, i, j, 0)\n        for i in range(m) for j in range(n)\n     ])\n"})})})]}),"\n",(0,o.jsx)(i.h2,{id:"51-n-queens",children:(0,o.jsx)(i.a,{href:"https://leetcode.com/problems/n-queens/",children:"51. N-Queens"})}),"\n",(0,o.jsx)(i.h3,{id:"\u9898\u76ee\u63cf\u8ff0-3",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,o.jsx)(i.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a n \u7684\u6b63\u65b9\u5f62\u56fd\u9645\u8c61\u68cb\u68cb\u76d8\uff0c\u6c42\u6709\u591a\u5c11\u79cd\u65b9\u5f0f\u53ef\u4ee5\u653e\u7f6e n \u4e2a\u7687\u540e\u5e76\u4f7f\u5f97\u5979\u4eec\u4e92\u4e0d\u653b\u51fb\uff0c\u5373\u6bcf\u4e00\u884c\u3001\u5217\u3001\u5de6\u659c\u3001\u53f3\u659c\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u7687\u540e\u3002"}),"\n",(0,o.jsx)("figure",{children:(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.img,{src:e(2385).A+"",width:"258",height:"257"}),"\n",(0,o.jsx)("figcaption",{children:"\u9898\u76ee 51 - \u516b\u7687\u540e\u7684\u4e00\u79cd\u89e3\u6cd5"})]})}),"\n",(0,o.jsx)(i.h3,{id:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b-3",children:"\u8f93\u5165\u8f93\u51fa\u6837\u4f8b"}),"\n",(0,o.jsx)(i.p,{children:"\u8f93\u5165\u662f\u4e00\u4e2a\u6574\u6570 n\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u4e8c\u7ef4\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u8868\u793a\u6240\u6709\u7684\u68cb\u76d8\u8868\u793a\u65b9\u6cd5\u3002"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:'Input: 4\nOutput: [\n [".Q..", // Solution 1\n  "...Q",\n  "Q...",\n  "..Q."],\n ["..Q.", // Solution 2\n  "Q...",\n  "...Q",\n  ".Q.."]\n]\n'})}),"\n",(0,o.jsx)(i.p,{children:"\u5728\u8fd9\u4e2a\u6837\u4f8b\u4e2d\uff0c\u70b9\u4ee3\u8868\u7a7a\u767d\u4f4d\u7f6e\uff0cQ \u4ee3\u8868\u7687\u540e\u3002"}),"\n",(0,o.jsx)(i.h3,{id:"\u9898\u89e3-3",children:"\u9898\u89e3"}),"\n",(0,o.jsx)(i.p,{children:"\u7c7b\u4f3c\u4e8e\u5728\u77e9\u9635\u4e2d\u5bfb\u627e\u5b57\u7b26\u4e32\uff0c\u672c\u9898\u4e5f\u662f\u901a\u8fc7\u4fee\u6539\u72b6\u6001\u77e9\u9635\u6765\u8fdb\u884c\u56de\u6eaf\u3002\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e00\u884c\u3001\u5217\u3001\u5de6\u659c\u3001\u53f3\u659c\u5efa\u7acb\u8bbf\u95ee\u6570\u7ec4\uff0c\u6765\u8bb0\u5f55\u5b83\u4eec\u662f\u5426\u5b58\u5728\u7687\u540e\u3002\u8fd9\u91cc\u5982\u679c\u6211\u4eec\u901a\u8fc7\u5bf9\u6bcf\u4e00\u884c/\u5217\u904d\u5386\u6765\u63d2\u5165\u7687\u540e\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u5bf9\u884c/\u5217\u5efa\u7acb\u8bbf\u95ee\u6570\u7ec4\u4e86\u3002"}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(r,{value:"cpp",label:"C++",children:(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-cpp",children:"// \u8f85\u51fd\u6570\u3002\nvoid backtracking(vector<vector<string>> &solutions, vector<string> &board,\n                  vector<bool> &column, vector<bool> &ldiag,\n                  vector<bool> &rdiag, int row) {\n    int n = board.size();\n    if (row == n) {\n        solutions.push_back(board);\n        return;\n    }\n    for (int i = 0; i < n; ++i) {\n        if (column[i] || ldiag[n - row + i - 1] || rdiag[row + i]) {\n            continue;\n        }\n        // \u4fee\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\u3002\n        board[row][i] = \u2019Q\u2019;\n        column[i] = ldiag[n - row + i - 1] = rdiag[row + i] = true;\n        // \u9012\u5f52\u5b50\u8282\u70b9\u3002\n        backtracking(solutions, board, column, ldiag, rdiag, row + 1);\n        // \u56de\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\u3002\n        board[row][i] = \u2019.\u2019;\n        column[i] = ldiag[n - row + i - 1] = rdiag[row + i] = false;\n    }\n}\n\n// \u4e3b\u51fd\u6570\u3002\nvector<vector<string>> solveNQueens(int n) {\n    vector<vector<string>> solutions;\n    vector<string> board(n, string(n, \u2019.\u2019));\n    vector<bool> column(n, false);\n    vector<bool> ldiag(2 * n - 1, false);\n    vector<bool> rdiag(2 * n - 1, false);\n    backtracking(solutions, board, column, ldiag, rdiag, 0);\n    return solutions;\n}\n"})})}),(0,o.jsx)(r,{value:"py",label:"Python",children:(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-py",children:'# \u8f85\u51fd\u6570\u3002\ndef backtracking(solutions: List[List[str]], board: List[List[str]],\n    column: List[bool], ldiag: List[bool], rdiag: List[bool], row: int):\n    n = len(board)\n    if row == n:\n        solutions.append(["".join(row) for row in board])\n        return\n    for i in range(n):\n        if column[i] or ldiag[n - row + i - 1] or rdiag[row + i]:\n            continue\n        # \u4fee\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\u3002\n        board[row][i] = "Q"\n        column[i] = ldiag[n - row + i - 1] = rdiag[row + i] = True\n        # \u9012\u5f52\u5b50\u8282\u70b9\u3002\n        backtracking(solutions, board, column, ldiag, rdiag, row + 1)\n        # \u56de\u6539\u5f53\u524d\u8282\u70b9\u72b6\u6001\u3002\n        board[row][i] = "."\n        column[i] = ldiag[n - row + i - 1] = rdiag[row + i] = False\n\n# \u4e3b\u51fd\u6570\u3002\ndef solveNQueens(n: int) -> List[List[str]]:\n    solutions = []\n    board = [["." for _ in range(n)] for _ in range(n)]\n    column = [False] * n\n    ldiag = [False] * (2 * n - 1)\n    rdiag = [False] * (2 * n - 1)\n    backtracking(solutions, board, column, ldiag, rdiag, 0)\n    return solutions\n'})})})]})]})}function u(n={}){const{wrapper:i}={...(0,t.R)(),...n.components};return i?(0,o.jsx)(i,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}function p(n,i){throw new Error("Expected "+(i?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},2385:(n,i,e)=>{e.d(i,{A:()=>r});const r=e.p+"assets/images/n-queens-5b6b0dfc0fd28c9e2e34e6c625607a57.png"}}]);