"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[698],{4226:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"data-structures/10-10-prefix-sum-integral-image","title":"10.10 \u524d\u7f00\u548c\u4e0e\u79ef\u5206\u56fe","description":"\u4e00\u7ef4\u7684\u524d\u7f00\u548c\uff08cumulative sum, cumsum\uff09\uff0c\u4e8c\u7ef4\u7684\u79ef\u5206\u56fe\uff08summed-area table, image integral\uff09\u90fd\u662f\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7684\u4e00\u7ef4\u7ebf\u6bb5\u6216\u4e8c\u7ef4\u77e9\u5f62\u9884\u5148\u5b58\u50a8\uff0c\u65b9\u4fbf\u52a0\u901f\u8ba1\u7b97\u3002\u5982\u679c\u9700\u8981\u5bf9\u524d\u7f00\u548c\u6216\u79ef\u5206\u56fe\u7684\u503c\u505a\u5bfb\u5740\uff0c\u5219\u8981\u5b58\u5165\u54c8\u5e0c\u8868\uff1b\u5982\u679c\u8981\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u8bb0\u5f55\u524d\u7f00\u548c\u6216\u79ef\u5206\u56fe\u7684\u503c\uff0c\u5219\u53ef\u4ee5\u50a8\u5b58\u5230\u4e00\u7ef4\u6216\u4e8c\u7ef4\u6570\u7ec4\u91cc\uff0c\u4e5f\u5e38\u5e38\u4f34\u968f\u7740\u52a8\u6001\u89c4\u5212\u3002","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/10-data-structures/10-10-prefix-sum-integral-image.mdx","sourceDirName":"10-data-structures","slug":"/data-structures/10-10-prefix-sum-integral-image","permalink":"/leetcode_101/zh-TW/data-structures/10-10-prefix-sum-integral-image","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/10-data-structures/10-10-prefix-sum-integral-image.mdx","tags":[],"version":"current","sidebarPosition":57,"frontMatter":{"sidebar_position":57},"sidebar":"tutorialSidebar","previous":{"title":"10.9 \u591a\u91cd\u96c6\u5408\u548c\u6620\u5c04","permalink":"/leetcode_101/zh-TW/data-structures/10-9-multisets-and-maps"},"next":{"title":"10.11 \u7df4\u7fd2","permalink":"/leetcode_101/zh-TW/data-structures/10-11-exercises"}}');var i=s(4848),r=s(8453);const t={sidebar_position:57},l="10.10 \u524d\u7f00\u548c\u4e0e\u79ef\u5206\u56fe",c={},m=[{value:"303. Range Sum Query - Immutable",id:"303-range-sum-query---immutable",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3",level:3},{value:"304. Range Sum Query 2D - Immutable",id:"304-range-sum-query-2d---immutable",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0-1",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-1",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3-1",level:3},{value:"560. Subarray Sum Equals K",id:"560-subarray-sum-equals-k",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0-2",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-2",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3-2",level:3}];function u(e){const n={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",...(0,r.R)(),...e.components},{TabItem:a,Tabs:t}=n;return a||h("TabItem",!0),t||h("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"1010-\u524d\u7f00\u548c\u4e0e\u79ef\u5206\u56fe",children:"10.10 \u524d\u7f00\u548c\u4e0e\u79ef\u5206\u56fe"})}),"\n",(0,i.jsx)(n.p,{children:"\u4e00\u7ef4\u7684\u524d\u7f00\u548c\uff08cumulative sum, cumsum\uff09\uff0c\u4e8c\u7ef4\u7684\u79ef\u5206\u56fe\uff08summed-area table, image integral\uff09\u90fd\u662f\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7684\u4e00\u7ef4\u7ebf\u6bb5\u6216\u4e8c\u7ef4\u77e9\u5f62\u9884\u5148\u5b58\u50a8\uff0c\u65b9\u4fbf\u52a0\u901f\u8ba1\u7b97\u3002\u5982\u679c\u9700\u8981\u5bf9\u524d\u7f00\u548c\u6216\u79ef\u5206\u56fe\u7684\u503c\u505a\u5bfb\u5740\uff0c\u5219\u8981\u5b58\u5165\u54c8\u5e0c\u8868\uff1b\u5982\u679c\u8981\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u8bb0\u5f55\u524d\u7f00\u548c\u6216\u79ef\u5206\u56fe\u7684\u503c\uff0c\u5219\u53ef\u4ee5\u50a8\u5b58\u5230\u4e00\u7ef4\u6216\u4e8c\u7ef4\u6570\u7ec4\u91cc\uff0c\u4e5f\u5e38\u5e38\u4f34\u968f\u7740\u52a8\u6001\u89c4\u5212\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"303-range-sum-query---immutable",children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/range-sum-query-immutable/",children:"303. Range Sum Query - Immutable"})}),"\n",(0,i.jsx)(n.h3,{id:"\u984c\u76ee\u63cf\u8ff0",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,i.jsx)(n.p,{children:"\u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u4f7f\u5f97\u5176\u80fd\u591f\u5feb\u901f\u67e5\u8be2\u7ed9\u5b9a\u6570\u7ec4\u4e2d\uff0c\u4efb\u610f\u4e24\u4e2a\u4f4d\u7f6e\u95f4\u6240\u6709\u6570\u5b57\u7684\u548c\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,i.jsx)(n.p,{children:"\u4ee5\u4e0b\u662f\u6570\u636e\u7ed3\u6784\u7684\u8c03\u7528\u6837\u4f8b\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"vector<int> nums{-2,0,3,-5,2,-1};\nNumArray num_array = new NumArray(nums);\nnum_array.sumRange(0,2); // Result = -2+0+3 = 1.\nnum_array.sunRange(1,5); // Result = 0+3-5+2-1 = -1.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u984c\u89e3",children:"\u984c\u89e3"}),"\n",(0,i.jsx)(n.p,{children:"\u5bf9\u4e8e\u4e00\u7ef4\u7684\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u548c\u6765\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\u3002\u5148\u5efa\u7acb\u4e00\u4e2a\u4e0e\u6570\u7ec4 nums \u957f\u5ea6\u76f8\u540c\u7684\u65b0\u6570\u7ec4 cumsum\uff0c\u8868\u793a nums \u6bcf\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u524d\u6240\u6709\u6570\u5b57\u7684\u548c\u3002cumsum \u6570\u7ec4\u53ef\u4ee5\u901a\u8fc7 C++ \u81ea\u5e26\u7684 partial_sum \u51fd\u6570\u5efa\u7acb\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u904d\u5386\u4e00\u904d nums \u6570\u7ec4\uff0c\u5e76\u5229\u7528\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b cumsum[i] = cumsum[i-1] + nums[i] \u5b8c\u6210\u7edf\u8ba1\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u83b7\u5f97\u4f4d\u7f6e i \u548c j \u4e4b\u95f4\u7684\u6570\u5b57\u548c\uff0c\u53ea\u9700\u8ba1\u7b97 cum - sum[j+1] - cumsum[i] \u5373\u53ef\u3002"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(a,{value:"cpp",label:"C++",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"class NumArray {\n   public:\n    NumArray(vector<int> nums) : cumsum_(nums.size() + 1, 0) {\n        partial_sum(nums.begin(), nums.end(), cumsum_.begin() + 1);\n    }\n\n    int sumRange(int left, int right) {\n        return cumsum_[right + 1] - cumsum_[left];\n    }\n\n   private:\n    vector<int> cumsum_;\n};\n"})})}),(0,i.jsx)(a,{value:"py",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"class NumArray:\n    def __init__(self, nums: List[int]):\n        self.cumsum = [0] + nums[:]\n        for i in range(2, len(self.cumsum)):\n            self.cumsum[i] += self.cumsum[i - 1]\n\n    def sumRange(self, left: int, right: int) -> int:\n        return self.cumsum[right + 1] - self.cumsum[left]\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"304-range-sum-query-2d---immutable",children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/range-sum-query-2d-immutable/",children:"304. Range Sum Query 2D - Immutable"})}),"\n",(0,i.jsx)(n.h3,{id:"\u984c\u76ee\u63cf\u8ff0-1",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,i.jsx)(n.p,{children:"\u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u4f7f\u5f97\u5176\u80fd\u591f\u5feb\u901f\u67e5\u8be2\u7ed9\u5b9a\u77e9\u9635\u4e2d\uff0c\u4efb\u610f\u4e24\u4e2a\u4f4d\u7f6e\u5305\u56f4\u7684\u957f\u65b9\u5f62\u4e2d\u6240\u6709\u6570\u5b57\u7684\u548c\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-1",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,i.jsx)(n.p,{children:"\u4ee5\u4e0b\u662f\u6570\u636e\u7ed3\u6784\u7684\u8c03\u7528\u6837\u4f8b\u3002\u5176\u4e2d sumRegion \u51fd\u6570\u7684\u56db\u4e2a\u8f93\u5165\u5206\u522b\u662f\u7b2c\u4e00\u4e2a\u70b9\u7684\u6a2a\u3001\u7eb5\u5750\u6807\uff0c\u548c\u7b2c\u4e8c\u4e2a\u70b9\u7684\u6a2a\u3001\u7eb5\u5750\u6807\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"vector<int> matrix{{3,0,1,4,2},\n {5,6,3,2,1},\n {1,2,0,1,5},\n {4,1,0,1,7},\n {1,0,3,0,5}\n};\nNumMatrix num_matrix = new NumMatrix(matrix);\nnum_matrix.sumRegion(2,1,4,3); // Result = 8.\nnum_matrix.sumRegion(1,1,2,2); // Result = 11.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u984c\u89e3-1",children:"\u984c\u89e3"}),"\n",(0,i.jsx)(n.p,{children:"\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u79cd\u601d\u60f3\u62d3\u5c55\u5230\u4e8c\u7ef4\uff0c\u5373\u79ef\u5206\u56fe\uff08summed-area table, image integral\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5efa\u7acb\u4e00\u4e2a sat \u77e9\u9635\uff0csat[i][j] \u8868\u793a\u4ee5\u4f4d\u7f6e (0, 0) \u4e3a\u5de6\u4e0a\u89d2\u3001\u4f4d\u7f6e (i-1, j-1) \u4e3a\u53f3\u4e0b\u89d2\u7684\u957f\u65b9\u5f62\u4e2d\u6240\u6709\u6570\u5b57\u7684\u548c\u3002"}),"\n",(0,i.jsxs)("figure",{children:[(0,i.jsx)("span",{style:{display:"block",width:"60%",margin:"0 auto"},children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(873).A+"",width:"823",height:"423"})})}),(0,i.jsx)("figcaption",{style:{textAlign:"center"},children:"\u56fe 10.4: \u9898\u76ee 304 - \u56fe 1 - \u5de6\u8fb9\u4e3a\u7ed9\u5b9a\u77e9\u9635\uff0c\u53f3\u8fb9\u4e3a\u79ef\u5206\u56fe\u7ed3\u679c\uff0c\u53f3\u4e0b\u89d2\u4f4d\u7f6e\u7684\u79ef\u5206\u56fe\u503c\u4e3a 5+48+45\u2212 40 =58"})]}),"\n",(0,i.jsxs)("figure",{children:[(0,i.jsx)("span",{style:{display:"block",width:"60%",margin:"0 auto"},children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(4624).A+"",width:"834",height:"424"})})}),(0,i.jsx)("figcaption",{style:{textAlign:"center"},children:"\u56fe 10.5: \u9898\u76ee 304 - \u56fe 2 - \u5de6\u8fb9\u4e3a\u7ed9\u5b9a\u77e9\u9635\uff0c\u53f3\u8fb9\u4e3a\u79ef\u5206\u56fe\u7ed3\u679c\uff0c\u957f\u65b9\u5f62 E \u7684\u6570\u5b57\u548c\u7b49\u4e8e 58 \u2212 11 \u2212 13 +3 =37"})]}),"\n",(0,i.jsx)(n.p,{children:"\u5982\u56fe 1 \u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\u6765\u8ba1\u7b97 sat \u77e9\u9635\uff1asat[i][j] = matrix[i-1][j-1] + sat[i-1][j] + sat[i][j-1] - sat[i-1][j-1]\uff0c\u5373\u5f53\u524d\u5750\u6807\u7684\u6570\u5b57 + \u4e0a\u9762\u957f\u65b9\u5f62\u7684\u6570\u5b57\u548c + \u5de6\u8fb9\u957f\u65b9\u5f62\u7684\u6570\u5b57\u548c - \u4e0a\u9762\u957f\u65b9\u5f62\u548c\u5de6\u8fb9\u957f\u65b9\u5f62\u91cd\u5408\u9762\u79ef\uff08\u5373\u5de6\u4e0a\u4e00\u683c\u7684\u957f\u65b9\u5f62\uff09\u4e2d\u7684\u6570\u5b57\u548c\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u5982\u56fe 2 \u6240\u793a\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u67e5\u8be2\u957f\u65b9\u5f62 E \u7684\u6570\u5b57\u548c\uff0c\u56e0\u4e3a E = D \u2212 B \u2212 C + A\uff0c\u6211\u4eec\u53d1\u73b0 E \u5176\u5b9e\u53ef\u4ee5\u7531\u56db\u4e2a\u4f4d\u7f6e\u7684\u79ef\u5206\u56fe\u7ed3\u679c\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\u5f97\u5230\u3002\u56e0\u6b64\u8fd9\u4e2a\u7b97\u6cd5\u5728\u9884\u5904\u7406\u65f6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a ",(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsxs)(n.mrow,{children:[(0,i.jsx)(n.mi,{children:"O"}),(0,i.jsx)(n.mo,{stretchy:"false",children:"("}),(0,i.jsx)(n.mi,{children:"m"}),(0,i.jsx)(n.mi,{children:"n"}),(0,i.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(mn)"})]})})}),(0,i.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(n.span,{className:"mopen",children:"("}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"mn"}),(0,i.jsx)(n.span,{className:"mclose",children:")"})]})})]}),"\uff0c\u800c\u5728\u67e5\u8be2\u65f6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ec5\u4e3a ",(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsxs)(n.mrow,{children:[(0,i.jsx)(n.mi,{children:"O"}),(0,i.jsx)(n.mo,{stretchy:"false",children:"("}),(0,i.jsx)(n.mn,{children:"1"}),(0,i.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,i.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(n.span,{className:"mopen",children:"("}),(0,i.jsx)(n.span,{className:"mord",children:"1"}),(0,i.jsx)(n.span,{className:"mclose",children:")"})]})})]}),"\u3002"]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(a,{value:"cpp",label:"C++",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"class NumMatrix {\n   public:\n    NumMatrix(vector<vector<int>> matrix) {\n        int m = matrix.size(), n = matrix[0].size();\n        sat_ = vector<vector<int>>(m + 1, vector<int>(n + 1, 0));\n        for (int i = 1; i <= m; ++i) {\n            for (int j = 1; j <= n; ++j) {\n                sat_[i][j] = matrix[i - 1][j - 1] + sat_[i - 1][j] +\n                             sat_[i][j - 1] - sat_[i - 1][j - 1];\n            }\n        }\n    }\n\n    int sumRegion(int row1, int col1, int row2, int col2) {\n        return sat_[row2 + 1][col2 + 1] - sat_[row2 + 1][col1] -\n               sat_[row1][col2 + 1] + sat_[row1][col1];\n    }\n\n   private:\n    vector<vector<int>> sat_;\n};\n"})})}),(0,i.jsx)(a,{value:"py",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"class NumMatrix:\n    def __init__(self, matrix: List[List[int]]):\n        m, n = len(matrix), len(matrix[0])\n        self.sat = [[0 for _ in range(n + 1)] for _ in range(m + 1)]\n        \n        for i in range(1, m + 1):\n            for j in range(1, n + 1):\n                self.sat[i][j] = (\n                    matrix[i - 1][j - 1]\n                    + self.sat[i - 1][j]\n                    + self.sat[i][j - 1]\n                    - self.sat[i - 1][j - 1]\n                )\n\n    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:\n        return (\n            self.sat[row2 + 1][col2 + 1]\n            - self.sat[row2 + 1][col1]\n            - self.sat[row1][col2 + 1]\n            + self.sat[row1][col1]\n        )\n\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"560-subarray-sum-equals-k",children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/subarray-sum-equals-k/",children:"560. Subarray Sum Equals K"})}),"\n",(0,i.jsx)(n.h3,{id:"\u984c\u76ee\u63cf\u8ff0-2",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,i.jsx)(n.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5bfb\u627e\u548c\u4e3a k \u7684\u8fde\u7eed\u533a\u95f4\u4e2a\u6570\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-2",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,i.jsx)(n.p,{children:"\u8f93\u5165\u4e00\u4e2a\u4e00\u7ef4\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570\u503c k\uff1b\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6ee1\u8db3\u6761\u4ef6\u7684\u8fde\u7eed\u533a\u95f4\u4e2a\u6570\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Input: nums = [1,1,1], k = 2\nOutput: 2\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u8fd9\u4e2a\u6837\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e24\u4e2a [1,1] \u8fde\u7eed\u533a\u95f4\u6ee1\u8db3\u6761\u4ef6\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u984c\u89e3-2",children:"\u984c\u89e3"}),"\n",(0,i.jsx)(n.p,{children:"\u672c\u9898\u540c\u6837\u662f\u5229\u7528\u524d\u7f00\u548c\uff0c\u4e0d\u540c\u7684\u662f\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u54c8\u5e0c\u8868 cache\uff0c\u5176\u952e\u662f\u524d\u7f00\u548c\uff0c\u800c\u503c\u662f\u8be5\u524d\u7f00\u548c\u51fa\u73b0\u7684\u6b21\u6570\u3002\u5728\u6211\u4eec\u904d\u5386\u5230\u4f4d\u7f6e i \u65f6\uff0c\u5047\u8bbe\u5f53\u524d\u7684\u524d\u7f00\u548c\u662f cumsum\uff0c\u90a3\u4e48 cache[cumsum-k] \u5373\u4e3a\u4ee5\u5f53\u524d\u4f4d\u7f6e\u7ed3\u5c3e\u3001\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4\u4e2a\u6570\u3002"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(a,{value:"cpp",label:"C++",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"int subarraySum(vector<int>& nums, int k) {\n    int count = 0, cumsum = 0;\n    unordered_map<int, int> cache;  // <cumsum, frequency>\n    cache[0] = 1;\n    for (int num : nums) {\n        cumsum += num;\n        count += cache[cumsum - k];\n        ++cache[cumsum];\n    }\n    return count;\n}\n"})})}),(0,i.jsx)(a,{value:"py",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"def subarraySum(nums: List[int], k: int) -> int:\n    count, cur_sum = 0, 0\n    cache = {0: 1} # <cumsum, frequency>\n    for num in nums:\n        cur_sum += num\n        count += cache.get(cur_sum - k, 0)\n        cache[cur_sum] = cache.get(cur_sum, 0) + 1\n    return count\n"})})})]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},873:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/10.4-859c47a25a3275dfd5bdd76b3fc6eff1.png"},4624:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/10.5-bbec878fb3af2fc04d0d9ccb78a57761.png"}}]);