"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[4626],{4199:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"graphs/14-4-exercises","title":"14.4 \u7df4\u7fd2","description":"\u57fa\u790e\u96e3\u5ea6","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/14-graphs/14-4-exercises.md","sourceDirName":"14-graphs","slug":"/graphs/14-4-exercises","permalink":"/leetcode_101/zh-TW/graphs/14-4-exercises","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/14-graphs/14-4-exercises.md","tags":[],"version":"current","sidebarPosition":78,"frontMatter":{"sidebar_position":78},"sidebar":"tutorialSidebar","previous":{"title":"14.3 \u62d3\u64b2\u6392\u5e8f","permalink":"/leetcode_101/zh-TW/graphs/14-3-topological-sorting"},"next":{"title":"15. \u66f4\u52a0\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784","permalink":"/leetcode_101/zh-TW/category/15-\u66f4\u52a0\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784"}}');var r=s(4848),t=s(8453);const l={sidebar_position:78},o="14.4 \u7df4\u7fd2",d={},c=[{value:"\u57fa\u790e\u96e3\u5ea6",id:"\u57fa\u790e\u96e3\u5ea6",level:2},{value:"1059. All Paths from Source Lead to Destination",id:"1059-all-paths-from-source-lead-to-destination",level:3},{value:"\u9032\u968e\u96e3\u5ea6",id:"\u9032\u968e\u96e3\u5ea6",level:2},{value:"1135. Connecting Cities With Minimum Cost",id:"1135-connecting-cities-with-minimum-cost",level:3},{value:"882. Reachable Nodes In Subdivided Graph",id:"882-reachable-nodes-in-subdivided-graph",level:3}];function h(e){const i={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"144-\u7df4\u7fd2",children:"14.4 \u7df4\u7fd2"})}),"\n",(0,r.jsx)(i.h2,{id:"\u57fa\u790e\u96e3\u5ea6",children:"\u57fa\u790e\u96e3\u5ea6"}),"\n",(0,r.jsx)(i.h3,{id:"1059-all-paths-from-source-lead-to-destination",children:(0,r.jsx)(i.a,{href:"https://leetcode.com/problems/all-paths-from-source-lead-to-destination/",children:"1059. All Paths from Source Lead to Destination"})}),"\n",(0,r.jsx)(i.p,{children:"\u96d6\u7136\u4f7f\u7528\u6df1\u5ea6\u512a\u5148\u641c\u5c0b\uff08DFS\uff09\u53ef\u4ee5\u89e3\u6c7a\u5927\u90e8\u5206\u5716\u7684\u904d\u6b77\u554f\u984c\uff0c\u4f46\u9700\u8981\u7279\u5225\u6ce8\u610f\u6aa2\u67e5\u662f\u5426\u9677\u5165\u4e86\u74b0\u8def\u3002"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"\u9032\u968e\u96e3\u5ea6",children:"\u9032\u968e\u96e3\u5ea6"}),"\n",(0,r.jsx)(i.h3,{id:"1135-connecting-cities-with-minimum-cost",children:(0,r.jsx)(i.a,{href:"https://leetcode.com/problems/connecting-cities-with-minimum-cost/",children:"1135. Connecting Cities With Minimum Cost"})}),"\n",(0,r.jsx)(i.p,{children:"\u7b46\u8005\u5176\u5be6\u5df2\u7d93\u64b0\u5beb\u4e86\u9019\u9053\u984c\u7684\u8a73\u7d30\u89e3\u7b54\uff0c\u4f46\u5f8c\u4f86\u767c\u73fe\u8a72\u984c\u9700\u8981\u4ed8\u8cbb\u89e3\u9396\u624d\u80fd\u67e5\u770b\u3002\u70ba\u4e86\u907f\u514d\u7248\u6b0a\u7cfe\u7d1b\uff0c\u5c07\u6b64\u984c\u79fb\u81f3\u7df4\u7fd2\u984c\u4e2d\u3002\u672c\u984c\u8003\u5bdf\u6700\u5c0f\u751f\u6210\u6a39\uff08minimum spanning tree, MST\uff09\u7684\u6c42\u6cd5\uff0c\u901a\u5e38\u53ef\u4ee5\u7528\u5169\u7a2e\u6f14\u7b97\u6cd5\u5be6\u73fe\uff1a"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Prim\u2019s Algorithm"}),"\uff1a\u5229\u7528\u512a\u5148\u4f47\u5217\u9078\u64c7\u6700\u5c0f\u7684\u6d88\u8017\u3002"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Kruskal\u2019s Algorithm"}),"\uff1a\u5c0d\u908a\u6392\u5e8f\u5f8c\u4f7f\u7528\u4e26\u67e5\u96c6\uff08Union-Find\uff09\u3002"]}),"\n"]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"882-reachable-nodes-in-subdivided-graph",children:(0,r.jsx)(i.a,{href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph/",children:"882. Reachable Nodes In Subdivided Graph"})}),"\n",(0,r.jsx)(i.p,{children:"\u7b46\u8005\u8003\u616e\u4e86\u5f88\u4e45\uff0c\u6700\u7d42\u6c7a\u5b9a\u5c07\u9019\u9053\u984c\u653e\u5728\u7df4\u7fd2\u984c\u4e2d\uff0c\u800c\u975e\u8a73\u7d30\u8b1b\u89e3\u3002\u672c\u984c\u5c6c\u65bc\u7d93\u5178\u7684\u7bc0\u9ede\u6700\u77ed\u8ddd\u96e2\u554f\u984c\uff0c\u5e38\u7528\u7684\u89e3\u6cd5\u5305\u62ec\uff1a"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Bellman-Ford"})," \u55ae\u6e90\u6700\u77ed\u8def\u6f14\u7b97\u6cd5\uff08\u5141\u8a31\u8ca0\u908a\u6b0a\u91cd\uff09\u3002"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Dijkstra"})," \u7121\u8ca0\u908a\u55ae\u6e90\u6700\u77ed\u8def\u6f14\u7b97\u6cd5\u3002"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"\u96d6\u7136\u9019\u4e9b\u90fd\u662f\u7d93\u5178\u6f14\u7b97\u6cd5\uff0c\u4f46 LeetCode \u4e2d\u76f8\u95dc\u984c\u578b\u8f03\u5c11\uff0c\u56e0\u6b64\u9019\u88e1\u50c5\u4f9b\u8b80\u8005\u81ea\u884c\u6df1\u5165\u5b78\u7fd2\u3002"})]})}function a(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);