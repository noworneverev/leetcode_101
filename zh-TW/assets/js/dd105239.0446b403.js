"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[897],{2328:(n,s,e)=>{e.r(s),e.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"divide-and-conquer/7-2-expression-problems","title":"7.2 \u8868\u9054\u5f0f\u554f\u984c","description":"241. Di\ufb00erent Ways to Add Parentheses","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/7-divide-and-conquer/7-2-expression-problems.mdx","sourceDirName":"7-divide-and-conquer","slug":"/divide-and-conquer/7-2-expression-problems","permalink":"/leetcode_101/zh-TW/divide-and-conquer/7-2-expression-problems","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":36,"frontMatter":{"sidebar_position":36},"sidebar":"tutorialSidebar","previous":{"title":"7.1 \u7b97\u6cd5\u89e3\u91cb","permalink":"/leetcode_101/zh-TW/divide-and-conquer/7-1-algorithm-explanation"},"next":{"title":"7.3 \u7df4\u7fd2","permalink":"/leetcode_101/zh-TW/divide-and-conquer/7-3-exercises"}}');var a=e(4848),r=e(8453);const t={sidebar_position:36},l="7.2 \u8868\u9054\u5f0f\u554f\u984c",c={},d=[{value:"241. Di\ufb00erent Ways to Add Parentheses",id:"241-di\ufb00erent-ways-to-add-parentheses",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3",level:3},{value:"\u8907\u96dc\u5ea6\u5206\u6790",id:"\u8907\u96dc\u5ea6\u5206\u6790",level:3}];function o(n){const s={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...n.components},{TabItem:e,Tabs:i}=s;return e||m("TabItem",!0),i||m("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"72-\u8868\u9054\u5f0f\u554f\u984c",children:"7.2 \u8868\u9054\u5f0f\u554f\u984c"})}),"\n",(0,a.jsx)(s.h2,{id:"241-di\ufb00erent-ways-to-add-parentheses",children:(0,a.jsx)(s.a,{href:"https://leetcode.com/problems/different-ways-to-add-parentheses/",children:"241. Di\ufb00erent Ways to Add Parentheses"})}),"\n",(0,a.jsx)(s.h3,{id:"\u984c\u76ee\u63cf\u8ff0",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,a.jsx)(s.p,{children:"\u7d66\u5b9a\u4e00\u500b\u53ea\u5305\u542b\u52a0\u3001\u6e1b\u548c\u4e58\u6cd5\u7684\u6578\u5b78\u8868\u9054\u5f0f\uff0c\u6c42\u901a\u904e\u52a0\u62ec\u865f\u53ef\u4ee5\u5f97\u5230\u591a\u5c11\u7a2e\u4e0d\u540c\u7684\u7d50\u679c\u3002"}),"\n",(0,a.jsx)(s.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,a.jsx)(s.p,{children:"\u8f38\u5165\u662f\u4e00\u500b\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u6578\u5b78\u8868\u9054\u5f0f\uff1b\u8f38\u51fa\u662f\u4e00\u500b\u9663\u5217\uff0c\u5132\u5b58\u6240\u6709\u4e0d\u540c\u7684\u52a0\u62ec\u865f\u7d50\u679c\u3002"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:'Input: "2-1-1"\nOutput: [0, 2]\n'})}),"\n",(0,a.jsx)(s.p,{children:"\u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c\u6709\u5169\u7a2e\u52a0\u62ec\u865f\u7d50\u679c\uff1a((2-1)-1) = 0 \u548c (2-(1-1)) = 2\u3002"}),"\n",(0,a.jsx)(s.h3,{id:"\u984c\u89e3",children:"\u984c\u89e3"}),"\n",(0,a.jsx)(s.p,{children:"\u5229\u7528\u5206\u6cbb\u601d\u60f3\uff0c\u6211\u5011\u53ef\u4ee5\u628a\u52a0\u62ec\u865f\u8f49\u5316\u70ba\uff0c\u5c0d\u65bc\u6bcf\u500b\u904b\u7b97\u7b26\u865f\uff0c\u5148\u57f7\u884c\u8655\u7406\u5169\u5074\u7684\u6578\u5b78\u8868\u9054\u5f0f\uff0c\u518d\u8655\u7406\u6b64\u904b\u7b97\u7b26\u865f\u3002\u6ce8\u610f\u908a\u754c\u60c5\u6cc1\uff0c\u5373\u5b57\u7b26\u4e32\u5167\u7121\u904b\u7b97\u7b26\u865f\uff0c\u53ea\u6709\u6578\u5b57\u3002"}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)(e,{value:"cpp",label:"C++",children:(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"vector<int> diffWaysToCompute(string expression) {\n    vector<int> ways;\n    unordered_map<char, function<int(int, int)>> op_funcs;\n    op_funcs[\u2019+\u2019] = [](int x, int y) { return x + y; };\n    op_funcs[\u2019-\u2019] = [](int x, int y) { return x - y; };\n    op_funcs[\u2019*\u2019] = [](int x, int y) { return x * y; };\n    for (int i = 0; i < expression.length(); ++i) {\n        char c = expression[i];\n        if (!op_funcs.contains(c)) {\n            continue;\n        }\n        auto left = diffWaysToCompute(expression.substr(0, i));\n        auto right = diffWaysToCompute(expression.substr(i + 1));\n        for (int l : left) {\n            for (int r : right) {\n                ways.push_back(op_funcs[c](l, r));\n            }\n        }\n    }\n    return ways.empty() ? vector<int>{stoi(expression)} : ways;\n}\n"})})}),(0,a.jsx)(e,{value:"py",label:"Python",children:(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-py",children:'def diffWaysToCompute(expression: str) -> List[int]:\n    ways = []\n    op_funcs = {\n        "+": (lambda x, y: x + y),\n        "-": (lambda x, y: x - y),\n        "*": (lambda x, y: x * y),\n    }\n    for i, c in enumerate(expression):\n        if c not in op_funcs:\n            continue\n        left = diffWaysToCompute(expression[:i])\n        right = diffWaysToCompute(expression[i + 1 :])\n        ways += [op_funcs[c](l, r) for l in left for r in right]\n    return [int(expression)] if len(ways) == 0 else ways\n'})})})]}),"\n",(0,a.jsx)(s.h3,{id:"\u8907\u96dc\u5ea6\u5206\u6790",children:"\u8907\u96dc\u5ea6\u5206\u6790"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["\u5047\u8a2d ",(0,a.jsx)(s.code,{children:"n"})," \u662f\u904b\u7b97\u7b26 (",(0,a.jsx)(s.code,{children:"+"}),", ",(0,a.jsx)(s.code,{children:"-"}),", ",(0,a.jsx)(s.code,{children:"*"}),") \u7684\u6578\u91cf\uff0c\u5247\u554f\u984c\u7684\u905e\u6b78\u6a39\u5927\u5c0f\u70ba ",(0,a.jsx)(s.strong,{children:"\u5361\u5854\u862d\u6578 (Catalan number)"}),"\uff1a","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"\u6700\u58de\u60c5\u6cc1"}),": ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"O"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mn,{children:"2"}),(0,a.jsx)(s.mi,{children:"n"})]}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(2^n)"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord",children:"2"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.6644em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"})})]})})})})})]}),(0,a.jsx)(s.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"\u5e73\u5747\u60c5\u6cc1"}),": \u4ecb\u65bc ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"O"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mn,{children:"2"}),(0,a.jsx)(s.mi,{children:"n"})]}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(2^n)"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord",children:"2"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.6644em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"})})]})})})})})]}),(0,a.jsx)(s.span,{className:"mclose",children:")"})]})})]})," \u548c ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"O"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"!"}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n!)"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"mclose",children:"!)"})]})})]})," \u4e4b\u9593"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\u7a7a\u9593\u8907\u96dc\u5ea6: ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"O"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"mclose",children:")"})]})})]}),"\uff08\u905e\u6b78\u6df1\u5ea6\u70ba ",(0,a.jsx)(s.code,{children:"n"}),"\uff09"]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["\u6211\u5011\u767c\u73fe\uff0c\u67d0\u4e9b\u88ab ",(0,a.jsx)(s.code,{children:"divide"})," \u7684\u5b50\u5b57\u4e32\u53ef\u80fd\u91cd\u8907\u51fa\u73fe\u591a\u6b21\uff0c\u56e0\u6b64\u6211\u5011\u53ef\u4ee5\u5229\u7528 ",(0,a.jsx)(s.code,{children:"memoization"})," \u4f86\u907f\u514d\u91cd\u8907\u8a08\u7b97\u3002\u4f8b\u5982\uff0c\u6211\u5011\u53ef\u4ee5\u5efa\u7acb\u4e00\u500b\u96dc\u6e4a\u8868\uff0c",(0,a.jsx)(s.code,{children:"key"})," \u662f ",(0,a.jsx)(s.code,{children:"(l, r)"}),"\uff0c",(0,a.jsx)(s.code,{children:"value"})," \u662f ",(0,a.jsx)(s.code,{children:"ways"}),"\u3002\u7576\u518d\u6b21\u9047\u5230\u76f8\u540c\u7684 ",(0,a.jsx)(s.code,{children:"(l, r)"})," \u6642\uff0c\u6211\u5011\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u5df2\u7d93\u8a08\u7b97\u904e\u7684 ",(0,a.jsx)(s.code,{children:"ways"}),"\u3002\u6216\u8005\uff0c\u8207\u5176\u6211\u5011\u5f9e\u4e0a\u5230\u4e0b\u7528\u5206\u6cbb\u6cd5\u7d50\u5408 ",(0,a.jsx)(s.code,{children:"memoization"}),"\uff0c\u4e0d\u5982\u76f4\u63a5\u5f9e\u4e0b\u5230\u4e0a\u4f7f\u7528\u52d5\u614b\u898f\u5283\u8655\u7406\u3002"]}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)(e,{value:"cpp",label:"C++",children:(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"vector<int> diffWaysToCompute(string expression) {\n    // \u5229\u7528 istringstream\uff0c\u5c07\u6578\u5b57\u548c\u904b\u7b97\u7b26\u9032\u884c\u5206\u8a5e\u3002\n    vector<int> nums;\n    vector<char> ops;\n    int num = 0;\n    char op = \u2019 \u2019;\n    istringstream ss(expression);\n    while (ss >> num) {\n        nums.push_back(num);\n        if (ss >> op) {\n            ops.push_back(op);\n        }\n    }\n    int n = nums.size();\n    vector<vector<vector<int>>> dp(n, vector<vector<int>>(n, vector<int>()));\n    unordered_map<char, function<int(int, int)>> op_funcs;\n    op_funcs[\u2019+\u2019] = [](int a, int b) { return a + b; };\n    op_funcs[\u2019-\u2019] = [](int a, int b) { return a - b; };\n    op_funcs[\u2019*\u2019] = [](int a, int b) { return a * b; };\n    for (int i = 0; i < n; ++i) {\n        for (int j = i; j >= 0; --j) {\n            if (i == j) {\n                dp[j][i].push_back(nums[i]);\n                continue;\n            }\n            for (int k = j; k < i; ++k) {\n                for (auto l : dp[j][k]) {\n                    for (auto r : dp[k + 1][i]) {\n                        dp[j][i].push_back(op_funcs[ops[k]](l, r));\n                    }\n                }\n            }\n        }\n    }\n    return dp[0][n - 1];\n}\n"})})}),(0,a.jsx)(e,{value:"py",label:"Python",children:(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-py",children:'def diffWaysToCompute(expression: str) -> List[int]:\n    # re.split \u53ef\u4ee5\u76f4\u63a5\u5c07\u904b\u7b97\u7b26\uff08\\D\uff09\u548c\u6578\u5b57\u5206\u958b\u3002\n    sections = re.split(r"(\\D)", expression)\n    nums = [int(num) for num in sections if num.isdigit()]\n    ops = [op for op in sections if not op.isdigit()]\n    n = len(nums)\n    dp = [[[] for _ in range(n)] for _ in range(n)]\n    op_funcs = {\n        "+": (lambda x, y: x + y),\n        "-": (lambda x, y: x - y),\n        "*": (lambda x, y: x * y),\n    }\n    for i in range(n):\n        for j in range(i, -1, -1):\n            if i == j:\n                dp[j][i].append(nums[i])\n                continue\n            for k in range(j, i):\n                dp[j][i] += [op_funcs[ops[k]](l, r)\n                            for l in dp[j][k] for r in dp[k + 1][i]]\n\n    return dp[0][n - 1]\n             \n'})})})]})]})}function h(n={}){const{wrapper:s}={...(0,r.R)(),...n.components};return s?(0,a.jsx)(s,{...n,children:(0,a.jsx)(o,{...n})}):o(n)}function m(n,s){throw new Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);