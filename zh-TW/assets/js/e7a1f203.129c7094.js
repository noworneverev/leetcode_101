"use strict";(self.webpackChunkleetcode_101=self.webpackChunkleetcode_101||[]).push([[138],{1570:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>o,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"bitwise-operations/9-2-basic-bitwise-problems","title":"9.2 \u4f4d\u904b\u7b97\u57fa\u790e\u554f\u984c","description":"461. Hamming Distance","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/9-bitwise-operations/9-2-basic-bitwise-problems.mdx","sourceDirName":"9-bitwise-operations","slug":"/bitwise-operations/9-2-basic-bitwise-problems","permalink":"/leetcode_101/zh-TW/bitwise-operations/9-2-basic-bitwise-problems","draft":false,"unlisted":false,"editUrl":"https://github.com/noworneverev/leetcode_101/tree/master/leetcode_101/docs/9-bitwise-operations/9-2-basic-bitwise-problems.mdx","tags":[],"version":"current","sidebarPosition":45,"frontMatter":{"sidebar_position":45},"sidebar":"tutorialSidebar","previous":{"title":"9.1 \u5e38\u7528\u6280\u5de7","permalink":"/leetcode_101/zh-TW/bitwise-operations/9-1-common-techniques"},"next":{"title":"9.3 \u4e8c\u9032\u5236\u7279\u6027","permalink":"/leetcode_101/zh-TW/bitwise-operations/9-3-binary-properties"}}');var r=i(4848),l=i(8453);const t={sidebar_position:45},d="9.2 \u4f4d\u904b\u7b97\u57fa\u790e\u554f\u984c",c={},a=[{value:"461. Hamming Distance",id:"461-hamming-distance",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3",level:3},{value:"190. Reverse Bits",id:"190-reverse-bits",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0-1",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-1",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3-1",level:3},{value:"136. Single Number",id:"136-single-number",level:2},{value:"\u984c\u76ee\u63cf\u8ff0",id:"\u984c\u76ee\u63cf\u8ff0-2",level:3},{value:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-2",level:3},{value:"\u984c\u89e3",id:"\u984c\u89e3-2",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components},{TabItem:i,Tabs:s}=n;return i||u("TabItem",!0),s||u("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"92-\u4f4d\u904b\u7b97\u57fa\u790e\u554f\u984c",children:"9.2 \u4f4d\u904b\u7b97\u57fa\u790e\u554f\u984c"})}),"\n",(0,r.jsx)(n.h2,{id:"461-hamming-distance",children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/hamming-distance/",children:"461. Hamming Distance"})}),"\n",(0,r.jsx)(n.h3,{id:"\u984c\u76ee\u63cf\u8ff0",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,r.jsx)(n.p,{children:"\u7d66\u5b9a\u5169\u500b\u5341\u9032\u5236\u6578\u5b57\uff0c\u6c42\u5b83\u5011\u4e8c\u9032\u5236\u8868\u793a\u7684\u6f22\u660e\u8ddd\u96e2\uff08Hamming distance\uff0c\u5373\u4e0d\u540c\u4f4d\u7684\u500b\u6578\uff09\u3002"}),"\n",(0,r.jsx)(n.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,r.jsx)(n.p,{children:"\u8f93\u5165\u662f\u4e24\u4e2a\u5341\u8fdb\u5236\u6574\u6570\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u5341\u8fdb\u5236\u6574\u6570\uff0c\u8868\u793a\u4e24\u4e2a\u8f93\u5165\u6570\u5b57\u7684\u6c49\u660e\u8ddd\u79bb\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: x = 1, y = 4\nOutput: 2\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c1 \u7684\u4e8c\u9032\u5236\u662f 0001\uff0c4 \u7684\u4e8c\u9032\u5236\u662f 0100\uff0c\u4e00\u5171\u6709\u5169\u4f4d\u4e0d\u540c\u3002"}),"\n",(0,r.jsx)(n.h3,{id:"\u984c\u89e3",children:"\u984c\u89e3"}),"\n",(0,r.jsx)(n.p,{children:"\u5c0d\u5169\u500b\u6578\u9032\u884c\u6309\u4f4d\u7570\u6216\u64cd\u4f5c\uff0c\u7d71\u8a08\u7d50\u679c\u4e2d\u6709\u591a\u5c11\u500b 1 \u5373\u53ef\u3002"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(i,{value:"cpp",label:"C++",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"int hammingDistance(int x, int y) {\n    int diff = x ^ y, dist = 0;\n    while (diff != 0) {\n        dist += diff & 1;\n        diff >>= 1;\n    }\n    return dist;\n}\n"})})}),(0,r.jsx)(i,{value:"py",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"def hammingDistance(x: int, y: int) -> int:\n    diff = x ^ y\n    dist = 0\n    while diff != 0:\n        dist += diff & 1\n        diff = diff >> 1\n    return dist\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"190-reverse-bits",children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/reverse-bits/",children:"190. Reverse Bits"})}),"\n",(0,r.jsx)(n.h3,{id:"\u984c\u76ee\u63cf\u8ff0-1",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,r.jsx)(n.p,{children:"\u7d66\u5b9a\u4e00\u500b\u5341\u9032\u5236\u6b63\u6574\u6578\uff0c\u8f38\u51fa\u5b83\u5728\u4e8c\u9032\u5236\u4e0b\u7684\u7ffb\u8f49\u7d50\u679c\u3002"}),"\n",(0,r.jsx)(n.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-1",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,r.jsx)(n.p,{children:"\u8f38\u5165\u548c\u8f38\u51fa\u90fd\u662f\u5341\u9032\u5236\u6b63\u6574\u6578\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: 43261596 (00000010100101000001111010011100)\nOutput: 964176192 (00111001011110000010100101000000)\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u4f7f\u7528\u7b97\u8853\u5de6\u79fb\u548c\u53f3\u79fb\uff0c\u53ef\u4ee5\u5f88\u8f15\u6613\u5730\u5be6\u73fe\u4e8c\u9032\u5236\u7684\u7ffb\u8f49\u3002"}),"\n",(0,r.jsx)(n.h3,{id:"\u984c\u89e3-1",children:"\u984c\u89e3"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(i,{value:"cpp",label:"C++",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"uint32_t reverseBits(uint32_t n) {\n    uint32_t m = 0;\n    for (int i = 0; i < 32; ++i) {\n        m <<= 1;\n        m += n & 1;\n        n >>= 1;\n    }\n    return m;\n}\n"})})}),(0,r.jsx)(i,{value:"py",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"def reverseBits(n: int) -> int:\n    m = 0\n    for _ in range(32):\n        m = m << 1\n        m += n & 1\n        n = n >> 1\n    return m\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"136-single-number",children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/single-number/",children:"136. Single Number"})}),"\n",(0,r.jsx)(n.h3,{id:"\u984c\u76ee\u63cf\u8ff0-2",children:"\u984c\u76ee\u63cf\u8ff0"}),"\n",(0,r.jsx)(n.p,{children:"\u7d66\u5b9a\u4e00\u500b\u6574\u6578\u9663\u5217\uff0c\u9019\u500b\u9663\u5217\u88e1\u53ea\u6709\u4e00\u500b\u6578\u5b57\u53ea\u51fa\u73fe\u4e86\u4e00\u6b21\uff0c\u5176\u9918\u6578\u5b57\u51fa\u73fe\u4e86\u5169\u6b21\uff0c\u6c42\u9019\u500b\u53ea\u51fa\u73fe\u4e00\u6b21\u7684\u6578\u5b57\u3002"}),"\n",(0,r.jsx)(n.h3,{id:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b-2",children:"\u8f38\u5165\u8f38\u51fa\u7bc4\u4f8b"}),"\n",(0,r.jsx)(n.p,{children:"\u8f38\u5165\u662f\u4e00\u500b\u4e00\u7dad\u6574\u6578\u9663\u5217\uff0c\u8f38\u51fa\u662f\u8a72\u9663\u5217\u5167\u7684\u4e00\u500b\u6574\u6578\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: [4,1,2,1,2]\nOutput: 4\n"})}),"\n",(0,r.jsx)(n.h3,{id:"\u984c\u89e3-2",children:"\u984c\u89e3"}),"\n",(0,r.jsx)(n.p,{children:"\u6211\u5011\u53ef\u4ee5\u5229\u7528 x \u2227 x = 0 \u548c x \u2227 0 = x \u7684\u7279\u9ede\uff0c\u5c07\u9663\u5217\u5167\u6240\u6709\u7684\u6578\u5b57\u9032\u884c\u6309\u4f4d\u7570\u6216\u3002\u51fa\u73fe\u5169\u6b21\u7684\u6240\u6709\u6578\u5b57\u6309\u4f4d\u7570\u6216\u7684\u7d50\u679c\u662f 0\uff0c0 \u8207\u51fa\u73fe\u4e00\u6b21\u7684\u6578\u5b57\u7570\u6216\u53ef\u4ee5\u5f97\u5230\u9019\u500b\u6578\u5b57\u672c\u8eab\u3002"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(i,{value:"cpp",label:"C++",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"int singleNumber(vector<int>& nums) {\n    int single = 0;\n    for (int num : nums) {\n        single ^= num;\n    }\n    return single;\n}\n"})})}),(0,r.jsx)(i,{value:"py",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"def singleNumber(nums: List[int]) -> int:\n    single = 0\n    for num in nums:\n        single = single ^ num\n    return single\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["\u9019\u88e1\u6211\u5011\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"reduce"})," \u51fd\u6578\uff1a"]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(i,{value:"cpp",label:"C++",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"int singleNumber(vector<int>& nums) {\n    return reduce(nums.begin(), nums.end(), 0,\n                  [](int x, int y) { return x ^ y; });\n}\n"})})}),(0,r.jsx)(i,{value:"py",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"def singleNumber(nums: List[int]) -> int:\n    return functools.reduce(lambda x, y: x ^ y, nums)\n"})})})]})]})}function o(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);